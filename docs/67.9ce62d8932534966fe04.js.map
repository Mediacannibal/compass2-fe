{"version":3,"sources":["webpack:///./node_modules/sdp/sdp.js","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js"],"names":["SDPUtils","Math","random","toString","substr","localCName","generateIdentifier","splitLines","blob","trim","split","map","line","splitSections","part","index","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","indexOf","parseCandidate","parts","candidate","foundation","substring","component","parseInt","protocol","toLowerCase","priority","ip","address","port","type","i","length","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","push","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","id","direction","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","Object","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","slice","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","parseSctpDescription","maxMessageSize","parseMLine","maxSizeLine","isNaN","sctpPort","fmt","writeSctpDescription","media","sctp","output","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","version","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","charAt","module","exports","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","this","arguments","wrappedCallback","e","modifiedEvent","handleEvent","_eventMap","Map","set","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","size","defineProperty","enumerable","configurable","disableLog","bool","Error","disableWarnings","log","console","deprecated","oldMethod","newMethod","warn","isObject","val","call","compactObject","data","reduce","accumulator","key","isObj","isEmptyObject","assign","filterStats","result","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","stats","trackId","walkStats","base","resultSet","endsWith","shimGetUserMedia","browserDetails","navigator","mediaDevices","constraintsToChrome_","c","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","oc","mix","advanced","concat","shimConstraints_","constraints","func","audio","remap","a","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","then","devices","dev","d","find","some","label","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","webkitGetUserMedia","bind","origGetUserMedia","cs","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","receiver","getReceivers","event","Event","streams","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimGetStats","origGetStats","getStats","selector","onSucc","onErr","fixChromeStats_","response","standardReport","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","successCallbackWrapper_","resolve","shimSenderReceiverGetStats","RTCRtpReceiver","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","signalingState","t","alreadyExists","oldStream","method","nativeMethod","methodObj","args","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","RTCIceCandidate","fixNegotiationNeeded","target","getConfiguration","sdpSemantics","catch","RTCIceGatherer","origMSTEnabled","ev","enabled","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","config","iceServers","edgeVersion","hasTurn","server","urls","url","isString","validTurn","startsWith","filterIceServers","shimReplaceTrack","replaceTrack","setTrack","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","preferredMediaSource","code","mediaSource","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","initParameters","shouldPerformCheck","sendEncodings","encodingParam","test","rid","TypeError","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","getParameters","encodings","setParameters","shimGetParameters","origGetParameters","shimCreateOffer","origCreateOffer","createOffer","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","addIceCandidate","successCallback","failureCallback","options","promise","withCallback","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","hasOwnProperty","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","setDirection","offerToReceiveVideo","videoTransceiver","shimAudioContext","AudioContext","webkitAudioContext","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","toJSON","sdpMid","sdpMLineIndex","writable","shimMaxMessageSize","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","browser","getMaxMessageSize","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","byteLength","readyState","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeExtmapAllowMixed","nativeSRD","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","shimChrome","shimFirefox","shimEdge","shimSafari","logging","mozGetUserMedia","userAgent","isSecureContext","supportsUnifiedPlan","RTCRtpTransceiver","adapter","commonShim","browserShim","adapterFactory"],"mappings":"8FAIA,IAAIA,EAAW,CAIf,mBAA8B,WAC5B,OAAOC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,MAI9CJ,EAASK,WAAaL,EAASM,qBAG/BN,EAASO,WAAa,SAASC,GAC7B,OAAOA,EAAKC,OAAOC,MAAM,MAAMC,KAAI,SAASC,GAC1C,OAAOA,EAAKH,WAIhBT,EAASa,cAAgB,SAASL,GAEhC,OADYA,EAAKE,MAAM,QACVC,KAAI,SAASG,EAAMC,GAC9B,OAAQA,EAAQ,EAAI,KAAOD,EAAOA,GAAML,OAAS,WAKrDT,EAASgB,eAAiB,SAASR,GACjC,IAAIS,EAAWjB,EAASa,cAAcL,GACtC,OAAOS,GAAYA,EAAS,IAI9BjB,EAASkB,iBAAmB,SAASV,GACnC,IAAIS,EAAWjB,EAASa,cAAcL,GAEtC,OADAS,EAASE,QACFF,GAITjB,EAASoB,YAAc,SAASZ,EAAMa,GACpC,OAAOrB,EAASO,WAAWC,GAAMc,QAAO,SAASV,GAC/C,OAAgC,IAAzBA,EAAKW,QAAQF,OAOxBrB,EAASwB,eAAiB,SAASZ,GAqBjC,IApBA,IAAIa,EAQAC,EAAY,CACdC,YANAF,EADmC,IAAjCb,EAAKW,QAAQ,gBACPX,EAAKgB,UAAU,IAAIlB,MAAM,KAEzBE,EAAKgB,UAAU,IAAIlB,MAAM,MAIf,GAClBmB,UAAWC,SAASL,EAAM,GAAI,IAC9BM,SAAUN,EAAM,GAAGO,cACnBC,SAAUH,SAASL,EAAM,GAAI,IAC7BS,GAAIT,EAAM,GACVU,QAASV,EAAM,GACfW,KAAMN,SAASL,EAAM,GAAI,IAEzBY,KAAMZ,EAAM,IAGLa,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,GAAK,EACrC,OAAQb,EAAMa,IACZ,IAAK,QACHZ,EAAUc,eAAiBf,EAAMa,EAAI,GACrC,MACF,IAAK,QACHZ,EAAUe,YAAcX,SAASL,EAAMa,EAAI,GAAI,IAC/C,MACF,IAAK,UACHZ,EAAUgB,QAAUjB,EAAMa,EAAI,GAC9B,MACF,IAAK,QACHZ,EAAUiB,MAAQlB,EAAMa,EAAI,GAC5BZ,EAAUkB,iBAAmBnB,EAAMa,EAAI,GACvC,MACF,QACEZ,EAAUD,EAAMa,IAAMb,EAAMa,EAAI,GAItC,OAAOZ,GAIT1B,EAAS6C,eAAiB,SAASnB,GACjC,IAAIoB,EAAM,GACVA,EAAIC,KAAKrB,EAAUC,YACnBmB,EAAIC,KAAKrB,EAAUG,WACnBiB,EAAIC,KAAKrB,EAAUK,SAASiB,eAC5BF,EAAIC,KAAKrB,EAAUO,UACnBa,EAAIC,KAAKrB,EAAUS,SAAWT,EAAUQ,IACxCY,EAAIC,KAAKrB,EAAUU,MAEnB,IAAIC,EAAOX,EAAUW,KAkBrB,OAjBAS,EAAIC,KAAK,OACTD,EAAIC,KAAKV,GACI,SAATA,GAAmBX,EAAUc,gBAC7Bd,EAAUe,cACZK,EAAIC,KAAK,SACTD,EAAIC,KAAKrB,EAAUc,gBACnBM,EAAIC,KAAK,SACTD,EAAIC,KAAKrB,EAAUe,cAEjBf,EAAUgB,SAAgD,QAArChB,EAAUK,SAASC,gBAC1Cc,EAAIC,KAAK,WACTD,EAAIC,KAAKrB,EAAUgB,WAEjBhB,EAAUkB,kBAAoBlB,EAAUiB,SAC1CG,EAAIC,KAAK,SACTD,EAAIC,KAAKrB,EAAUkB,kBAAoBlB,EAAUiB,QAE5C,aAAeG,EAAIG,KAAK,MAKjCjD,EAASkD,gBAAkB,SAAStC,GAClC,OAAOA,EAAKR,OAAO,IAAIM,MAAM,MAK/BV,EAASmD,YAAc,SAASvC,GAC9B,IAAIa,EAAQb,EAAKR,OAAO,GAAGM,MAAM,KAC7B0C,EAAS,CACXC,YAAavB,SAASL,EAAMN,QAAS,KAUvC,OAPAM,EAAQA,EAAM,GAAGf,MAAM,KAEvB0C,EAAOE,KAAO7B,EAAM,GACpB2B,EAAOG,UAAYzB,SAASL,EAAM,GAAI,IACtC2B,EAAOI,SAA4B,IAAjB/B,EAAMc,OAAeT,SAASL,EAAM,GAAI,IAAM,EAEhE2B,EAAOK,YAAcL,EAAOI,SACrBJ,GAKTpD,EAAS0D,YAAc,SAASC,GAC9B,IAAIC,EAAKD,EAAMN,iBACoBQ,IAA/BF,EAAMG,uBACRF,EAAKD,EAAMG,sBAEb,IAAIN,EAAWG,EAAMH,UAAYG,EAAMF,aAAe,EACtD,MAAO,YAAcG,EAAK,IAAMD,EAAML,KAAO,IAAMK,EAAMJ,WACvC,IAAbC,EAAiB,IAAMA,EAAW,IAAM,QAM/CxD,EAAS+D,YAAc,SAASnD,GAC9B,IAAIa,EAAQb,EAAKR,OAAO,GAAGM,MAAM,KACjC,MAAO,CACLsD,GAAIlC,SAASL,EAAM,GAAI,IACvBwC,UAAWxC,EAAM,GAAGF,QAAQ,KAAO,EAAIE,EAAM,GAAGf,MAAM,KAAK,GAAK,WAChEwD,IAAKzC,EAAM,KAMfzB,EAASmE,YAAc,SAASC,GAC9B,MAAO,aAAeA,EAAgBJ,IAAMI,EAAgBC,cACvDD,EAAgBH,WAA2C,aAA9BG,EAAgBH,UAC1C,IAAMG,EAAgBH,UACtB,IACJ,IAAMG,EAAgBF,IAAM,QAMlClE,EAASsE,UAAY,SAAS1D,GAI5B,IAHA,IACI2D,EADAnB,EAAS,GAET3B,EAAQb,EAAKR,OAAOQ,EAAKW,QAAQ,KAAO,GAAGb,MAAM,KAC5C8D,EAAI,EAAGA,EAAI/C,EAAMc,OAAQiC,IAEhCpB,GADAmB,EAAK9C,EAAM+C,GAAG/D,OAAOC,MAAM,MACjB,GAAGD,QAAU8D,EAAG,GAE5B,OAAOnB,GAITpD,EAASyE,UAAY,SAASd,GAC5B,IAAI/C,EAAO,GACPgD,EAAKD,EAAMN,YAIf,QAHmCQ,IAA/BF,EAAMG,uBACRF,EAAKD,EAAMG,sBAETH,EAAMe,YAAcC,OAAOC,KAAKjB,EAAMe,YAAYnC,OAAQ,CAC5D,IAAIsC,EAAS,GACbF,OAAOC,KAAKjB,EAAMe,YAAYI,SAAQ,SAASC,GACzCpB,EAAMe,WAAWK,GACnBF,EAAO9B,KAAKgC,EAAQ,IAAMpB,EAAMe,WAAWK,IAE3CF,EAAO9B,KAAKgC,MAGhBnE,GAAQ,UAAYgD,EAAK,IAAMiB,EAAO5B,KAAK,KAAO,OAEpD,OAAOrC,GAKTZ,EAASgF,YAAc,SAASpE,GAC9B,IAAIa,EAAQb,EAAKR,OAAOQ,EAAKW,QAAQ,KAAO,GAAGb,MAAM,KACrD,MAAO,CACL2B,KAAMZ,EAAMN,QACZ8D,UAAWxD,EAAMwB,KAAK,OAI1BjD,EAASkF,YAAc,SAASvB,GAC9B,IAAIwB,EAAQ,GACRvB,EAAKD,EAAMN,YAYf,YAXmCQ,IAA/BF,EAAMG,uBACRF,EAAKD,EAAMG,sBAETH,EAAMyB,cAAgBzB,EAAMyB,aAAa7C,QAE3CoB,EAAMyB,aAAaN,SAAQ,SAASO,GAClCF,GAAS,aAAevB,EAAK,IAAMyB,EAAGhD,MACrCgD,EAAGJ,WAAaI,EAAGJ,UAAU1C,OAAS,IAAM8C,EAAGJ,UAAY,IACxD,UAGDE,GAKTnF,EAASsF,eAAiB,SAAS1E,GACjC,IAAI2E,EAAK3E,EAAKW,QAAQ,KAClBE,EAAQ,CACV+D,KAAM1D,SAASlB,EAAKR,OAAO,EAAGmF,EAAK,GAAI,KAErCE,EAAQ7E,EAAKW,QAAQ,IAAKgE,GAO9B,OANIE,GAAS,GACXhE,EAAMiE,UAAY9E,EAAKR,OAAOmF,EAAK,EAAGE,EAAQF,EAAK,GACnD9D,EAAMkE,MAAQ/E,EAAKR,OAAOqF,EAAQ,IAElChE,EAAMiE,UAAY9E,EAAKR,OAAOmF,EAAK,GAE9B9D,GAGTzB,EAAS4F,eAAiB,SAAShF,GACjC,IAAIa,EAAQb,EAAKR,OAAO,IAAIM,MAAM,KAClC,MAAO,CACLmF,UAAWpE,EAAMN,QACjB2E,MAAOrE,EAAMd,KAAI,SAAS6E,GACxB,OAAO1D,SAAS0D,EAAM,SAO5BxF,EAAS+F,OAAS,SAASC,GACzB,IAAIC,EAAMjG,EAASoB,YAAY4E,EAAc,UAAU,GACvD,GAAIC,EACF,OAAOA,EAAI7F,OAAO,IAItBJ,EAASkG,iBAAmB,SAAStF,GACnC,IAAIa,EAAQb,EAAKR,OAAO,IAAIM,MAAM,KAClC,MAAO,CACLyF,UAAW1E,EAAM,GAAGO,cACpB2D,MAAOlE,EAAM,KAOjBzB,EAASoG,kBAAoB,SAASJ,EAAcK,GAKlD,MAAO,CACLC,KAAM,OACNC,aANUvG,EAASoB,YAAY4E,EAAeK,EAC9C,kBAKoB1F,IAAIX,EAASkG,oBAKrClG,EAASwG,oBAAsB,SAAS3B,EAAQ4B,GAC9C,IAAI3D,EAAM,WAAa2D,EAAY,OAInC,OAHA5B,EAAO0B,aAAazB,SAAQ,SAAS4B,GACnC5D,GAAO,iBAAmB4D,EAAGP,UAAY,IAAMO,EAAGf,MAAQ,UAErD7C,GAKT9C,EAAS2G,gBAAkB,SAAS/F,GAClC,IAAIa,EAAQb,EAAKR,OAAO,GAAGM,MAAM,KACjC,MAAO,CACLkG,IAAK9E,SAASL,EAAM,GAAI,IACxBoF,YAAapF,EAAM,GACnBqF,UAAWrF,EAAM,GACjBsF,cAAetF,EAAMuF,MAAM,KAI/BhH,EAASiH,gBAAkB,SAASvC,GAClC,MAAO,YAAcA,EAAWkC,IAAM,IACpClC,EAAWmC,YAAc,KACQ,iBAAzBnC,EAAWoC,UACf9G,EAASkH,qBAAqBxC,EAAWoC,WACzCpC,EAAWoC,YACdpC,EAAWqC,cAAgB,IAAMrC,EAAWqC,cAAc9D,KAAK,KAAO,IACvE,QAKJjD,EAASmH,qBAAuB,SAASL,GACvC,GAAqC,IAAjCA,EAAUvF,QAAQ,WACpB,OAAO,KAET,IAAIE,EAAQqF,EAAU1G,OAAO,GAAGM,MAAM,KACtC,MAAO,CACL0G,UAAW,SACXC,QAAS5F,EAAM,GACf6F,SAAU7F,EAAM,GAChB8F,SAAU9F,EAAM,GAAKA,EAAM,GAAGf,MAAM,KAAK,QAAKmD,EAC9C2D,UAAW/F,EAAM,GAAKA,EAAM,GAAGf,MAAM,KAAK,QAAKmD,IAInD7D,EAASkH,qBAAuB,SAASJ,GACvC,OAAOA,EAAUM,UAAY,IACzBN,EAAUO,SACXP,EAAUQ,SAAW,IAAMR,EAAUQ,SAAW,KAChDR,EAAUS,UAAYT,EAAUU,UAC7B,IAAMV,EAAUS,SAAW,IAAMT,EAAUU,UAC3C,KAIRxH,EAASyH,oBAAsB,SAASzB,EAAcK,GAGpD,OAFYrG,EAASoB,YAAY4E,EAAeK,EAC9C,aACW1F,IAAIX,EAAS2G,kBAM5B3G,EAAS0H,iBAAmB,SAAS1B,EAAcK,GACjD,IAAI1D,EAAQ3C,EAASoB,YAAY4E,EAAeK,EAC9C,gBAAgB,GACdsB,EAAM3H,EAASoB,YAAY4E,EAAeK,EAC5C,cAAc,GAChB,OAAM1D,GAASgF,EAGR,CACL/E,iBAAkBD,EAAMvC,OAAO,IAC/BwH,SAAUD,EAAIvH,OAAO,KAJd,MASXJ,EAAS6H,mBAAqB,SAAShD,GACrC,MAAO,eAAiBA,EAAOjC,iBAAxB,iBACYiC,EAAO+C,SAAW,QAIvC5H,EAAS8H,mBAAqB,SAAS9B,GASrC,IARA,IAAI+B,EAAc,CAChBC,OAAQ,GACRC,iBAAkB,GAClBC,cAAe,GACfC,KAAM,IAGJC,EADQpI,EAASO,WAAWyF,GACd,GAAGtF,MAAM,KAClB4B,EAAI,EAAGA,EAAI8F,EAAM7F,OAAQD,IAAK,CACrC,IAAIsB,EAAKwE,EAAM9F,GACX+F,EAAarI,EAASoB,YACxB4E,EAAc,YAAcpC,EAAK,KAAK,GACxC,GAAIyE,EAAY,CACd,IAAI1E,EAAQ3D,EAASmD,YAAYkF,GAC7BC,EAAQtI,EAASoB,YACnB4E,EAAc,UAAYpC,EAAK,KAQjC,OANAD,EAAMe,WAAa4D,EAAM/F,OAASvC,EAASsE,UAAUgE,EAAM,IAAM,GACjE3E,EAAMyB,aAAepF,EAASoB,YAC5B4E,EAAc,aAAepC,EAAK,KACjCjD,IAAIX,EAASgF,aAChB+C,EAAYC,OAAOjF,KAAKY,GAEhBA,EAAML,KAAKN,eACjB,IAAK,MACL,IAAK,SACH+E,EAAYG,cAAcnF,KAAKY,EAAML,KAAKN,iBAWlD,OAJAhD,EAASoB,YAAY4E,EAAc,aAAalB,SAAQ,SAASlE,GAC/DmH,EAAYE,iBAAiBlF,KAAK/C,EAAS+D,YAAYnD,OAGlDmH,GAKT/H,EAASuI,oBAAsB,SAASC,EAAMC,GAC5C,IAAI3F,EAAM,GAGVA,GAAO,KAAO0F,EAAO,IACrB1F,GAAO2F,EAAKT,OAAOzF,OAAS,EAAI,IAAM,IACtCO,GAAO,sBACPA,GAAO2F,EAAKT,OAAOrH,KAAI,SAASgD,GAC9B,YAAmCE,IAA/BF,EAAMG,qBACDH,EAAMG,qBAERH,EAAMN,eACZJ,KAAK,KAAO,OAEfH,GAAO,uBACPA,GAAO,8BAGP2F,EAAKT,OAAOlD,SAAQ,SAASnB,GAC3Bb,GAAO9C,EAAS0D,YAAYC,GAC5Bb,GAAO9C,EAASyE,UAAUd,GAC1Bb,GAAO9C,EAASkF,YAAYvB,MAE9B,IAAI+E,EAAW,EAiBf,OAhBAD,EAAKT,OAAOlD,SAAQ,SAASnB,GACvBA,EAAM+E,SAAWA,IACnBA,EAAW/E,EAAM+E,aAGjBA,EAAW,IACb5F,GAAO,cAAgB4F,EAAW,QAEpC5F,GAAO,iBAEH2F,EAAKR,kBACPQ,EAAKR,iBAAiBnD,SAAQ,SAAS6D,GACrC7F,GAAO9C,EAASmE,YAAYwE,MAIzB7F,GAKT9C,EAAS4I,2BAA6B,SAAS5C,GAC7C,IAcI6C,EAdAC,EAAqB,GACrBf,EAAc/H,EAAS8H,mBAAmB9B,GAC1C+C,GAAuD,IAA9ChB,EAAYG,cAAc3G,QAAQ,OAC3CyH,GAA6D,IAAjDjB,EAAYG,cAAc3G,QAAQ,UAG9CuE,EAAQ9F,EAASoB,YAAY4E,EAAc,WAC5CrF,KAAI,SAASC,GACZ,OAAOZ,EAASsF,eAAe1E,MAEhCU,QAAO,SAASG,GACf,MAA2B,UAApBA,EAAMiE,aAEbuD,EAAcnD,EAAMvD,OAAS,GAAKuD,EAAM,GAAGN,KAG3C0D,EAAQlJ,EAASoB,YAAY4E,EAAc,oBAC5CrF,KAAI,SAASC,GAEZ,OADYA,EAAKR,OAAO,IAAIM,MAAM,KACrBC,KAAI,SAASG,GACxB,OAAOgB,SAAShB,EAAM,UAGxBoI,EAAM3G,OAAS,GAAK2G,EAAM,GAAG3G,OAAS,GAAK2G,EAAM,GAAG,KAAOD,IAC7DJ,EAAgBK,EAAM,GAAG,IAG3BnB,EAAYC,OAAOlD,SAAQ,SAASnB,GAClC,GAAiC,QAA7BA,EAAML,KAAKN,eAA2BW,EAAMe,WAAWyE,IAAK,CAC9D,IAAIC,EAAW,CACb5D,KAAMyD,EACNI,iBAAkBvH,SAAS6B,EAAMe,WAAWyE,IAAK,KAE/CF,GAAeJ,IACjBO,EAASE,IAAM,CAAC9D,KAAMqD,IAExBC,EAAmB/F,KAAKqG,GACpBL,KACFK,EAAWG,KAAKC,MAAMD,KAAKE,UAAUL,KAC5BM,IAAM,CACblE,KAAMyD,EACNU,UAAWX,EAAY,aAAe,OAExCF,EAAmB/F,KAAKqG,QAII,IAA9BN,EAAmBvG,QAAgB0G,GACrCH,EAAmB/F,KAAK,CACtByC,KAAMyD,IAKV,IAAIW,EAAY5J,EAASoB,YAAY4E,EAAc,MAenD,OAdI4D,EAAUrH,SAEVqH,EADsC,IAApCA,EAAU,GAAGrI,QAAQ,WACXO,SAAS8H,EAAU,GAAGxJ,OAAO,GAAI,IACF,IAAlCwJ,EAAU,GAAGrI,QAAQ,SAEqB,IAAvCO,SAAS8H,EAAU,GAAGxJ,OAAO,GAAI,IAAa,IACpD,UAEMyD,EAEdiF,EAAmBhE,SAAQ,SAASD,GAClCA,EAAOgF,WAAaD,MAGjBd,GAIT9I,EAAS8J,oBAAsB,SAAS9D,GACtC,IAAI+D,EAAiB,GAIjBC,EAAahK,EAASoB,YAAY4E,EAAc,WACjDrF,KAAI,SAASC,GACZ,OAAOZ,EAASsF,eAAe1E,MAEhCU,QAAO,SAAS2I,GACf,MAAyB,UAAlBA,EAAIvE,aACV,GACDsE,IACFD,EAAeG,MAAQF,EAAWrE,MAClCoE,EAAevE,KAAOwE,EAAWxE,MAKnC,IAAI2E,EAAQnK,EAASoB,YAAY4E,EAAc,gBAC/C+D,EAAeK,YAAcD,EAAM5H,OAAS,EAC5CwH,EAAeM,SAA4B,IAAjBF,EAAM5H,OAIhC,IAAI+H,EAAMtK,EAASoB,YAAY4E,EAAc,cAG7C,OAFA+D,EAAeO,IAAMA,EAAI/H,OAAS,EAE3BwH,GAKT/J,EAASuK,UAAY,SAASvE,GAC5B,IAAIvE,EACA+I,EAAOxK,EAASoB,YAAY4E,EAAc,WAC9C,GAAoB,IAAhBwE,EAAKjI,OAEP,MAAO,CAACkI,QADRhJ,EAAQ+I,EAAK,GAAGpK,OAAO,GAAGM,MAAM,MACV,GAAIgK,MAAOjJ,EAAM,IAEzC,IAAIkJ,EAAQ3K,EAASoB,YAAY4E,EAAc,WAC5CrF,KAAI,SAASC,GACZ,OAAOZ,EAASsF,eAAe1E,MAEhCU,QAAO,SAASsJ,GACf,MAA+B,SAAxBA,EAAUlF,aAErB,OAAIiF,EAAMpI,OAAS,EAEV,CAACkI,QADRhJ,EAAQkJ,EAAM,GAAGhF,MAAMjF,MAAM,MACP,GAAIgK,MAAOjJ,EAAM,SAFzC,GASFzB,EAAS6K,qBAAuB,SAAS7E,GACvC,IAEI8E,EAFA1C,EAAQpI,EAAS+K,WAAW/E,GAC5BgF,EAAchL,EAASoB,YAAY4E,EAAc,uBAEjDgF,EAAYzI,OAAS,IACvBuI,EAAiBhJ,SAASkJ,EAAY,GAAG5K,OAAO,IAAK,KAEnD6K,MAAMH,KACRA,EAAiB,OAEnB,IAAII,EAAWlL,EAASoB,YAAY4E,EAAc,gBAClD,GAAIkF,EAAS3I,OAAS,EACpB,MAAO,CACLH,KAAMN,SAASoJ,EAAS,GAAG9K,OAAO,IAAK,IACvC2B,SAAUqG,EAAM+C,IAChBL,eAAgBA,GAIpB,GADmB9K,EAASoB,YAAY4E,EAAc,cACrCzD,OAAS,EAAG,CAC3B,IAAId,EAAQzB,EAASoB,YAAY4E,EAAc,cAAc,GAC1D5F,OAAO,IACPM,MAAM,KACT,MAAO,CACL0B,KAAMN,SAASL,EAAM,GAAI,IACzBM,SAAUN,EAAM,GAChBqJ,eAAgBA,KAUtB9K,EAASoL,qBAAuB,SAASC,EAAOC,GAC9C,IAAIC,EAAS,GAiBb,OAfEA,EADqB,cAAnBF,EAAMtJ,SACC,CACP,KAAOsJ,EAAM7C,KAAO,MAAQ6C,EAAMtJ,SAAW,IAAMuJ,EAAKvJ,SAAW,OACnE,uBACA,eAAiBuJ,EAAKlJ,KAAO,QAGtB,CACP,KAAOiJ,EAAM7C,KAAO,MAAQ6C,EAAMtJ,SAAW,IAAMuJ,EAAKlJ,KAAO,OAC/D,uBACA,aAAekJ,EAAKlJ,KAAO,IAAMkJ,EAAKvJ,SAAW,mBAGzB8B,IAAxByH,EAAKR,gBACPS,EAAOxI,KAAK,sBAAwBuI,EAAKR,eAAiB,QAErDS,EAAOtI,KAAK,KAOrBjD,EAASwL,kBAAoB,WAC3B,OAAOvL,KAAKC,SAASC,WAAWC,OAAO,EAAG,KAQ5CJ,EAASyL,wBAA0B,SAASC,EAAQC,EAASC,GAC3D,IACIC,OAAsBhI,IAAZ8H,EAAwBA,EAAU,EAQhD,MAAO,aAFIC,GAAY,qBAGL,KARdF,GAGU1L,EAASwL,qBAKa,IAAMK,EADnC,yCAOT7L,EAAS8L,kBAAoB,SAASC,EAAatD,EAAMpG,EAAMoI,GAC7D,IAAI3H,EAAM9C,EAASuI,oBAAoBwD,EAAYvD,KAAMC,GAyBzD,GAtBA3F,GAAO9C,EAAS6H,mBACdkE,EAAYC,YAAYC,sBAG1BnJ,GAAO9C,EAASwG,oBACduF,EAAYG,cAAcD,qBACjB,UAAT5J,EAAmB,UAAY,UAEjCS,GAAO,SAAWiJ,EAAY9F,IAAM,OAEhC8F,EAAY9H,UACdnB,GAAO,KAAOiJ,EAAY9H,UAAY,OAC7B8H,EAAYI,WAAaJ,EAAYK,YAC9CtJ,GAAO,iBACEiJ,EAAYI,UACrBrJ,GAAO,iBACEiJ,EAAYK,YACrBtJ,GAAO,iBAEPA,GAAO,iBAGLiJ,EAAYI,UAAW,CAEzB,IAAIE,EAAO,QAAU5B,EAAOzG,GAAK,IAC7B+H,EAAYI,UAAUzB,MAAM1G,GAAK,OACrClB,GAAO,KAAOuJ,EAGdvJ,GAAO,UAAYiJ,EAAYO,uBAAuB,GAAG9G,KACrD,IAAM6G,EACNN,EAAYO,uBAAuB,GAAGhD,MACxCxG,GAAO,UAAYiJ,EAAYO,uBAAuB,GAAGhD,IAAI9D,KACzD,IAAM6G,EACVvJ,GAAO,oBACHiJ,EAAYO,uBAAuB,GAAG9G,KAAO,IAC7CuG,EAAYO,uBAAuB,GAAGhD,IAAI9D,KAC1C,QAUR,OANA1C,GAAO,UAAYiJ,EAAYO,uBAAuB,GAAG9G,KACrD,UAAYxF,EAASK,WAAa,OAClC0L,EAAYI,WAAaJ,EAAYO,uBAAuB,GAAGhD,MACjExG,GAAO,UAAYiJ,EAAYO,uBAAuB,GAAGhD,IAAI9D,KACzD,UAAYxF,EAASK,WAAa,QAEjCyC,GAIT9C,EAASuM,aAAe,SAASvG,EAAcK,GAG7C,IADA,IAAIlB,EAAQnF,EAASO,WAAWyF,GACvB1D,EAAI,EAAGA,EAAI6C,EAAM5C,OAAQD,IAChC,OAAQ6C,EAAM7C,IACZ,IAAK,aACL,IAAK,aACL,IAAK,aACL,IAAK,aACH,OAAO6C,EAAM7C,GAAGlC,OAAO,GAK7B,OAAIiG,EACKrG,EAASuM,aAAalG,GAExB,YAGTrG,EAASwM,QAAU,SAASxG,GAG1B,OAFYhG,EAASO,WAAWyF,GACd,GAAGtF,MAAM,KACd,GAAGN,OAAO,IAGzBJ,EAASyM,WAAa,SAASzG,GAC7B,MAAyC,MAAlCA,EAAatF,MAAM,IAAK,GAAG,IAGpCV,EAAS+K,WAAa,SAAS/E,GAC7B,IACIvE,EADQzB,EAASO,WAAWyF,GACd,GAAG5F,OAAO,GAAGM,MAAM,KACrC,MAAO,CACL8H,KAAM/G,EAAM,GACZW,KAAMN,SAASL,EAAM,GAAI,IACzBM,SAAUN,EAAM,GAChB0J,IAAK1J,EAAMuF,MAAM,GAAG/D,KAAK,OAI7BjD,EAAS0M,WAAa,SAAS1G,GAC7B,IACIvE,EADOzB,EAASoB,YAAY4E,EAAc,MAAM,GACnC5F,OAAO,GAAGM,MAAM,KACjC,MAAO,CACLiM,SAAUlL,EAAM,GAChBmL,UAAWnL,EAAM,GACjBoL,eAAgB/K,SAASL,EAAM,GAAI,IACnCqL,QAASrL,EAAM,GACfsL,YAAatL,EAAM,GACnBU,QAASV,EAAM,KAKnBzB,EAASgN,WAAa,SAASxM,GAC7B,GAAoB,iBAATA,GAAqC,IAAhBA,EAAK+B,OACnC,OAAO,EAGT,IADA,IAAI4C,EAAQnF,EAASO,WAAWC,GACvB8B,EAAI,EAAGA,EAAI6C,EAAM5C,OAAQD,IAChC,GAAI6C,EAAM7C,GAAGC,OAAS,GAA4B,MAAvB4C,EAAM7C,GAAG2K,OAAO,GACzC,OAAO,EAIX,OAAO,GAKPC,EAAOC,QAAUnN,G,4vEC7yBnB,IAAIoN,GAAe,EACfC,GAAuB,EAUpB,SAASC,EAAeC,EAAUC,EAAMC,GAC7C,MAAMC,EAAQH,EAASG,MAAMF,GAC7B,OAAOE,GAASA,EAAMnL,QAAUkL,GAAO3L,SAAS4L,EAAMD,GAAM,IAMvD,SAASE,EAAwBC,EAAQC,EAAiBC,GAC/D,IAAKF,EAAOG,kBACV,OAEF,MAAMC,EAAQJ,EAAOG,kBAAkBE,UACjCC,EAAyBF,EAAMG,iBACrCH,EAAMG,iBAAmB,SAASC,EAAiBC,GACjD,GAAID,IAAoBP,EACtB,OAAOK,EAAuBI,MAAMC,KAAMC,WAE5C,MAAMC,EAAmBC,IACvB,MAAMC,EAAgBb,EAAQY,GAC1BC,IACEN,EAAGO,YACLP,EAAGO,YAAYD,GAEfN,EAAGM,KAST,OALAJ,KAAKM,UAAYN,KAAKM,WAAa,GAC9BN,KAAKM,UAAUhB,KAClBU,KAAKM,UAAUhB,GAAmB,IAAIiB,KAExCP,KAAKM,UAAUhB,GAAiBkB,IAAIV,EAAII,GACjCP,EAAuBI,MAAMC,KAAM,CAACH,EACzCK,KAGJ,MAAMO,EAA4BhB,EAAMiB,oBACxCjB,EAAMiB,oBAAsB,SAASb,EAAiBC,GACpD,GAAID,IAAoBP,IAAoBU,KAAKM,YACzCN,KAAKM,UAAUhB,GACrB,OAAOmB,EAA0BV,MAAMC,KAAMC,WAE/C,IAAKD,KAAKM,UAAUhB,GAAiBqB,IAAIb,GACvC,OAAOW,EAA0BV,MAAMC,KAAMC,WAE/C,MAAMW,EAAcZ,KAAKM,UAAUhB,GAAiBuB,IAAIf,GAQxD,OAPAE,KAAKM,UAAUhB,GAAiBwB,OAAOhB,GACM,IAAzCE,KAAKM,UAAUhB,GAAiByB,aAC3Bf,KAAKM,UAAUhB,GAEmB,IAAvClJ,OAAOC,KAAK2J,KAAKM,WAAWtM,eACvBgM,KAAKM,UAEPG,EAA0BV,MAAMC,KAAM,CAACH,EAC5Ce,KAGJxK,OAAO4K,eAAevB,EAAO,KAAOH,EAAiB,CACnD,MACE,OAAOU,KAAK,MAAQV,IAEtB,IAAIQ,GACEE,KAAK,MAAQV,KACfU,KAAKU,oBAAoBpB,EACrBU,KAAK,MAAQV,WACVU,KAAK,MAAQV,IAElBQ,GACFE,KAAKJ,iBAAiBN,EAClBU,KAAK,MAAQV,GAAmBQ,IAGxCmB,YAAY,EACZC,cAAc,IAIX,SAASC,EAAWC,GACzB,MAAoB,kBAATA,EACF,IAAIC,MAAM,yBAA2BD,EACxC,4BAENvC,EAAeuC,EACR,EAAS,8BACZ,8BAOC,SAASE,EAAgBF,GAC9B,MAAoB,kBAATA,EACF,IAAIC,MAAM,yBAA2BD,EACxC,4BAENtC,GAAwBsC,EACjB,oCAAsCA,EAAO,WAAa,YAG5D,SAASG,IACd,GAAsB,iBAAXlC,OAAqB,CAC9B,GAAIR,EACF,OAEqB,oBAAZ2C,SAAkD,mBAAhBA,QAAQD,KACnDC,QAAQD,IAAIxB,MAAMyB,QAASvB,YAQ1B,SAASwB,EAAWC,EAAWC,GAC/B7C,GAGL0C,QAAQI,KAAKF,EAAY,8BAAgCC,EACrD,aA6DN,SAASE,EAASC,GAChB,MAA+C,oBAAxC1L,OAAOsJ,UAAU9N,SAASmQ,KAAKD,GAQjC,SAASE,EAAcC,GAC5B,OAAKJ,EAASI,GAIP7L,OAAOC,KAAK4L,GAAMC,QAAO,SAASC,EAAaC,GACpD,MAAMC,EAAQR,EAASI,EAAKG,IACtBhL,EAAQiL,EAAQL,EAAcC,EAAKG,IAAQH,EAAKG,GAChDE,EAAgBD,IAAUjM,OAAOC,KAAKe,GAAOpD,OACnD,YAAcsB,IAAV8B,GAAuBkL,EAClBH,EAEF/L,OAAOmM,OAAOJ,EAAa,CAAC,CAACC,GAAMhL,MACzC,IAXM6K,EAgCJ,SAASO,EAAYC,EAAQtG,EAAOuG,GACzC,MAAMC,EAAkBD,EAAW,eAAiB,cAC9CE,EAAiB,IAAIrC,IAC3B,GAAc,OAAVpE,EACF,OAAOyG,EAET,MAAMC,EAAa,GAcnB,OAbAJ,EAAOlM,QAAQa,IACM,UAAfA,EAAMtD,MACNsD,EAAM0L,kBAAoB3G,EAAM1G,IAClCoN,EAAWrO,KAAK4C,KAGpByL,EAAWtM,QAAQwM,IACjBN,EAAOlM,QAAQyM,IACTA,EAAMlP,OAAS6O,GAAmBK,EAAMC,UAAYF,EAAUtN,IAhCjE,SAASyN,EAAUF,EAAOG,EAAMC,GAChCD,IAAQC,EAAUzC,IAAIwC,EAAK1N,MAGhC2N,EAAU5C,IAAI2C,EAAK1N,GAAI0N,GACvB/M,OAAOC,KAAK8M,GAAM5M,QAAQxB,IACpBA,EAAKsO,SAAS,MAChBH,EAAUF,EAAOA,EAAMnC,IAAIsC,EAAKpO,IAAQqO,GAC/BrO,EAAKsO,SAAS,QACvBF,EAAKpO,GAAMwB,QAAQd,IACjByN,EAAUF,EAAOA,EAAMnC,IAAIpL,GAAK2N,QAuBhCF,CAAUT,EAAQO,EAAOJ,OAIxBA,EC/PT,MAAM,EAAU,EAET,SAASU,EAAiBjE,EAAQkE,GACvC,MAAMC,EAAYnE,GAAUA,EAAOmE,UAEnC,IAAKA,EAAUC,aACb,OAGF,MAAMC,EAAuB,SAASC,GACpC,GAAiB,iBAANA,GAAkBA,EAAEC,WAAaD,EAAEE,SAC5C,OAAOF,EAET,MAAMG,EAAK,GA4CX,OA3CA1N,OAAOC,KAAKsN,GAAGpN,QAAQ6L,IACrB,GAAY,YAARA,GAA6B,aAARA,GAA8B,gBAARA,EAC7C,OAEF,MAAM2B,EAAuB,iBAAXJ,EAAEvB,GAAqBuB,EAAEvB,GAAO,CAAC4B,MAAOL,EAAEvB,SAC5C9M,IAAZyO,EAAEE,OAA0C,iBAAZF,EAAEE,QACpCF,EAAEG,IAAMH,EAAEI,IAAMJ,EAAEE,OAEpB,MAAMG,EAAW,SAAStR,EAAQiC,GAChC,OAAIjC,EACKA,EAASiC,EAAK2J,OAAO,GAAGjK,cAAgBM,EAAK0D,MAAM,GAE3C,aAAT1D,EAAuB,WAAaA,GAE9C,QAAgBO,IAAZyO,EAAEC,MAAqB,CACzBF,EAAGD,SAAWC,EAAGD,UAAY,GAC7B,IAAIQ,EAAK,GACc,iBAAZN,EAAEC,OACXK,EAAGD,EAAS,MAAOhC,IAAQ2B,EAAEC,MAC7BF,EAAGD,SAASrP,KAAK6P,GACjBA,EAAK,GACLA,EAAGD,EAAS,MAAOhC,IAAQ2B,EAAEC,MAC7BF,EAAGD,SAASrP,KAAK6P,KAEjBA,EAAGD,EAAS,GAAIhC,IAAQ2B,EAAEC,MAC1BF,EAAGD,SAASrP,KAAK6P,SAGL/O,IAAZyO,EAAEE,OAA0C,iBAAZF,EAAEE,OACpCH,EAAGF,UAAYE,EAAGF,WAAa,GAC/BE,EAAGF,UAAUQ,EAAS,GAAIhC,IAAQ2B,EAAEE,OAEpC,CAAC,MAAO,OAAO1N,QAAQ+N,SACNhP,IAAXyO,EAAEO,KACJR,EAAGF,UAAYE,EAAGF,WAAa,GAC/BE,EAAGF,UAAUQ,EAASE,EAAKlC,IAAQ2B,EAAEO,QAKzCX,EAAEY,WACJT,EAAGD,UAAYC,EAAGD,UAAY,IAAIW,OAAOb,EAAEY,WAEtCT,GAGHW,EAAmB,SAASC,EAAaC,GAC7C,GAAIpB,EAAejG,SAAW,GAC5B,OAAOqH,EAAKD,GAGd,IADAA,EAAc1J,KAAKC,MAAMD,KAAKE,UAAUwJ,MACQ,iBAAtBA,EAAYE,MAAoB,CACxD,MAAMC,EAAQ,SAASnJ,EAAKoJ,EAAGC,GACzBD,KAAKpJ,KAASqJ,KAAKrJ,KACrBA,EAAIqJ,GAAKrJ,EAAIoJ,UACNpJ,EAAIoJ,KAIfD,GADAH,EAAc1J,KAAKC,MAAMD,KAAKE,UAAUwJ,KACtBE,MAAO,kBAAmB,uBAC5CC,EAAMH,EAAYE,MAAO,mBAAoB,wBAC7CF,EAAYE,MAAQlB,EAAqBgB,EAAYE,OAEvD,GAAIF,GAA4C,iBAAtBA,EAAYM,MAAoB,CAExD,IAAIC,EAAOP,EAAYM,MAAME,WAC7BD,EAAOA,IAA0B,iBAATA,EAAqBA,EAAO,CAACjB,MAAOiB,IAC5D,MAAME,EAA6B5B,EAAejG,QAAU,GAE5D,GAAK2H,IAAwB,SAAfA,EAAKhB,OAAmC,gBAAfgB,EAAKhB,OACf,SAAfgB,EAAKjB,OAAmC,gBAAfiB,EAAKjB,UACtCR,EAAUC,aAAa2B,0BACvB5B,EAAUC,aAAa2B,0BAA0BF,YAChDC,GAA6B,CAElC,IAAIE,EAMJ,UAPOX,EAAYM,MAAME,WAEN,gBAAfD,EAAKhB,OAA0C,gBAAfgB,EAAKjB,MACvCqB,EAAU,CAAC,OAAQ,QACK,SAAfJ,EAAKhB,OAAmC,SAAfgB,EAAKjB,QACvCqB,EAAU,CAAC,UAETA,EAEF,OAAO7B,EAAUC,aAAa6B,mBAC7BC,KAAKC,IAEJ,IAAIC,GADJD,EAAUA,EAAQzS,OAAO2S,GAAgB,eAAXA,EAAEzL,OACd0L,KAAKD,GAAKL,EAAQO,KAAKzG,GACvCuG,EAAEG,MAAMpS,cAAcqS,SAAS3G,KAUjC,OATKsG,GAAOD,EAAQxR,QAAUqR,EAAQS,SAAS,UAC7CL,EAAMD,EAAQA,EAAQxR,OAAS,IAE7ByR,IACFf,EAAYM,MAAMe,SAAWd,EAAKhB,MAAQ,CAACA,MAAOwB,EAAIM,UACZ,CAAC/B,MAAOyB,EAAIM,WAExDrB,EAAYM,MAAQtB,EAAqBgB,EAAYM,OACrD,EAAQ,WAAahK,KAAKE,UAAUwJ,IAC7BC,EAAKD,KAIlBA,EAAYM,MAAQtB,EAAqBgB,EAAYM,OAGvD,OADA,EAAQ,WAAahK,KAAKE,UAAUwJ,IAC7BC,EAAKD,IAGRsB,EAAa,SAAS7F,GAC1B,OAAIoD,EAAejG,SAAW,GACrB6C,EAEF,CACLpL,KAAM,CACJkR,sBAAuB,kBACvBC,yBAA0B,kBAC1BC,kBAAmB,kBACnBC,qBAAsB,gBACtBC,4BAA6B,uBAC7BC,gBAAiB,mBACjBC,+BAAgC,kBAChCC,wBAAyB,kBACzBC,gBAAiB,aACjBC,mBAAoB,aACpBC,mBAAoB,cACpBxG,EAAEpL,OAASoL,EAAEpL,KACf6R,QAASzG,EAAEyG,QACXC,WAAY1G,EAAE0G,YAAc1G,EAAE2G,eAC9B,WACE,OAAO9G,KAAKjL,MAAQiL,KAAK4G,SAAW,MAAQ5G,KAAK4G,WAmBvD,GALApD,EAAUuD,aATY,SAASrC,EAAasC,EAAWC,GACrDxC,EAAiBC,EAAaf,IAC5BH,EAAU0D,mBAAmBvD,EAAGqD,EAAW7G,IACrC8G,GACFA,EAAQjB,EAAW7F,SAKYgH,KAAK3D,GAKxCA,EAAUC,aAAasD,aAAc,CACvC,MAAMK,EAAmB5D,EAAUC,aAAasD,aAC5CI,KAAK3D,EAAUC,cACnBD,EAAUC,aAAasD,aAAe,SAASM,GAC7C,OAAO5C,EAAiB4C,EAAI1D,GAAKyD,EAAiBzD,GAAG4B,KAAKrJ,IACxD,GAAIyH,EAAEiB,QAAU1I,EAAOoL,iBAAiBtT,QACpC2P,EAAEqB,QAAU9I,EAAOqL,iBAAiBvT,OAItC,MAHAkI,EAAOsL,YAAYjR,QAAQ4F,IACzBA,EAAMsL,SAEF,IAAIC,aAAa,GAAI,iBAE7B,OAAOxL,GACNiE,GAAKwH,QAAQC,OAAO5B,EAAW7F,QC/KjC,SAAS0H,EAAoBxI,EAAQyI,GACtCzI,EAAOmE,UAAUC,cACnB,oBAAqBpE,EAAOmE,UAAUC,cAGlCpE,EAAOmE,UAAsB,eAKR,mBAAhBsE,EAKXzI,EAAOmE,UAAUC,aAAasE,gBAC5B,SAAyBrD,GACvB,OAAOoD,EAAYpD,GAChBa,KAAKyC,IACJ,MAAMC,EAAiBvD,EAAYM,OAASN,EAAYM,MAAMkD,MACxDC,EAAkBzD,EAAYM,OAClCN,EAAYM,MAAMoD,OACdC,EAAqB3D,EAAYM,OACrCN,EAAYM,MAAMsD,UAcpB,OAbA5D,EAAYM,MAAQ,CAClBpB,UAAW,CACT2E,kBAAmB,UACnBC,oBAAqBR,EACrBS,aAAcJ,GAAsB,IAGpCJ,IACFvD,EAAYM,MAAMpB,UAAU8E,SAAWT,GAErCE,IACFzD,EAAYM,MAAMpB,UAAU+E,UAAYR,GAEnC9I,EAAOmE,UAAUC,aAAasD,aAAarC,MA1BxDlD,QAAQoH,MAAM,gECNX,SAASC,EAAgBxJ,GAC9BA,EAAOyJ,YAAczJ,EAAOyJ,aAAezJ,EAAO0J,kBAG7C,SAASC,EAAY3J,GAC1B,GAAsB,iBAAXA,GAAuBA,EAAOG,qBAAuB,YAC5DH,EAAOG,kBAAkBE,WAAY,CACvCtJ,OAAO4K,eAAe3B,EAAOG,kBAAkBE,UAAW,UAAW,CACnE,MACE,OAAOM,KAAKiJ,UAEd,IAAIC,GACElJ,KAAKiJ,UACPjJ,KAAKU,oBAAoB,QAASV,KAAKiJ,UAEzCjJ,KAAKJ,iBAAiB,QAASI,KAAKiJ,SAAWC,IAEjDjI,YAAY,EACZC,cAAc,IAEhB,MAAMiI,EACF9J,EAAOG,kBAAkBE,UAAU0J,qBACvC/J,EAAOG,kBAAkBE,UAAU0J,qBACjC,WAuCE,OAtCKpJ,KAAKqJ,eACRrJ,KAAKqJ,aAAgBlJ,IAGnBA,EAAEjE,OAAO0D,iBAAiB,WAAY0J,IACpC,IAAIC,EAEFA,EADElK,EAAOG,kBAAkBE,UAAU8J,aAC1BxJ,KAAKwJ,eACb7D,KAAK5B,GAAKA,EAAE5H,OAAS4H,EAAE5H,MAAM1G,KAAO6T,EAAGnN,MAAM1G,IAErC,CAAC0G,MAAOmN,EAAGnN,OAGxB,MAAMsN,EAAQ,IAAIC,MAAM,SACxBD,EAAMtN,MAAQmN,EAAGnN,MACjBsN,EAAMF,SAAWA,EACjBE,EAAMjM,YAAc,CAAC+L,YACrBE,EAAME,QAAU,CAACxJ,EAAEjE,QACnB8D,KAAK4J,cAAcH,KAErBtJ,EAAEjE,OAAOsL,YAAYjR,QAAQ4F,IAC3B,IAAIoN,EAEFA,EADElK,EAAOG,kBAAkBE,UAAU8J,aAC1BxJ,KAAKwJ,eACb7D,KAAK5B,GAAKA,EAAE5H,OAAS4H,EAAE5H,MAAM1G,KAAO0G,EAAM1G,IAElC,CAAC0G,SAEd,MAAMsN,EAAQ,IAAIC,MAAM,SACxBD,EAAMtN,MAAQA,EACdsN,EAAMF,SAAWA,EACjBE,EAAMjM,YAAc,CAAC+L,YACrBE,EAAME,QAAU,CAACxJ,EAAEjE,QACnB8D,KAAK4J,cAAcH,MAGvBzJ,KAAKJ,iBAAiB,YAAaI,KAAKqJ,eAEnCF,EAAyBpJ,MAAMC,KAAMC,iBAMhD,EAA8BZ,EAAQ,QAASc,IACxCA,EAAE3C,aACLpH,OAAO4K,eAAeb,EAAG,cACvB,CAAC/I,MAAO,CAACmS,SAAUpJ,EAAEoJ,YAElBpJ,IAKN,SAAS0J,EAAuBxK,GAErC,GAAsB,iBAAXA,GAAuBA,EAAOG,qBACnC,eAAgBH,EAAOG,kBAAkBE,YAC3C,qBAAsBL,EAAOG,kBAAkBE,UAAW,CAC5D,MAAMoK,EAAqB,SAASC,EAAI5N,GACtC,MAAO,CACLA,QACA,WAQE,YAPmB7G,IAAf0K,KAAKgK,QACY,UAAf7N,EAAMlC,KACR+F,KAAKgK,MAAQD,EAAGE,iBAAiB9N,GAEjC6D,KAAKgK,MAAQ,MAGVhK,KAAKgK,OAEdE,IAAKH,IAKT,IAAK1K,EAAOG,kBAAkBE,UAAUyK,WAAY,CAClD9K,EAAOG,kBAAkBE,UAAUyK,WAAa,WAE9C,OADAnK,KAAKoK,SAAWpK,KAAKoK,UAAY,GAC1BpK,KAAKoK,SAAS3R,SAEvB,MAAM4R,EAAehL,EAAOG,kBAAkBE,UAAU4K,SACxDjL,EAAOG,kBAAkBE,UAAU4K,SACjC,SAAkBnO,EAAOD,GACvB,IAAIqO,EAASF,EAAatK,MAAMC,KAAMC,WAKtC,OAJKsK,IACHA,EAAST,EAAmB9J,KAAM7D,GAClC6D,KAAKoK,SAAS5V,KAAK+V,IAEdA,GAGX,MAAMC,EAAkBnL,EAAOG,kBAAkBE,UAAU+K,YAC3DpL,EAAOG,kBAAkBE,UAAU+K,YACjC,SAAqBF,GACnBC,EAAgBzK,MAAMC,KAAMC,WAC5B,MAAMyK,EAAM1K,KAAKoK,SAASpX,QAAQuX,IACrB,IAATG,GACF1K,KAAKoK,SAASO,OAAOD,EAAK,IAIlC,MAAME,EAAgBvL,EAAOG,kBAAkBE,UAAUmL,UACzDxL,EAAOG,kBAAkBE,UAAUmL,UAAY,SAAmB3O,GAChE8D,KAAKoK,SAAWpK,KAAKoK,UAAY,GACjCQ,EAAc7K,MAAMC,KAAM,CAAC9D,IAC3BA,EAAOsL,YAAYjR,QAAQ4F,IACzB6D,KAAKoK,SAAS5V,KAAKsV,EAAmB9J,KAAM7D,OAIhD,MAAM2O,EAAmBzL,EAAOG,kBAAkBE,UAAUqL,aAC5D1L,EAAOG,kBAAkBE,UAAUqL,aACjC,SAAsB7O,GACpB8D,KAAKoK,SAAWpK,KAAKoK,UAAY,GACjCU,EAAiB/K,MAAMC,KAAM,CAAC9D,IAE9BA,EAAOsL,YAAYjR,QAAQ4F,IACzB,MAAMoO,EAASvK,KAAKoK,SAASzE,KAAKqF,GAAKA,EAAE7O,QAAUA,GAC/CoO,GACFvK,KAAKoK,SAASO,OAAO3K,KAAKoK,SAASpX,QAAQuX,GAAS,WAIvD,GAAsB,iBAAXlL,GAAuBA,EAAOG,mBACrC,eAAgBH,EAAOG,kBAAkBE,WACzC,qBAAsBL,EAAOG,kBAAkBE,WAC/CL,EAAO4L,gBACL,SAAU5L,EAAO4L,aAAavL,WAAY,CACrD,MAAMwL,EAAiB7L,EAAOG,kBAAkBE,UAAUyK,WAC1D9K,EAAOG,kBAAkBE,UAAUyK,WAAa,WAC9C,MAAMgB,EAAUD,EAAenL,MAAMC,KAAM,IAE3C,OADAmL,EAAQ5U,QAAQgU,GAAUA,EAAOL,IAAMlK,MAChCmL,GAGT/U,OAAO4K,eAAe3B,EAAO4L,aAAavL,UAAW,OAAQ,CAC3D,MAQE,YAPmBpK,IAAf0K,KAAKgK,QACiB,UAApBhK,KAAK7D,MAAMlC,KACb+F,KAAKgK,MAAQhK,KAAKkK,IAAID,iBAAiBjK,KAAK7D,OAE5C6D,KAAKgK,MAAQ,MAGVhK,KAAKgK,UAMb,SAASoB,EAAa/L,GAC3B,IAAKA,EAAOG,kBACV,OAGF,MAAM6L,EAAehM,EAAOG,kBAAkBE,UAAU4L,SACxDjM,EAAOG,kBAAkBE,UAAU4L,SAAW,WAC5C,MAAOC,EAAUC,EAAQC,GAASxL,UAIlC,GAAIA,UAAUjM,OAAS,GAAyB,mBAAbuX,EACjC,OAAOF,EAAatL,MAAMC,KAAMC,WAKlC,GAA4B,IAAxBoL,EAAarX,SAAsC,IAArBiM,UAAUjM,QACpB,mBAAbuX,GACT,OAAOF,EAAatL,MAAMC,KAAM,IAGlC,MAAM0L,EAAkB,SAASC,GAC/B,MAAMC,EAAiB,GAiBvB,OAhBgBD,EAASlJ,SACjBlM,QAAQsV,IACd,MAAMC,EAAgB,CACpBrW,GAAIoW,EAAOpW,GACXsW,UAAWF,EAAOE,UAClBjY,KAAM,CACJkY,eAAgB,kBAChBC,gBAAiB,oBACjBJ,EAAO/X,OAAS+X,EAAO/X,MAE3B+X,EAAOK,QAAQ3V,QAAQxB,IACrB+W,EAAc/W,GAAQ8W,EAAOM,KAAKpX,KAEpC6W,EAAeE,EAAcrW,IAAMqW,IAG9BF,GAIHQ,EAAe,SAASpJ,GAC5B,OAAO,IAAIzC,IAAInK,OAAOC,KAAK2M,GAAO5Q,IAAIgQ,GAAO,CAACA,EAAKY,EAAMZ,OAG3D,GAAInC,UAAUjM,QAAU,EAAG,CACzB,MAAMqY,EAA0B,SAASV,GACvCH,EAAOY,EAAaV,EAAgBC,MAGtC,OAAON,EAAatL,MAAMC,KAAM,CAACqM,EAC/Bd,IAIJ,OAAO,IAAI5D,QAAQ,CAAC2E,EAAS1E,KAC3ByD,EAAatL,MAAMC,KAAM,CACvB,SAAS2L,GACPW,EAAQF,EAAaV,EAAgBC,MACpC/D,MACJrC,KAAKiG,EAAQC,IAIb,SAASc,EAA2BlN,GACzC,KAAwB,iBAAXA,GAAuBA,EAAOG,mBACvCH,EAAO4L,cAAgB5L,EAAOmN,gBAChC,OAIF,KAAM,aAAcnN,EAAO4L,aAAavL,WAAY,CAClD,MAAMwL,EAAiB7L,EAAOG,kBAAkBE,UAAUyK,WACtDe,IACF7L,EAAOG,kBAAkBE,UAAUyK,WAAa,WAC9C,MAAMgB,EAAUD,EAAenL,MAAMC,KAAM,IAE3C,OADAmL,EAAQ5U,QAAQgU,GAAUA,EAAOL,IAAMlK,MAChCmL,IAIX,MAAMd,EAAehL,EAAOG,kBAAkBE,UAAU4K,SACpDD,IACFhL,EAAOG,kBAAkBE,UAAU4K,SAAW,WAC5C,MAAMC,EAASF,EAAatK,MAAMC,KAAMC,WAExC,OADAsK,EAAOL,IAAMlK,KACNuK,IAGXlL,EAAO4L,aAAavL,UAAU4L,SAAW,WACvC,MAAMf,EAASvK,KACf,OAAOA,KAAKkK,IAAIoB,WAAW/F,KAAK9C,GAK9B,EAAkBA,EAAQ8H,EAAOpO,OAAO,KAK9C,KAAM,aAAckD,EAAOmN,eAAe9M,WAAY,CACpD,MAAM+M,EAAmBpN,EAAOG,kBAAkBE,UAAU8J,aACxDiD,IACFpN,EAAOG,kBAAkBE,UAAU8J,aACjC,WACE,MAAMkD,EAAYD,EAAiB1M,MAAMC,KAAM,IAE/C,OADA0M,EAAUnW,QAAQgT,GAAYA,EAASW,IAAMlK,MACtC0M,IAGb,EAA8BrN,EAAQ,QAASc,IAC7CA,EAAEoJ,SAASW,IAAM/J,EAAEwM,WACZxM,IAETd,EAAOmN,eAAe9M,UAAU4L,SAAW,WACzC,MAAM/B,EAAWvJ,KACjB,OAAOA,KAAKkK,IAAIoB,WAAW/F,KAAK9C,GAC9B,EAAkBA,EAAQ8G,EAASpN,OAAO,KAIhD,KAAM,aAAckD,EAAO4L,aAAavL,cACpC,aAAcL,EAAOmN,eAAe9M,WACtC,OAIF,MAAM2L,EAAehM,EAAOG,kBAAkBE,UAAU4L,SACxDjM,EAAOG,kBAAkBE,UAAU4L,SAAW,WAC5C,GAAIrL,UAAUjM,OAAS,GACnBiM,UAAU,aAAcZ,EAAOuN,iBAAkB,CACnD,MAAMzQ,EAAQ8D,UAAU,GACxB,IAAIsK,EACAhB,EACAsD,EAoBJ,OAnBA7M,KAAKmK,aAAa5T,QAAQyU,IACpBA,EAAE7O,QAAUA,IACVoO,EACFsC,GAAM,EAENtC,EAASS,KAIfhL,KAAKwJ,eAAejT,QAAQwN,IACtBA,EAAE5H,QAAUA,IACVoN,EACFsD,GAAM,EAENtD,EAAWxF,GAGRA,EAAE5H,QAAUA,IAEjB0Q,GAAQtC,GAAUhB,EACb5B,QAAQC,OAAO,IAAIF,aACxB,4DACA,uBACO6C,EACFA,EAAOe,WACL/B,EACFA,EAAS+B,WAEX3D,QAAQC,OAAO,IAAIF,aACxB,gDACA,uBAEJ,OAAO2D,EAAatL,MAAMC,KAAMC,YAI7B,SAAS6M,EAAkCzN,GAIhDA,EAAOG,kBAAkBE,UAAUqN,gBACjC,WAEE,OADA/M,KAAKgN,qBAAuBhN,KAAKgN,sBAAwB,GAClD5W,OAAOC,KAAK2J,KAAKgN,sBACrB5a,IAAI6a,GAAYjN,KAAKgN,qBAAqBC,GAAU,KAG3D,MAAM5C,EAAehL,EAAOG,kBAAkBE,UAAU4K,SACxDjL,EAAOG,kBAAkBE,UAAU4K,SACjC,SAAkBnO,EAAOD,GACvB,IAAKA,EACH,OAAOmO,EAAatK,MAAMC,KAAMC,WAElCD,KAAKgN,qBAAuBhN,KAAKgN,sBAAwB,GAEzD,MAAMzC,EAASF,EAAatK,MAAMC,KAAMC,WAMxC,OALKD,KAAKgN,qBAAqB9Q,EAAOzG,KAE+B,IAA1DuK,KAAKgN,qBAAqB9Q,EAAOzG,IAAIzC,QAAQuX,IACtDvK,KAAKgN,qBAAqB9Q,EAAOzG,IAAIjB,KAAK+V,GAF1CvK,KAAKgN,qBAAqB9Q,EAAOzG,IAAM,CAACyG,EAAQqO,GAI3CA,GAGX,MAAMK,EAAgBvL,EAAOG,kBAAkBE,UAAUmL,UACzDxL,EAAOG,kBAAkBE,UAAUmL,UAAY,SAAmB3O,GAChE8D,KAAKgN,qBAAuBhN,KAAKgN,sBAAwB,GAEzD9Q,EAAOsL,YAAYjR,QAAQ4F,IAEzB,GADsB6D,KAAKmK,aAAaxE,KAAKqF,GAAKA,EAAE7O,QAAUA,GAE5D,MAAM,IAAIuL,aAAa,wBACnB,wBAGR,MAAMwF,EAAkBlN,KAAKmK,aAC7BS,EAAc7K,MAAMC,KAAMC,WAC1B,MAAMkN,EAAanN,KAAKmK,aACrBpX,OAAOqa,IAAqD,IAAxCF,EAAgBla,QAAQoa,IAC/CpN,KAAKgN,qBAAqB9Q,EAAOzG,IAAM,CAACyG,GAAQsI,OAAO2I,IAGzD,MAAMrC,EAAmBzL,EAAOG,kBAAkBE,UAAUqL,aAC5D1L,EAAOG,kBAAkBE,UAAUqL,aACjC,SAAsB7O,GAGpB,OAFA8D,KAAKgN,qBAAuBhN,KAAKgN,sBAAwB,UAClDhN,KAAKgN,qBAAqB9Q,EAAOzG,IACjCqV,EAAiB/K,MAAMC,KAAMC,YAGxC,MAAMuK,EAAkBnL,EAAOG,kBAAkBE,UAAU+K,YAC3DpL,EAAOG,kBAAkBE,UAAU+K,YACjC,SAAqBF,GAanB,OAZAvK,KAAKgN,qBAAuBhN,KAAKgN,sBAAwB,GACrDzC,GACFnU,OAAOC,KAAK2J,KAAKgN,sBAAsBzW,QAAQ0W,IAC7C,MAAMvC,EAAM1K,KAAKgN,qBAAqBC,GAAUja,QAAQuX,IAC3C,IAATG,GACF1K,KAAKgN,qBAAqBC,GAAUtC,OAAOD,EAAK,GAEC,IAA/C1K,KAAKgN,qBAAqBC,GAAUjZ,eAC/BgM,KAAKgN,qBAAqBC,KAIhCzC,EAAgBzK,MAAMC,KAAMC,YAIlC,SAASoN,EAAwBhO,EAAQkE,GAC9C,IAAKlE,EAAOG,kBACV,OAGF,GAAIH,EAAOG,kBAAkBE,UAAU4K,UACnC/G,EAAejG,SAAW,GAC5B,OAAOwP,EAAkCzN,GAK3C,MAAMiO,EAAsBjO,EAAOG,kBAAkBE,UAChDqN,gBACL1N,EAAOG,kBAAkBE,UAAUqN,gBACjC,WACE,MAAMQ,EAAgBD,EAAoBvN,MAAMC,MAEhD,OADAA,KAAKwN,gBAAkBxN,KAAKwN,iBAAmB,GACxCD,EAAcnb,IAAI8J,GAAU8D,KAAKwN,gBAAgBtR,EAAOzG,MAGnE,MAAMmV,EAAgBvL,EAAOG,kBAAkBE,UAAUmL,UACzDxL,EAAOG,kBAAkBE,UAAUmL,UAAY,SAAmB3O,GAahE,GAZA8D,KAAKyN,SAAWzN,KAAKyN,UAAY,GACjCzN,KAAKwN,gBAAkBxN,KAAKwN,iBAAmB,GAE/CtR,EAAOsL,YAAYjR,QAAQ4F,IAEzB,GADsB6D,KAAKmK,aAAaxE,KAAKqF,GAAKA,EAAE7O,QAAUA,GAE5D,MAAM,IAAIuL,aAAa,wBACnB,yBAKH1H,KAAKwN,gBAAgBtR,EAAOzG,IAAK,CACpC,MAAMiY,EAAY,IAAIrO,EAAOyJ,YAAY5M,EAAOsL,aAChDxH,KAAKyN,SAASvR,EAAOzG,IAAMiY,EAC3B1N,KAAKwN,gBAAgBE,EAAUjY,IAAMyG,EACrCA,EAASwR,EAEX9C,EAAc7K,MAAMC,KAAM,CAAC9D,KAG7B,MAAM4O,EAAmBzL,EAAOG,kBAAkBE,UAAUqL,aA6D5D,SAAS4C,EAAwB5D,EAAIvQ,GACnC,IAAIjF,EAAMiF,EAAYjF,IAOtB,OANA6B,OAAOC,KAAK0T,EAAGyD,iBAAmB,IAAIjX,QAAQqX,IAC5C,MAAMC,EAAiB9D,EAAGyD,gBAAgBI,GACpCE,EAAiB/D,EAAG0D,SAASI,EAAepY,IAClDlB,EAAMA,EAAIwZ,QAAQ,IAAIC,OAAOF,EAAerY,GAAI,KAC5CoY,EAAepY,MAEd,IAAIwY,sBAAsB,CAC/Bna,KAAM0F,EAAY1F,KAClBS,QAGJ,SAAS2Z,EAAwBnE,EAAIvQ,GACnC,IAAIjF,EAAMiF,EAAYjF,IAOtB,OANA6B,OAAOC,KAAK0T,EAAGyD,iBAAmB,IAAIjX,QAAQqX,IAC5C,MAAMC,EAAiB9D,EAAGyD,gBAAgBI,GACpCE,EAAiB/D,EAAG0D,SAASI,EAAepY,IAClDlB,EAAMA,EAAIwZ,QAAQ,IAAIC,OAAOH,EAAepY,GAAI,KAC5CqY,EAAerY,MAEd,IAAIwY,sBAAsB,CAC/Bna,KAAM0F,EAAY1F,KAClBS,QAnFJ8K,EAAOG,kBAAkBE,UAAUqL,aACjC,SAAsB7O,GACpB8D,KAAKyN,SAAWzN,KAAKyN,UAAY,GACjCzN,KAAKwN,gBAAkBxN,KAAKwN,iBAAmB,GAE/C1C,EAAiB/K,MAAMC,KAAM,CAAEA,KAAKyN,SAASvR,EAAOzG,KAAOyG,WACpD8D,KAAKwN,gBAAiBxN,KAAKyN,SAASvR,EAAOzG,IAC9CuK,KAAKyN,SAASvR,EAAOzG,IAAIA,GAAKyG,EAAOzG,WAClCuK,KAAKyN,SAASvR,EAAOzG,KAGhC4J,EAAOG,kBAAkBE,UAAU4K,SACjC,SAAkBnO,EAAOD,GACvB,GAA4B,WAAxB8D,KAAKmO,eACP,MAAM,IAAIzG,aACR,sDACA,qBAEJ,MAAMiC,EAAU,GAAGlR,MAAMsJ,KAAK9B,UAAW,GACzC,GAAuB,IAAnB0J,EAAQ3V,SACP2V,EAAQ,GAAGnC,YAAY7B,KAAKyI,GAAKA,IAAMjS,GAG1C,MAAM,IAAIuL,aACR,gHAEA,qBAGJ,MAAM2G,EAAgBrO,KAAKmK,aAAaxE,KAAKqF,GAAKA,EAAE7O,QAAUA,GAC9D,GAAIkS,EACF,MAAM,IAAI3G,aAAa,wBACnB,sBAGN1H,KAAKyN,SAAWzN,KAAKyN,UAAY,GACjCzN,KAAKwN,gBAAkBxN,KAAKwN,iBAAmB,GAC/C,MAAMc,EAAYtO,KAAKyN,SAASvR,EAAOzG,IACvC,GAAI6Y,EAKFA,EAAUhE,SAASnO,GAGnBwL,QAAQ2E,UAAU/G,KAAK,KACrBvF,KAAK4J,cAAc,IAAIF,MAAM,4BAE1B,CACL,MAAMgE,EAAY,IAAIrO,EAAOyJ,YAAY,CAAC3M,IAC1C6D,KAAKyN,SAASvR,EAAOzG,IAAMiY,EAC3B1N,KAAKwN,gBAAgBE,EAAUjY,IAAMyG,EACrC8D,KAAK6K,UAAU6C,GAEjB,OAAO1N,KAAKmK,aAAaxE,KAAKqF,GAAKA,EAAE7O,QAAUA,IA+BnD,CAAC,cAAe,gBAAgB5F,SAAQ,SAASgY,GAC/C,MAAMC,EAAenP,EAAOG,kBAAkBE,UAAU6O,GAClDE,EAAY,CAAC,CAACF,KAClB,MAAMG,EAAOzO,UAGb,OAFqBA,UAAUjM,QACH,mBAAjBiM,UAAU,GAEZuO,EAAazO,MAAMC,KAAM,CAC7BxG,IACC,MAAMmV,EAAOhB,EAAwB3N,KAAMxG,GAC3CkV,EAAK,GAAG3O,MAAM,KAAM,CAAC4O,KAEtB9B,IACK6B,EAAK,IACPA,EAAK,GAAG3O,MAAM,KAAM8M,IAErB5M,UAAU,KAGVuO,EAAazO,MAAMC,KAAMC,WAC/BsF,KAAK/L,GAAemU,EAAwB3N,KAAMxG,MAErD6F,EAAOG,kBAAkBE,UAAU6O,GAAUE,EAAUF,MAGzD,MAAMK,EACFvP,EAAOG,kBAAkBE,UAAUmP,oBACvCxP,EAAOG,kBAAkBE,UAAUmP,oBACjC,WACE,OAAK5O,UAAUjM,QAAWiM,UAAU,GAAGnM,MAGvCmM,UAAU,GAAKiO,EAAwBlO,KAAMC,UAAU,IAChD2O,EAAwB7O,MAAMC,KAAMC,YAHlC2O,EAAwB7O,MAAMC,KAAMC,YAQjD,MAAM6O,EAAuB1Y,OAAO2Y,yBAChC1P,EAAOG,kBAAkBE,UAAW,oBACxCtJ,OAAO4K,eAAe3B,EAAOG,kBAAkBE,UAC3C,mBAAoB,CAClB,MACE,MAAMlG,EAAcsV,EAAqBjO,IAAId,MAAMC,MACnD,MAAyB,KAArBxG,EAAY1F,KACP0F,EAEFmU,EAAwB3N,KAAMxG,MAI7C6F,EAAOG,kBAAkBE,UAAU+K,YACjC,SAAqBF,GACnB,GAA4B,WAAxBvK,KAAKmO,eACP,MAAM,IAAIzG,aACR,sDACA,qBAIJ,IAAK6C,EAAOL,IACV,MAAM,IAAIxC,aAAa,yFAC2B,aAGpD,KADgB6C,EAAOL,MAAQlK,MAE7B,MAAM,IAAI0H,aAAa,6CACnB,sBAKN,IAAIxL,EADJ8D,KAAKyN,SAAWzN,KAAKyN,UAAY,GAEjCrX,OAAOC,KAAK2J,KAAKyN,UAAUlX,QAAQyY,IAChBhP,KAAKyN,SAASuB,GAAUxH,YACtC7B,KAAKxJ,GAASoO,EAAOpO,QAAUA,KAEhCD,EAAS8D,KAAKyN,SAASuB,MAIvB9S,IACgC,IAA9BA,EAAOsL,YAAYxT,OAGrBgM,KAAK+K,aAAa/K,KAAKwN,gBAAgBtR,EAAOzG,KAG9CyG,EAAOuO,YAAYF,EAAOpO,OAE5B6D,KAAK4J,cAAc,IAAIF,MAAM,wBAK9B,SAASuF,EAAmB5P,EAAQkE,IACpClE,EAAOG,mBAAqBH,EAAO6P,0BAEtC7P,EAAOG,kBAAoBH,EAAO6P,yBAE/B7P,EAAOG,mBAKR+D,EAAejG,QAAU,IAC3B,CAAC,sBAAuB,uBAAwB,mBAC3C/G,SAAQ,SAASgY,GAChB,MAAMC,EAAenP,EAAOG,kBAAkBE,UAAU6O,GAClDE,EAAY,CAAC,CAACF,KAIlB,OAHAtO,UAAU,GAAK,IAAiB,oBAAXsO,EACjBlP,EAAO8P,gBACP9P,EAAO4O,uBAAuBhO,UAAU,IACrCuO,EAAazO,MAAMC,KAAMC,aAElCZ,EAAOG,kBAAkBE,UAAU6O,GAAUE,EAAUF,MAM1D,SAASa,EAAqB/P,EAAQkE,GAC3C,EAA8BlE,EAAQ,oBAAqBc,IACzD,MAAM4J,EAAK5J,EAAEkP,OACb,KAAI9L,EAAejG,QAAU,IAAOyM,EAAGuF,kBACI,WAAvCvF,EAAGuF,mBAAmBC,eACE,WAAtBxF,EAAGoE,eAIT,OAAOhO,I,sBCjrBJ,SAAS,EAAiBd,GAC/B,MAAMmE,EAAYnE,GAAUA,EAAOmE,UAc7B4D,EAAmB5D,EAAUC,aAAasD,aAC5CI,KAAK3D,EAAUC,cACnBD,EAAUC,aAAasD,aAAe,SAASpD,GAC7C,OAAOyD,EAAiBzD,GAAG6L,MAAMrP,GAAKwH,QAAQC,OAf7B,SAASzH,GAC1B,MAAO,CACLpL,KAAM,CAACkR,sBAAuB,mBAAmB9F,EAAEpL,OAASoL,EAAEpL,KAC9D6R,QAASzG,EAAEyG,QACXC,WAAY1G,EAAE0G,WACd,WACE,OAAO7G,KAAKjL,OASqCiR,CAAW7F,MClB7D,SAAS,EAAoBd,GAC5B,oBAAqBA,EAAOmE,WAG5BnE,EAAOmE,UAAsB,eAG/BnE,EAAOmE,UAAUC,cACnB,oBAAqBpE,EAAOmE,UAAUC,eAGxCpE,EAAOmE,UAAUC,aAAasE,gBAC5B1I,EAAOmE,UAAUuE,gBAAgBZ,KAAK9H,EAAOmE,aCL1C,SAAS,EAAmBnE,EAAQkE,GACzC,GAAIlE,EAAOoQ,iBACJpQ,EAAO8P,kBACV9P,EAAO8P,gBAAkB,SAAyBT,GAChD,OAAOA,IAGNrP,EAAO4O,wBACV5O,EAAO4O,sBAAwB,SAA+BS,GAC5D,OAAOA,IAMPnL,EAAejG,QAAU,OAAO,CAClC,MAAMoS,EAAiBtZ,OAAO2Y,yBAC1B1P,EAAOuN,iBAAiBlN,UAAW,WACvCtJ,OAAO4K,eAAe3B,EAAOuN,iBAAiBlN,UAAW,UAAW,CAClE,IAAItI,GACFsY,EAAelP,IAAIuB,KAAK/B,KAAM5I,GAC9B,MAAMuY,EAAK,IAAIjG,MAAM,WACrBiG,EAAGC,QAAUxY,EACb4I,KAAK4J,cAAc+F,MAQvBtQ,EAAO4L,gBAAkB,SAAU5L,EAAO4L,aAAavL,YACzDtJ,OAAO4K,eAAe3B,EAAO4L,aAAavL,UAAW,OAAQ,CAC3D,MAQE,YAPmBpK,IAAf0K,KAAKgK,QACiB,UAApBhK,KAAK7D,MAAMlC,KACb+F,KAAKgK,MAAQ,IAAI3K,EAAOwQ,cAAc7P,MACT,UAApBA,KAAK7D,MAAMlC,OACpB+F,KAAKgK,MAAQ,OAGVhK,KAAKgK,SAMd3K,EAAOwQ,gBAAkBxQ,EAAOyQ,gBAClCzQ,EAAOyQ,cAAgBzQ,EAAOwQ,eAGhC,MAAME,EAAwB,IAAsB1Q,EAChDkE,EAAejG,SACnB+B,EAAOG,kBAAoB,SAA2BwQ,GAMpD,OALIA,GAAUA,EAAOC,aACnBD,EAAOC,WCxDN,SAA0BA,EAAYC,GAC3C,IAAIC,GAAU,EAEd,OADAF,EAAajV,KAAKC,MAAMD,KAAKE,UAAU+U,KACrBld,OAAOqd,IACvB,GAAIA,IAAWA,EAAOC,MAAQD,EAAOE,KAAM,CACzC,IAAID,EAAOD,EAAOC,MAAQD,EAAOE,IAC7BF,EAAOE,MAAQF,EAAOC,MACxB,EAAiB,mBAAoB,qBAEvC,MAAME,EAA2B,iBAATF,EAsBxB,OArBIE,IACFF,EAAO,CAACA,IAEVA,EAAOA,EAAKtd,OAAOud,IAEjB,GAA6B,IAAzBA,EAAItd,QAAQ,SACd,OAAO,EAGT,MAAMwd,EAAYF,EAAIG,WAAW,UAC5BH,EAAIG,WAAW,WAChBH,EAAIxK,SAAS,iBACjB,OAAI0K,IAAcL,GAChBA,GAAU,GACH,GAEFK,IAAcL,WAGhBC,EAAOE,IACdF,EAAOC,KAAOE,EAAWF,EAAK,GAAKA,IAC1BA,EAAKrc,UDyBM0c,CAAiBV,EAAOC,WAC1C1M,EAAejG,SACjB,EAAU,+BAAgC0S,EAAOC,aAE5C,IAAIF,EAAsBC,IAEnC3Q,EAAOG,kBAAkBE,UAAYqQ,EAAsBrQ,UAGtD,SAASiR,EAAiBtR,GAE3BA,EAAO4L,gBACL,iBAAkB5L,EAAO4L,aAAavL,aAC1CL,EAAO4L,aAAavL,UAAUkR,aAC1BvR,EAAO4L,aAAavL,UAAUmR,UE1E/B,SAAS,EAAiBxR,EAAQkE,GACvC,MAAMC,EAAYnE,GAAUA,EAAOmE,UAC7BoJ,EAAmBvN,GAAUA,EAAOuN,iBAS1C,GAPApJ,EAAUuD,aAAe,SAASrC,EAAasC,EAAWC,GAExD,EAAiB,yBACb,uCACJzD,EAAUC,aAAasD,aAAarC,GAAaa,KAAKyB,EAAWC,MAG7D1D,EAAejG,QAAU,IAC3B,oBAAqBkG,EAAUC,aAAa2B,2BAA4B,CAC1E,MAAMP,EAAQ,SAASnJ,EAAKoJ,EAAGC,GACzBD,KAAKpJ,KAASqJ,KAAKrJ,KACrBA,EAAIqJ,GAAKrJ,EAAIoJ,UACNpJ,EAAIoJ,KAITgM,EAAqBtN,EAAUC,aAAasD,aAC9CI,KAAK3D,EAAUC,cAUnB,GATAD,EAAUC,aAAasD,aAAe,SAASpD,GAM7C,MALiB,iBAANA,GAAqC,iBAAZA,EAAEiB,QACpCjB,EAAI3I,KAAKC,MAAMD,KAAKE,UAAUyI,IAC9BkB,EAAMlB,EAAEiB,MAAO,kBAAmB,sBAClCC,EAAMlB,EAAEiB,MAAO,mBAAoB,wBAE9BkM,EAAmBnN,IAGxBiJ,GAAoBA,EAAiBlN,UAAUqR,YAAa,CAC9D,MAAMC,EAAoBpE,EAAiBlN,UAAUqR,YACrDnE,EAAiBlN,UAAUqR,YAAc,WACvC,MAAMrV,EAAMsV,EAAkBjR,MAAMC,KAAMC,WAG1C,OAFA4E,EAAMnJ,EAAK,qBAAsB,mBACjCmJ,EAAMnJ,EAAK,sBAAuB,oBAC3BA,GAIX,GAAIkR,GAAoBA,EAAiBlN,UAAUuR,iBAAkB,CACnE,MAAMC,EACJtE,EAAiBlN,UAAUuR,iBAC7BrE,EAAiBlN,UAAUuR,iBAAmB,SAAStN,GAMrD,MALkB,UAAd3D,KAAK/F,MAAiC,iBAAN0J,IAClCA,EAAI3I,KAAKC,MAAMD,KAAKE,UAAUyI,IAC9BkB,EAAMlB,EAAG,kBAAmB,sBAC5BkB,EAAMlB,EAAG,mBAAoB,wBAExBuN,EAAuBnR,MAAMC,KAAM,CAAC2D,OCpD5C,SAAS,EAAoBtE,EAAQ8R,GACtC9R,EAAOmE,UAAUC,cACnB,oBAAqBpE,EAAOmE,UAAUC,cAGlCpE,EAAOmE,UAAsB,eAGnCnE,EAAOmE,UAAUC,aAAasE,gBAC5B,SAAyBrD,GACvB,IAAMA,IAAeA,EAAYM,MAAQ,CACvC,MAAM6H,EAAM,IAAInF,aAAa,0DAK7B,OAHAmF,EAAI9X,KAAO,gBAEX8X,EAAIuE,KAAO,EACJzJ,QAAQC,OAAOiF,GAOxB,OAL0B,IAAtBnI,EAAYM,MACdN,EAAYM,MAAQ,CAACqM,YAAaF,GAElCzM,EAAYM,MAAMqM,YAAcF,EAE3B9R,EAAOmE,UAAUC,aAAasD,aAAarC,KCnBjD,SAAS,EAAYrF,GACJ,iBAAXA,GAAuBA,EAAOiS,eACpC,aAAcjS,EAAOiS,cAAc5R,aAClC,gBAAiBL,EAAOiS,cAAc5R,YAC1CtJ,OAAO4K,eAAe3B,EAAOiS,cAAc5R,UAAW,cAAe,CACnE,MACE,MAAO,CAAC6J,SAAUvJ,KAAKuJ,aAMxB,SAAS,EAAmBlK,EAAQkE,GACzC,GAAsB,iBAAXlE,IACLA,EAAOG,oBAAqBH,EAAOkS,qBACvC,QAEGlS,EAAOG,mBAAqBH,EAAOkS,uBAEtClS,EAAOG,kBAAoBH,EAAOkS,sBAGhChO,EAAejG,QAAU,IAE3B,CAAC,sBAAuB,uBAAwB,mBAC3C/G,SAAQ,SAASgY,GAChB,MAAMC,EAAenP,EAAOG,kBAAkBE,UAAU6O,GAClDE,EAAY,CAAC,CAACF,KAIlB,OAHAtO,UAAU,GAAK,IAAiB,oBAAXsO,EACjBlP,EAAO8P,gBACP9P,EAAO4O,uBAAuBhO,UAAU,IACrCuO,EAAazO,MAAMC,KAAMC,aAElCZ,EAAOG,kBAAkBE,UAAU6O,GAAUE,EAAUF,MAI/D,MAAMiD,EAAmB,CACvBC,WAAY,cACZC,YAAa,eACbC,cAAe,iBACf3F,eAAgB,kBAChBC,gBAAiB,oBAGb2F,EAAiBvS,EAAOG,kBAAkBE,UAAU4L,SAC1DjM,EAAOG,kBAAkBE,UAAU4L,SAAW,WAC5C,MAAOC,EAAUC,EAAQC,GAASxL,UAClC,OAAO2R,EAAe7R,MAAMC,KAAM,CAACuL,GAAY,OAC5ChG,KAAKvC,IACJ,GAAIO,EAAejG,QAAU,KAAOkO,EAGlC,IACExI,EAAMzM,QAAQ4V,IACZA,EAAKrY,KAAO0d,EAAiBrF,EAAKrY,OAASqY,EAAKrY,OAElD,MAAOqM,GACP,GAAe,cAAXA,EAAEpL,KACJ,MAAMoL,EAGR6C,EAAMzM,QAAQ,CAAC4V,EAAMpY,KACnBiP,EAAMxC,IAAIzM,EAAGqC,OAAOmM,OAAO,GAAI4J,EAAM,CACnCrY,KAAM0d,EAAiBrF,EAAKrY,OAASqY,EAAKrY,UAKlD,OAAOkP,IAERuC,KAAKiG,EAAQC,IAIb,SAASoG,EAAmBxS,GACjC,GAAwB,iBAAXA,IAAuBA,EAAOG,oBACvCH,EAAO4L,aACT,OAEF,GAAI5L,EAAO4L,cAAgB,aAAc5L,EAAO4L,aAAavL,UAC3D,OAEF,MAAMwL,EAAiB7L,EAAOG,kBAAkBE,UAAUyK,WACtDe,IACF7L,EAAOG,kBAAkBE,UAAUyK,WAAa,WAC9C,MAAMgB,EAAUD,EAAenL,MAAMC,KAAM,IAE3C,OADAmL,EAAQ5U,QAAQgU,GAAUA,EAAOL,IAAMlK,MAChCmL,IAIX,MAAMd,EAAehL,EAAOG,kBAAkBE,UAAU4K,SACpDD,IACFhL,EAAOG,kBAAkBE,UAAU4K,SAAW,WAC5C,MAAMC,EAASF,EAAatK,MAAMC,KAAMC,WAExC,OADAsK,EAAOL,IAAMlK,KACNuK,IAGXlL,EAAO4L,aAAavL,UAAU4L,SAAW,WACvC,OAAOtL,KAAK7D,MAAQ6D,KAAKkK,IAAIoB,SAAStL,KAAK7D,OACvCwL,QAAQ2E,QAAQ,IAAI/L,MAIrB,SAASuR,EAAqBzS,GACnC,GAAwB,iBAAXA,IAAuBA,EAAOG,oBACvCH,EAAO4L,aACT,OAEF,GAAI5L,EAAO4L,cAAgB,aAAc5L,EAAOmN,eAAe9M,UAC7D,OAEF,MAAM+M,EAAmBpN,EAAOG,kBAAkBE,UAAU8J,aACxDiD,IACFpN,EAAOG,kBAAkBE,UAAU8J,aAAe,WAChD,MAAMkD,EAAYD,EAAiB1M,MAAMC,KAAM,IAE/C,OADA0M,EAAUnW,QAAQgT,GAAYA,EAASW,IAAMlK,MACtC0M,IAGX,EAA8BrN,EAAQ,QAASc,IAC7CA,EAAEoJ,SAASW,IAAM/J,EAAEwM,WACZxM,IAETd,EAAOmN,eAAe9M,UAAU4L,SAAW,WACzC,OAAOtL,KAAKkK,IAAIoB,SAAStL,KAAK7D,QAI3B,SAAS4V,EAAiB1S,GAC1BA,EAAOG,qBACR,iBAAkBH,EAAOG,kBAAkBE,aAG/CL,EAAOG,kBAAkBE,UAAUqL,aACjC,SAAsB7O,GACpB,EAAiB,eAAgB,eACjC8D,KAAKmK,aAAa5T,QAAQgU,IACpBA,EAAOpO,OAASD,EAAOsL,YAAY1B,SAASyE,EAAOpO,QACrD6D,KAAKyK,YAAYF,OAMpB,SAASyH,EAAmB3S,GAG7BA,EAAO4S,cAAgB5S,EAAO6S,iBAChC7S,EAAO6S,eAAiB7S,EAAO4S,aAI5B,SAASE,EAAmB9S,GAIjC,GAAwB,iBAAXA,IAAuBA,EAAOG,kBACzC,OAEF,MAAM4S,EAAqB/S,EAAOG,kBAAkBE,UAAU2S,eAC1DD,IACF/S,EAAOG,kBAAkBE,UAAU2S,eACjC,WACErS,KAAKsS,sBAAwB,GAC7B,MAAMC,EAAiBtS,UAAU,GAC3BuS,EAAqBD,GACD,kBAAmBA,EACzCC,GAEFD,EAAeE,cAAclc,QAASmc,IACpC,GAAI,QAASA,EAAe,CAE1B,IADiB,oBACHC,KAAKD,EAAcE,KAC/B,MAAM,IAAIC,UAAU,+BAGxB,GAAI,0BAA2BH,KACvBI,WAAWJ,EAAcK,wBAA0B,GACvD,MAAM,IAAIC,WAAW,2CAGzB,GAAI,iBAAkBN,KACdI,WAAWJ,EAAcO,eAAiB,GAC9C,MAAM,IAAID,WAAW,kCAK7B,MAAMxV,EAAc4U,EAAmBrS,MAAMC,KAAMC,WACnD,GAAIuS,EAAoB,CAQtB,MAAM,OAACjI,GAAU/M,EACXlH,EAASiU,EAAO2I,mBAChB,cAAe5c,IAEY,IAA5BA,EAAO6c,UAAUnf,QAC2B,IAA5CoC,OAAOC,KAAKC,EAAO6c,UAAU,IAAInf,UACpCsC,EAAO6c,UAAYZ,EAAeE,cAClClI,EAAOkI,cAAgBF,EAAeE,cACtCzS,KAAKsS,sBAAsB9d,KAAK+V,EAAO6I,cAAc9c,GAClDiP,KAAK,YACGgF,EAAOkI,gBACbjD,MAAM,YACAjF,EAAOkI,kBAKtB,OAAOjV,IAKR,SAAS6V,EAAkBhU,GAChC,GAAwB,iBAAXA,IAAuBA,EAAO4L,aACzC,OAEF,MAAMqI,EAAoBjU,EAAO4L,aAAavL,UAAUwT,cACpDI,IACFjU,EAAO4L,aAAavL,UAAUwT,cAC5B,WACE,MAAM5c,EAASgd,EAAkBvT,MAAMC,KAAMC,WAI7C,MAHM,cAAe3J,IACnBA,EAAO6c,UAAY,GAAG3O,OAAOxE,KAAKyS,eAAiB,CAAC,MAE/Cnc,IAKR,SAASid,EAAgBlU,GAI9B,GAAwB,iBAAXA,IAAuBA,EAAOG,kBACzC,OAEF,MAAMgU,EAAkBnU,EAAOG,kBAAkBE,UAAU+T,YAC3DpU,EAAOG,kBAAkBE,UAAU+T,YAAc,WAC/C,OAAIzT,KAAKsS,uBAAyBtS,KAAKsS,sBAAsBte,OACpD2T,QAAQ+L,IAAI1T,KAAKsS,uBACvB/M,KAAK,IACGiO,EAAgBzT,MAAMC,KAAMC,YAEpC0T,QAAQ,KACP3T,KAAKsS,sBAAwB,KAG1BkB,EAAgBzT,MAAMC,KAAMC,YAIhC,SAAS2T,EAAiBvU,GAI/B,GAAwB,iBAAXA,IAAuBA,EAAOG,kBACzC,OAEF,MAAMqU,EAAmBxU,EAAOG,kBAAkBE,UAAUoU,aAC5DzU,EAAOG,kBAAkBE,UAAUoU,aAAe,WAChD,OAAI9T,KAAKsS,uBAAyBtS,KAAKsS,sBAAsBte,OACpD2T,QAAQ+L,IAAI1T,KAAKsS,uBACvB/M,KAAK,IACGsO,EAAiB9T,MAAMC,KAAMC,YAErC0T,QAAQ,KACP3T,KAAKsS,sBAAwB,KAG1BuB,EAAiB9T,MAAMC,KAAMC,YC3RjC,SAAS8T,EAAoB1U,GAClC,GAAsB,iBAAXA,GAAwBA,EAAOG,kBAA1C,CAYA,GATM,oBAAqBH,EAAOG,kBAAkBE,YAClDL,EAAOG,kBAAkBE,UAAUqN,gBACjC,WAIE,OAHK/M,KAAKgU,gBACRhU,KAAKgU,cAAgB,IAEhBhU,KAAKgU,kBAGZ,cAAe3U,EAAOG,kBAAkBE,WAAY,CACxD,MAAMuU,EAAY5U,EAAOG,kBAAkBE,UAAU4K,SACrDjL,EAAOG,kBAAkBE,UAAUmL,UAAY,SAAmB3O,GAC3D8D,KAAKgU,gBACRhU,KAAKgU,cAAgB,IAElBhU,KAAKgU,cAAclO,SAAS5J,IAC/B8D,KAAKgU,cAAcxf,KAAK0H,GAI1BA,EAAOoL,iBAAiB/Q,QAAQ4F,GAAS8X,EAAUlS,KAAK/B,KAAM7D,EAC5DD,IACFA,EAAOqL,iBAAiBhR,QAAQ4F,GAAS8X,EAAUlS,KAAK/B,KAAM7D,EAC5DD,KAGJmD,EAAOG,kBAAkBE,UAAU4K,SACjC,SAAkBnO,KAAUwN,GAU1B,OATIA,GACFA,EAAQpT,QAAS2F,IACV8D,KAAKgU,cAEEhU,KAAKgU,cAAclO,SAAS5J,IACtC8D,KAAKgU,cAAcxf,KAAK0H,GAFxB8D,KAAKgU,cAAgB,CAAC9X,KAMrB+X,EAAUlU,MAAMC,KAAMC,YAG7B,iBAAkBZ,EAAOG,kBAAkBE,YAC/CL,EAAOG,kBAAkBE,UAAUqL,aACjC,SAAsB7O,GACf8D,KAAKgU,gBACRhU,KAAKgU,cAAgB,IAEvB,MAAMxhB,EAAQwN,KAAKgU,cAAchhB,QAAQkJ,GACzC,IAAe,IAAX1J,EACF,OAEFwN,KAAKgU,cAAcrJ,OAAOnY,EAAO,GACjC,MAAM0hB,EAAShY,EAAOsL,YACtBxH,KAAKmK,aAAa5T,QAAQgU,IACpB2J,EAAOpO,SAASyE,EAAOpO,QACzB6D,KAAKyK,YAAYF,QAOtB,SAAS4J,EAAqB9U,GACnC,GAAsB,iBAAXA,GAAwBA,EAAOG,oBAGpC,qBAAsBH,EAAOG,kBAAkBE,YACnDL,EAAOG,kBAAkBE,UAAU0U,iBACjC,WACE,OAAOpU,KAAKqU,eAAiBrU,KAAKqU,eAAiB,OAGnD,gBAAiBhV,EAAOG,kBAAkBE,YAAY,CAC1DtJ,OAAO4K,eAAe3B,EAAOG,kBAAkBE,UAAW,cAAe,CACvE,MACE,OAAOM,KAAKsU,cAEd,IAAIpL,GACElJ,KAAKsU,eACPtU,KAAKU,oBAAoB,YAAaV,KAAKsU,cAC3CtU,KAAKU,oBAAoB,QAASV,KAAKuU,mBAEzCvU,KAAKJ,iBAAiB,YAAaI,KAAKsU,aAAepL,GACvDlJ,KAAKJ,iBAAiB,QAASI,KAAKuU,iBAAoBpU,IACtDA,EAAEwJ,QAAQpT,QAAQ2F,IAIhB,GAHK8D,KAAKqU,iBACRrU,KAAKqU,eAAiB,IAEpBrU,KAAKqU,eAAevO,SAAS5J,GAC/B,OAEF8D,KAAKqU,eAAe7f,KAAK0H,GACzB,MAAMuN,EAAQ,IAAIC,MAAM,aACxBD,EAAMvN,OAASA,EACf8D,KAAK4J,cAAcH,UAK3B,MAAMN,EACJ9J,EAAOG,kBAAkBE,UAAU0J,qBACrC/J,EAAOG,kBAAkBE,UAAU0J,qBACjC,WACE,MAAMW,EAAK/J,KAiBX,OAhBKA,KAAKuU,kBACRvU,KAAKJ,iBAAiB,QAASI,KAAKuU,iBAAmB,SAASpU,GAC9DA,EAAEwJ,QAAQpT,QAAQ2F,IAIhB,GAHK6N,EAAGsK,iBACNtK,EAAGsK,eAAiB,IAElBtK,EAAGsK,eAAerhB,QAAQkJ,IAAW,EACvC,OAEF6N,EAAGsK,eAAe7f,KAAK0H,GACvB,MAAMuN,EAAQ,IAAIC,MAAM,aACxBD,EAAMvN,OAASA,EACf6N,EAAGH,cAAcH,OAIhBN,EAAyBpJ,MAAMgK,EAAI9J,aAK3C,SAASuU,EAAiBnV,GAC/B,GAAsB,iBAAXA,IAAwBA,EAAOG,kBACxC,OAEF,MAAME,EAAYL,EAAOG,kBAAkBE,UACrC8T,EAAkB9T,EAAU+T,YAC5BI,EAAmBnU,EAAUoU,aAC7BjF,EAAsBnP,EAAUmP,oBAChCzF,EAAuB1J,EAAU0J,qBACjCqL,EAAkB/U,EAAU+U,gBAElC/U,EAAU+T,YACR,SAAqBiB,EAAiBC,GACpC,MAAMC,EAAW3U,UAAUjM,QAAU,EAAKiM,UAAU,GAAKA,UAAU,GAC7D4U,EAAUrB,EAAgBzT,MAAMC,KAAM,CAAC4U,IAC7C,OAAKD,GAGLE,EAAQtP,KAAKmP,EAAiBC,GACvBhN,QAAQ2E,WAHNuI,GAMbnV,EAAUoU,aACR,SAAsBY,EAAiBC,GACrC,MAAMC,EAAW3U,UAAUjM,QAAU,EAAKiM,UAAU,GAAKA,UAAU,GAC7D4U,EAAUhB,EAAiB9T,MAAMC,KAAM,CAAC4U,IAC9C,OAAKD,GAGLE,EAAQtP,KAAKmP,EAAiBC,GACvBhN,QAAQ2E,WAHNuI,GAMb,IAAIC,EAAe,SAAStb,EAAakb,EAAiBC,GACxD,MAAME,EAAUhG,EAAoB9O,MAAMC,KAAM,CAACxG,IACjD,OAAKmb,GAGLE,EAAQtP,KAAKmP,EAAiBC,GACvBhN,QAAQ2E,WAHNuI,GAKXnV,EAAUmP,oBAAsBiG,EAEhCA,EAAe,SAAStb,EAAakb,EAAiBC,GACpD,MAAME,EAAUzL,EAAqBrJ,MAAMC,KAAM,CAACxG,IAClD,OAAKmb,GAGLE,EAAQtP,KAAKmP,EAAiBC,GACvBhN,QAAQ2E,WAHNuI,GAKXnV,EAAU0J,qBAAuB0L,EAEjCA,EAAe,SAAS3hB,EAAWuhB,EAAiBC,GAClD,MAAME,EAAUJ,EAAgB1U,MAAMC,KAAM,CAAC7M,IAC7C,OAAKwhB,GAGLE,EAAQtP,KAAKmP,EAAiBC,GACvBhN,QAAQ2E,WAHNuI,GAKXnV,EAAU+U,gBAAkBK,EAGvB,SAAS,EAAiBzV,GAC/B,MAAMmE,EAAYnE,GAAUA,EAAOmE,UAEnC,GAAIA,EAAUC,cAAgBD,EAAUC,aAAasD,aAAc,CAEjE,MAAMtD,EAAeD,EAAUC,aACzBsR,EAAgBtR,EAAasD,aAAaI,KAAK1D,GACrDD,EAAUC,aAAasD,aAAgBrC,GAC9BqQ,EAAcC,EAAgBtQ,KAIpClB,EAAUuD,cAAgBvD,EAAUC,cACvCD,EAAUC,aAAasD,eACvBvD,EAAUuD,aAAe,SAAsBrC,EAAa5E,EAAImV,GAC9DzR,EAAUC,aAAasD,aAAarC,GACnCa,KAAKzF,EAAImV,IACV9N,KAAK3D,IAIJ,SAASwR,EAAgBtQ,GAC9B,OAAIA,QAAqCpP,IAAtBoP,EAAYM,MACtB5O,OAAOmM,OAAO,GACnBmC,EACA,CAACM,MAAO,EAAoBN,EAAYM,SAIrCN,EAGF,SAASwQ,GAAqB7V,GACnC,IAAKA,EAAOG,kBACV,OAGF,MAAM2V,EAAqB9V,EAAOG,kBAClCH,EAAOG,kBACL,SAA2B4V,EAAUC,GACnC,GAAID,GAAYA,EAASnF,WAAY,CACnC,MAAMqF,EAAgB,GACtB,IAAK,IAAIvhB,EAAI,EAAGA,EAAIqhB,EAASnF,WAAWjc,OAAQD,IAAK,CACnD,IAAIqc,EAASgF,EAASnF,WAAWlc,IAC5Bqc,EAAOmF,eAAe,SACvBnF,EAAOmF,eAAe,QACxB,EAAiB,mBAAoB,qBACrCnF,EAASpV,KAAKC,MAAMD,KAAKE,UAAUkV,IACnCA,EAAOC,KAAOD,EAAOE,WACdF,EAAOE,IACdgF,EAAc9gB,KAAK4b,IAEnBkF,EAAc9gB,KAAK4gB,EAASnF,WAAWlc,IAG3CqhB,EAASnF,WAAaqF,EAExB,OAAO,IAAIH,EAAmBC,EAAUC,IAE5ChW,EAAOG,kBAAkBE,UAAYyV,EAAmBzV,UAEpD,wBAAyByV,GAC3B/e,OAAO4K,eAAe3B,EAAOG,kBAAmB,sBAAuB,CACrEqB,IAAG,IACMsU,EAAmBK,sBAM3B,SAASC,GAA0BpW,GAElB,iBAAXA,GAAuBA,EAAOiS,eACrC,aAAcjS,EAAOiS,cAAc5R,aACjC,gBAAiBL,EAAOiS,cAAc5R,YAC1CtJ,OAAO4K,eAAe3B,EAAOiS,cAAc5R,UAAW,cAAe,CACnE,MACE,MAAO,CAAC6J,SAAUvJ,KAAKuJ,aAMxB,SAASmM,GAAsBrW,GACpC,MAAMmU,EAAkBnU,EAAOG,kBAAkBE,UAAU+T,YAC3DpU,EAAOG,kBAAkBE,UAAU+T,YACjC,SAAqBkC,GACnB,GAAIA,EAAc,MACgC,IAArCA,EAAaC,sBAEtBD,EAAaC,sBACTD,EAAaC,qBAEnB,MAAMC,EAAmB7V,KAAK8V,kBAAkBnQ,KAAKnI,GACf,UAApCA,EAAY+L,SAASpN,MAAMlC,OACY,IAArC0b,EAAaC,qBAAiCC,EACb,aAA/BA,EAAiBngB,UACfmgB,EAAiBE,aACnBF,EAAiBE,aAAa,YAE9BF,EAAiBngB,UAAY,WAES,aAA/BmgB,EAAiBngB,YACtBmgB,EAAiBE,aACnBF,EAAiBE,aAAa,YAE9BF,EAAiBngB,UAAY,aAGa,IAArCigB,EAAaC,qBACnBC,GACH7V,KAAKqS,eAAe,cAG0B,IAArCsD,EAAaK,sBAEtBL,EAAaK,sBACTL,EAAaK,qBAEnB,MAAMC,EAAmBjW,KAAK8V,kBAAkBnQ,KAAKnI,GACf,UAApCA,EAAY+L,SAASpN,MAAMlC,OACY,IAArC0b,EAAaK,qBAAiCC,EACb,aAA/BA,EAAiBvgB,UACfugB,EAAiBF,aACnBE,EAAiBF,aAAa,YAE9BE,EAAiBvgB,UAAY,WAES,aAA/BugB,EAAiBvgB,YACtBugB,EAAiBF,aACnBE,EAAiBF,aAAa,YAE9BE,EAAiBvgB,UAAY,aAGa,IAArCigB,EAAaK,qBACnBC,GACHjW,KAAKqS,eAAe,SAGxB,OAAOmB,EAAgBzT,MAAMC,KAAMC,YAIlC,SAASiW,GAAiB7W,GACT,iBAAXA,GAAuBA,EAAO8W,eAGzC9W,EAAO8W,aAAe9W,EAAO+W,oB,yBCjVxB,SAASC,GAAoBhX,GAGlC,IAAKA,EAAO8P,iBAAoB9P,EAAO8P,iBAAmB,eACtD9P,EAAO8P,gBAAgBzP,UACzB,OAGF,MAAM4W,EAAwBjX,EAAO8P,gBACrC9P,EAAO8P,gBAAkB,SAAyBT,GAQhD,GANoB,iBAATA,GAAqBA,EAAKvb,WACA,IAAjCub,EAAKvb,UAAUH,QAAQ,SACzB0b,EAAO1T,KAAKC,MAAMD,KAAKE,UAAUwT,KAC5Bvb,UAAYub,EAAKvb,UAAUtB,OAAO,IAGrC6c,EAAKvb,WAAaub,EAAKvb,UAAUa,OAAQ,CAE3C,MAAMuiB,EAAkB,IAAID,EAAsB5H,GAC5C8H,EAAkB,KAASvjB,eAAeyb,EAAKvb,WAC/CsjB,EAAqBrgB,OAAOmM,OAAOgU,EACrCC,GAWJ,OARAC,EAAmBC,OAAS,WAC1B,MAAO,CACLvjB,UAAWsjB,EAAmBtjB,UAC9BwjB,OAAQF,EAAmBE,OAC3BC,cAAeH,EAAmBG,cAClCviB,iBAAkBoiB,EAAmBpiB,mBAGlCoiB,EAET,OAAO,IAAIH,EAAsB5H,IAEnCrP,EAAO8P,gBAAgBzP,UAAY4W,EAAsB5W,UAIzD,EAA8BL,EAAQ,eAAgBc,IAChDA,EAAEhN,WACJiD,OAAO4K,eAAeb,EAAG,YAAa,CACpC/I,MAAO,IAAIiI,EAAO8P,gBAAgBhP,EAAEhN,WACpC0jB,SAAU,UAGP1W,IAIJ,SAAS2W,GAAmBzX,EAAQkE,GACzC,IAAKlE,EAAOG,kBACV,OAGI,SAAUH,EAAOG,kBAAkBE,WACvCtJ,OAAO4K,eAAe3B,EAAOG,kBAAkBE,UAAW,OAAQ,CAChE,MACE,YAA6B,IAAfM,KAAK+W,MAAwB,KAAO/W,KAAK+W,SAK7D,MAAMC,EAAoB,SAASxd,GACjC,IAAKA,IAAgBA,EAAYjF,IAC/B,OAAO,EAET,MAAM7B,EAAW,KAASJ,cAAckH,EAAYjF,KAEpD,OADA7B,EAASE,QACFF,EAASkT,KAAKnO,IACnB,MAAMwf,EAAQ,KAASza,WAAW/E,GAClC,OAAOwf,GAAwB,gBAAfA,EAAMhd,OACqB,IAApCgd,EAAMzjB,SAASR,QAAQ,WAI5BkkB,EAA0B,SAAS1d,GAEvC,MAAM2F,EAAQ3F,EAAYjF,IAAI4K,MAAM,mCACpC,GAAc,OAAVA,GAAkBA,EAAMnL,OAAS,EACnC,OAAQ,EAEV,MAAMsJ,EAAU/J,SAAS4L,EAAM,GAAI,IAEnC,OAAO7B,GAAYA,GAAW,EAAIA,GAG9B6Z,EAA2B,SAASC,GAKxC,IAAIC,EAAwB,MAwB5B,MAvB+B,YAA3B9T,EAAe+T,UAKbD,EAJA9T,EAAejG,QAAU,IACF,IAArB8Z,EAGsB,MAIA,WAEjB7T,EAAejG,QAAU,GAML,KAA3BiG,EAAejG,QAAiB,MAAQ,MAGlB,YAGrB+Z,GAGHE,EAAoB,SAAS/d,EAAa4d,GAG9C,IAAI7a,EAAiB,MAKU,YAA3BgH,EAAe+T,SACgB,KAA3B/T,EAAejG,UACrBf,EAAiB,OAGnB,MAAM4C,EAAQ,KAAStM,YAAY2G,EAAYjF,IAC7C,uBAUF,OATI4K,EAAMnL,OAAS,EACjBuI,EAAiBhJ,SAAS4L,EAAM,GAAGtN,OAAO,IAAK,IACX,YAA3B0R,EAAe+T,UACO,IAArBF,IAIV7a,EAAiB,YAEZA,GAGH4M,EACF9J,EAAOG,kBAAkBE,UAAU0J,qBACvC/J,EAAOG,kBAAkBE,UAAU0J,qBACjC,WAKE,GAJApJ,KAAK+W,MAAQ,KAIkB,WAA3BxT,EAAe+T,SAAwB/T,EAAejG,SAAW,GAAI,CACvE,MAAM,aAACiS,GAAgBvP,KAAKsP,mBACP,WAAjBC,GACFnZ,OAAO4K,eAAehB,KAAM,OAAQ,CAClC,MACE,YAA6B,IAAfA,KAAK+W,MAAwB,KAAO/W,KAAK+W,OAEzD9V,YAAY,EACZC,cAAc,IAKpB,GAAI8V,EAAkB/W,UAAU,IAAK,CAEnC,MAAMuX,EAAYN,EAAwBjX,UAAU,IAG9CwX,EAAaN,EAAyBK,GAGtCE,EAAYH,EAAkBtX,UAAU,GAAIuX,GAGlD,IAAIjb,EAEFA,EADiB,IAAfkb,GAAkC,IAAdC,EACLC,OAAOC,kBACA,IAAfH,GAAkC,IAAdC,EACZhmB,KAAKyS,IAAIsT,EAAYC,GAErBhmB,KAAKwS,IAAIuT,EAAYC,GAKxC,MAAM3a,EAAO,GACb3G,OAAO4K,eAAejE,EAAM,iBAAkB,CAC5C8D,IAAG,IACMtE,IAGXyD,KAAK+W,MAAQha,EAGf,OAAOoM,EAAyBpJ,MAAMC,KAAMC,YAI3C,SAAS4X,GAAuBxY,GACrC,IAAMA,EAAOG,qBACT,sBAAuBH,EAAOG,kBAAkBE,WAClD,OAOF,SAASoY,EAAWC,EAAIhO,GACtB,MAAMiO,EAAsBD,EAAGE,KAC/BF,EAAGE,KAAO,WACR,MAAMhW,EAAOhC,UAAU,GACjBjM,EAASiO,EAAKjO,QAAUiO,EAAKlB,MAAQkB,EAAKiW,WAChD,GAAsB,SAAlBH,EAAGI,YACHpO,EAAGhN,MAAQ/I,EAAS+V,EAAGhN,KAAKR,eAC9B,MAAM,IAAIsW,UAAU,4CAClB9I,EAAGhN,KAAKR,eAAiB,WAE7B,OAAOyb,EAAoBjY,MAAMgY,EAAI9X,YAGzC,MAAMmY,EACJ/Y,EAAOG,kBAAkBE,UAAU2Y,kBACrChZ,EAAOG,kBAAkBE,UAAU2Y,kBACjC,WACE,MAAMC,EAAcF,EAAsBrY,MAAMC,KAAMC,WAEtD,OADA6X,EAAWQ,EAAatY,MACjBsY,GAEX,EAA8BjZ,EAAQ,cAAec,IACnD2X,EAAW3X,EAAEoY,QAASpY,EAAEkP,QACjBlP,IAYJ,SAASqY,GAAoBnZ,GAClC,IAAKA,EAAOG,mBACR,oBAAqBH,EAAOG,kBAAkBE,UAChD,OAEF,MAAMD,EAAQJ,EAAOG,kBAAkBE,UACvCtJ,OAAO4K,eAAevB,EAAO,kBAAmB,CAC9C,MACE,MAAO,CACLgZ,UAAW,YACXC,SAAU,cACV1Y,KAAK2Y,qBAAuB3Y,KAAK2Y,oBAErC1X,YAAY,EACZC,cAAc,IAEhB9K,OAAO4K,eAAevB,EAAO,0BAA2B,CACtD,MACE,OAAOO,KAAK4Y,0BAA4B,MAE1C,IAAI9Y,GACEE,KAAK4Y,2BACP5Y,KAAKU,oBAAoB,wBACrBV,KAAK4Y,iCACF5Y,KAAK4Y,0BAEV9Y,GACFE,KAAKJ,iBAAiB,wBAClBI,KAAK4Y,yBAA2B9Y,IAGxCmB,YAAY,EACZC,cAAc,IAGhB,CAAC,sBAAuB,wBAAwB3K,QAASgY,IACvD,MAAMsK,EAAapZ,EAAM8O,GACzB9O,EAAM8O,GAAU,WAcd,OAbKvO,KAAK8Y,6BACR9Y,KAAK8Y,2BAA6B3Y,IAChC,MAAM4J,EAAK5J,EAAEkP,OACb,GAAItF,EAAGgP,uBAAyBhP,EAAGiP,gBAAiB,CAClDjP,EAAGgP,qBAAuBhP,EAAGiP,gBAC7B,MAAMC,EAAW,IAAIvP,MAAM,wBAAyBvJ,GACpD4J,EAAGH,cAAcqP,GAEnB,OAAO9Y,GAETH,KAAKJ,iBAAiB,2BACpBI,KAAK8Y,6BAEFD,EAAW9Y,MAAMC,KAAMC,cAK7B,SAASiZ,GAAuB7Z,EAAQkE,GAE7C,IAAKlE,EAAOG,kBACV,OAEF,GAA+B,WAA3B+D,EAAe+T,SAAwB/T,EAAejG,SAAW,GACnE,OAEF,GAA+B,WAA3BiG,EAAe+T,SAAwB/T,EAAejG,SAAW,IACnE,OAEF,MAAM6b,EAAY9Z,EAAOG,kBAAkBE,UAAU0J,qBACrD/J,EAAOG,kBAAkBE,UAAU0J,qBACnC,SAA8BuF,GAC5B,GAAIA,GAAQA,EAAKpa,MAAuD,IAAhDoa,EAAKpa,IAAIvB,QAAQ,0BAAkC,CACzE,MAAMuB,EAAMoa,EAAKpa,IAAIpC,MAAM,MAAMY,OAAQV,GAChB,yBAAhBA,EAAKH,QACXwC,KAAK,MAEJ2K,EAAO4O,uBACPU,aAAgBtP,EAAO4O,sBACzBhO,UAAU,GAAK,IAAIZ,EAAO4O,sBAAsB,CAC9Cna,KAAM6a,EAAK7a,KACXS,QAGFoa,EAAKpa,IAAMA,EAGf,OAAO4kB,EAAUpZ,MAAMC,KAAMC,YAI1B,SAASmZ,GAA+B/Z,EAAQkE,GAKrD,IAAMlE,EAAOG,oBAAqBH,EAAOG,kBAAkBE,UACzD,OAEF,MAAM2Z,EACFha,EAAOG,kBAAkBE,UAAU+U,gBAClC4E,GAA0D,IAAjCA,EAAsBrlB,SAGpDqL,EAAOG,kBAAkBE,UAAU+U,gBACjC,WACE,OAAKxU,UAAU,IAWkB,WAA3BsD,EAAe+T,SAAwB/T,EAAejG,QAAU,IAClC,YAA3BiG,EAAe+T,SACZ/T,EAAejG,QAAU,IACD,WAA3BiG,EAAe+T,UACjBrX,UAAU,IAAiC,KAA3BA,UAAU,GAAG9M,UAC3BwU,QAAQ2E,UAEV+M,EAAsBtZ,MAAMC,KAAMC,YAjBnCA,UAAU,IACZA,UAAU,GAAGF,MAAM,MAEd4H,QAAQ2E,aCrWvB,MAAM,GCIC,UAAwB,OAACjN,GAAU,GAAIuV,EAAU,CACtD0E,YAAY,EACZC,aAAa,EACbC,UAAU,EACVC,YAAY,IAGZ,MAAMC,EAAU,EACVnW,Ed6HD,SAAuBlE,GAE5B,MAAMoD,EAAS,CAAC6U,QAAS,KAAMha,QAAS,MAGxC,QAAsB,IAAX+B,IAA2BA,EAAOmE,UAE3C,OADAf,EAAO6U,QAAU,iBACV7U,EAGT,MAAM,UAACe,GAAanE,EAEpB,GAAImE,EAAUmW,gBACZlX,EAAO6U,QAAU,UACjB7U,EAAOnF,QAAUyB,EAAeyE,EAAUoW,UACtC,mBAAoB,QACnB,GAAIpW,EAAU0D,qBACW,IAA3B7H,EAAOwa,iBAA6Bxa,EAAO6P,0BAC1C7P,EAAOoQ,eAKXhN,EAAO6U,QAAU,SACjB7U,EAAOnF,QAAUyB,EAAeyE,EAAUoW,UACtC,wBAAyB,QACxB,GAAIpW,EAAUC,cACjBD,EAAUoW,UAAUza,MAAM,sBAC5BsD,EAAO6U,QAAU,OACjB7U,EAAOnF,QAAUyB,EAAeyE,EAAUoW,UACtC,qBAAsB,OACrB,KAAIva,EAAOG,oBACdgE,EAAUoW,UAAUza,MAAM,wBAQ5B,OADAsD,EAAO6U,QAAU,2BACV7U,EAPPA,EAAO6U,QAAU,SACjB7U,EAAOnF,QAAUyB,EAAeyE,EAAUoW,UACtC,uBAAwB,GAC5BnX,EAAOqX,oBAAsBza,EAAO0a,mBAChC,qBAAsB1a,EAAO0a,kBAAkBra,UAMrD,OAAO+C,EcxKgB,CAAoBpD,GAErC2a,EAAU,CACdzW,iBACA0W,WAAA,EACAlb,eAAgB,EAChBoC,WAAY,EACZG,gBAAiB,GAInB,OAAQiC,EAAe+T,SACrB,IAAK,SACH,IAAK,IAAe,IACf1C,EAAQ0E,WAEX,OADAI,EAAQ,wDACDM,EAET,GAA+B,OAA3BzW,EAAejG,QAEjB,OADAoc,EAAQ,wDACDM,EAETN,EAAQ,+BAERM,EAAQE,YAAc,EAGtB,GAA0C7a,EAAQkE,GAElD,EAA4BlE,EAAQkE,GACpC,EAA2BlE,GAC3B,EAA8BA,EAAQkE,GACtC,EAAuBlE,GACvB,EAAmCA,EAAQkE,GAC3C,EAAkClE,GAClC,EAAwBA,GACxB,EAAsCA,GACtC,EAAgCA,EAAQkE,GAExC,GAA+BlE,GAC/B,GAA+BA,GAC/B,GAA8BA,EAAQkE,GACtC,GAAkClE,GAClC,GAAkCA,EAAQkE,GAC1C,MACF,IAAK,UACH,IAAK,IAAgB,IAChBqR,EAAQ2E,YAEX,OADAG,EAAQ,yDACDM,EAETN,EAAQ,gCAERM,EAAQE,YAAc,EAGtB,GAA0C7a,EAAQkE,GAElD,EAA6BlE,EAAQkE,GACrC,EAA+BlE,EAAQkE,GACvC,EAAwBlE,GACxB,EAA6BA,GAC7B,EAA+BA,GAC/B,EAAiCA,GACjC,EAA+BA,GAC/B,EAA+BA,GAC/B,EAA8BA,GAC9B,EAA4BA,GAC5B,EAA6BA,GAE7B,GAA+BA,GAC/B,GAA+BA,GAC/B,GAA8BA,EAAQkE,GACtC,GAAkClE,GAClC,MACF,IAAK,OACH,IAAK,IAAa,IAAgCuV,EAAQ4E,SAExD,OADAE,EAAQ,yDACDM,EAETN,EAAQ,6BAERM,EAAQE,YAAc,EAEtB,EAA0B7a,GAC1B,EAA6BA,GAC7B,EAA4BA,EAAQkE,GACpC,EAA0BlE,GAI1B,GAA8BA,EAAQkE,GACtC,GAAkClE,GAClC,MACF,IAAK,SACH,IAAK,IAAeuV,EAAQ6E,WAE1B,OADAC,EAAQ,wDACDM,EAETN,EAAQ,+BAERM,EAAQE,YAAc,EAGtB,GAA0C7a,EAAQkE,GAElD,GAAgClE,GAChC,GAAiCA,GACjC,EAA4BA,GAC5B,EAA+BA,GAC/B,EAAgCA,GAChC,GAAqCA,GACrC,EAA4BA,GAC5B,GAA4BA,GAE5B,GAA+BA,GAC/B,GAA8BA,EAAQkE,GACtC,GAAkClE,GAClC,GAAkCA,EAAQkE,GAC1C,MACF,QACEmW,EAAQ,wBAIZ,OAAOM,EDxIPG,CAAe,CAAC9a,OAA0B,oBAAXA,YAAyB/J,EAAY+J,SACvD","file":"67.9ce62d8932534966fe04.js","sourcesContent":["/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n"],"sourceRoot":""}