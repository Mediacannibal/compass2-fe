{"version":3,"sources":["webpack:///./src/utils/axios.ts","webpack:///./src/utils/headers.js","webpack:///./src/store/ColourStore.ts","webpack:///./src/store/Store.ts","webpack:///./src/store/ActiveScreen.ts","webpack:///./src/store/authStore.ts","webpack:///./src/utils/api/getuser.ts","webpack:///./src/utils/api/edituser.ts","webpack:///./src/utils/api/editprofileuser.ts","webpack:///./src/store/userStore.ts","webpack:///./src/utils/api/getinstance.ts"],"names":["instance","axios","create","baseURL","headers","auth","JSON","parse","HSLToHex","h","s","l","c","Math","abs","x","m","r","g","b","round","toString","length","generate_theme_colours","value","m1","m2h_temp","H","cmin","min","cmax","max","delta","toFixed","hexToHSL","m3h_temp","color_11","color_12","color_13","color_14","color_15","color_red","color_green","color_m1","color_m2","color_m3","color_s1","color_s2","color_s3","color_t1","color_t2","color_t3","colorStore","Store","useColourObjectStore","useStore","colourObj","setcolourObj","loadinstancecolor","id","getinstance","then","data","results","color_field","loaddefaultcolor","initialValue","this","_state","index","subscribers","oldVal","newVal","newValue","Function","pingSubscribers","callback","currentIndex","store","useState","state","setValue","useLayoutEffect","subscribe","update","ActiveScreen1","useActiveScreen","ActiveScreen","setActiveScreen","authStore","localStorage","getItem","String","useAuth","setAuth","login","AuthToken","logout","clear","sessionStorage","getuser","get","edituser","put","editprofileuser","userStore","userDetail","userstore","user","setuser","selfuser","setselfuser","loaduser","res","oldarr","map","obj","image","firstname","lastname","email","address","dob","user_type","gender","auth_type","photo_url","dial_code","phone","err","console","log"],"mappings":"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","file":"1.643e913a20ce04c718eb.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://apidc.mediacannibal.com/'\r\n});\r\n\r\nexport default instance;","/**\r\n * Created by rozer on 8/16/2018.\r\n */\r\n\r\n\r\nconst headers = (auth) => {\r\n    if (auth === null ||auth === \"null\" )\r\n      return ({\r\n         'Accept': 'application/json',\r\n      })\r\n   else\r\n      return ({\r\n         'Accept': 'application/json',\r\n         'Authorization': auth ? `Token ${JSON.parse(auth)}` : ''\r\n      })\r\n};\r\n\r\n\r\n\r\nexport default headers\r\n","import getinstance from 'utils/api/getinstance';\r\nimport { Store, useStore } from './Store'\r\n\r\nconst hexToHSL = (H) => {\r\n  // Convert hex to RGB first\r\n  let r = 0, g = 0, b = 0;\r\n  if (H.length == 4) {\r\n    r = \"0x\" + H[1] + H[1];\r\n    g = \"0x\" + H[2] + H[2];\r\n    b = \"0x\" + H[3] + H[3];\r\n  } else if (H.length == 7) {\r\n    r = \"0x\" + H[1] + H[2];\r\n    g = \"0x\" + H[3] + H[4];\r\n    b = \"0x\" + H[5] + H[6];\r\n  }\r\n  // Then to HSL\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  let cmin = Math.min(r, g, b),\r\n    cmax = Math.max(r, g, b),\r\n    delta = cmax - cmin,\r\n    h = 0,\r\n    s = 0,\r\n    l = 0;\r\n\r\n  if (delta == 0)\r\n    h = 0;\r\n  else if (cmax == r)\r\n    h = ((g - b) / delta) % 6;\r\n  else if (cmax == g)\r\n    h = (b - r) / delta + 2;\r\n  else\r\n    h = (r - g) / delta + 4;\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  if (h < 0)\r\n    h += 360;\r\n\r\n  l = (cmax + cmin) / 2;\r\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n  s = +(s * 100).toFixed(1);\r\n  l = +(l * 100).toFixed(1);\r\n\r\n  let hsl = { h, s, l }\r\n  // console.log(\"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\");\r\n  return hsl;\r\n\r\n}\r\n\r\nconst HSLToHex = (h, s, l) => {\r\n  s /= 100;\r\n  l /= 100;\r\n\r\n  let c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n    m = l - c / 2,\r\n    r = 0,\r\n    g = 0,\r\n    b = 0;\r\n\r\n  if (0 <= h && h < 60) {\r\n    r = c; g = x; b = 0;\r\n  } else if (60 <= h && h < 120) {\r\n    r = x; g = c; b = 0;\r\n  } else if (120 <= h && h < 180) {\r\n    r = 0; g = c; b = x;\r\n  } else if (180 <= h && h < 240) {\r\n    r = 0; g = x; b = c;\r\n  } else if (240 <= h && h < 300) {\r\n    r = x; g = 0; b = c;\r\n  } else if (300 <= h && h < 360) {\r\n    r = c; g = 0; b = x;\r\n  }\r\n  // Having obtained RGB, convert channels to hex\r\n  r = Math.round((r + m) * 255).toString(16);\r\n  g = Math.round((g + m) * 255).toString(16);\r\n  b = Math.round((b + m) * 255).toString(16);\r\n\r\n  // Prepend 0s, if necessary\r\n  if (r.length == 1)\r\n    r = \"0\" + r;\r\n  if (g.length == 1)\r\n    g = \"0\" + g;\r\n  if (b.length == 1)\r\n    b = \"0\" + b;\r\n\r\n  return \"#\" + r + g + b;\r\n}\r\nexport class ColourObjItem {\r\n\r\n  color_11: String\r\n  color_12: String\r\n  color_13: String\r\n  color_14: String\r\n  color_15: String\r\n  color_red: String\r\n  color_green: String\r\n  color_m1: String\r\n  color_m2: String\r\n  color_m3: String\r\n  color_s1: String\r\n  color_s2: String\r\n  color_s3: String\r\n  color_t1: String\r\n  color_t2: String\r\n  color_t3: String\r\n\r\n  constructor(o: {\r\n\r\n    color_11: String\r\n  color_12: String\r\n  color_13: String\r\n  color_14: String\r\n  color_15: String\r\n  color_red: String\r\n  color_green: String\r\n  color_m1: String\r\n  color_m2: String\r\n  color_m3: String\r\n  color_s1: String\r\n  color_s2: String\r\n  color_s3: String\r\n  color_t1: String\r\n  color_t2: String\r\n  color_t3: String\r\n    // color_11: '#ad43f5'\r\n    // color_12: '#78ce6a'\r\n    // color_13: '#EC7A4A'\r\n    // color_14: '#f5d343'\r\n    // color_15: '#76c2f6'\r\n    // color_red: '#e00000'\r\n    // color_green: '#639A4D'\r\n    // color_m1: '#00253a'\r\n    // color_m2: '#3998ab'\r\n    // color_m3: '#f6901d'\r\n    // color_s1: '#9bb8c8'\r\n    // color_s2: '#9bc1c8'\r\n    // color_s3: '#c8b39b'\r\n    // color_t1: '#ebf3f8'\r\n    // color_t2: '#ebf6f8'\r\n    // color_t3: '#f8f2eb'\r\n\r\n  }) {\r\n\r\n    this.color_11 = o.color_11\r\n    this.color_12 = o.color_12\r\n    this.color_13 = o.color_13\r\n    this.color_14 = o.color_14\r\n    this.color_15 = o.color_15\r\n    this.color_red = o.color_red\r\n    this.color_green = o.color_green\r\n    this.color_m1 = o.color_m1\r\n    this.color_m2 = o.color_m2\r\n    this.color_m3 = o.color_m3\r\n    this.color_s1 = o.color_s1\r\n    this.color_s2 = o.color_s2\r\n    this.color_s3 = o.color_s3\r\n    this.color_t1 = o.color_t1\r\n    this.color_t2 = o.color_t2\r\n    this.color_t3 = o.color_t3\r\n\r\n  }\r\n}\r\n\r\nconst generate_theme_colours = (value: any) => {\r\n  // color 1 to HSL\r\n  let m1 = {}\r\n  m1 = hexToHSL(value)\r\n\r\n  // calculating color 2\r\n  let m2h_temp = 0\r\n  m2h_temp = m1.h - 12\r\n  if (m2h_temp > 360) {\r\n    m2h_temp = m2h_temp - 360\r\n  } else if (m2h_temp < 0) {\r\n    m2h_temp = m2h_temp + 360\r\n  }\r\n\r\n  // calculating color 3\r\n  let m3h_temp = 0\r\n  m3h_temp = m1.h - 170\r\n  if (m3h_temp > 360) {\r\n    m3h_temp = m3h_temp - 360\r\n  } else if (m3h_temp < 0) {\r\n    m3h_temp = m3h_temp + 360\r\n  }\r\n\r\n  let m2 = ('')\r\n  m2 = HSLToHex(m2h_temp, 50, 45)\r\n\r\n  let m3 = ('')\r\n  m3 = HSLToHex(m3h_temp, 93, 54)\r\n\r\n  let s1 = ('')\r\n  s1 = HSLToHex(m1.h, 30, 70)\r\n\r\n  let s2 = ('')\r\n  s2 = HSLToHex(m2h_temp, 30, 70)\r\n\r\n  let s3 = ('')\r\n  s3 = HSLToHex(m3h_temp, 30, 70)\r\n\r\n  let t1 = ('')\r\n  t1 = HSLToHex(m1.h, 50, 95)\r\n\r\n  let t2 = ('')\r\n  t2 = HSLToHex(m2h_temp, 50, 95)\r\n\r\n  let t3 = ('')\r\n  t3 = HSLToHex(m3h_temp, 50, 95)\r\n  // console.log(m2_temp, m1.s, 29);\r\n\r\n  let data = {\r\n    color_11: '#ad43f5',\r\n    color_12: '#78ce6a',\r\n    color_13: '#EC7A4A',\r\n    color_14: '#f5d343',\r\n    color_15: '#76c2f6',\r\n    color_red: '#e00000',\r\n    color_green: '#639A4D',\r\n    color_m1: value,\r\n    color_m2: m2,\r\n    color_m3: m3,\r\n    color_s1: s1,\r\n    color_s2: s2,\r\n    color_s3: s3,\r\n    color_t1: t1,\r\n    color_t2: t2,\r\n    color_t3: t3,\r\n  }\r\n\r\n  // console.log(data)\r\n  return data\r\n}\r\n\r\nexport const colorStore = new Store<ColourObjItem | false>(false)\r\n\r\nexport const useColourObjectStore = () => {\r\n\r\n  const [colourObj, setcolourObj] = useStore(colorStore)\r\n\r\n  return {\r\n    colourObj, setcolourObj,\r\n\r\n    async loadinstancecolor(id: any) {\r\n      await getinstance(id).then(\r\n        (data) => {\r\n          setcolourObj(generate_theme_colours(data.data.results[0].color_field))\r\n        }\r\n      )\r\n    },\r\n\r\n    loaddefaultcolor() {\r\n      setcolourObj(generate_theme_colours(\"#00253a\"))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\r\n\r\nexport class Store<T> {\r\n    private _state: T;\r\n    private subscribers: { [k: number]: Subscriber<T> };\r\n    private index: number;\r\n    private static id: number = 0;\r\n    id: number;\r\n\r\n    constructor(initialValue: T) {\r\n        this._state = initialValue;\r\n        this.index = 0;\r\n        this.subscribers = {};\r\n        this.id = Store.id++;\r\n    }\r\n\r\n    private pingSubscribers(oldVal: T, newVal: T) {\r\n        for (let id in this.subscribers) {\r\n            this.subscribers[id](oldVal, newVal);\r\n        }\r\n    }\r\n\r\n    update(newValue: ((old: T) => T) | T) {\r\n        let newVal: T;\r\n        if (newValue instanceof Function) {\r\n            newVal = newValue(this._state);\r\n        }\r\n        else {\r\n            newVal = newValue;\r\n        }\r\n        const oldVal = this._state;\r\n\r\n        this._state = newVal;\r\n        this.pingSubscribers(oldVal, newVal);\r\n\r\n        return newVal;\r\n    }\r\n\r\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\r\n    subscribe(callback: Subscriber<T>) {\r\n        const currentIndex = ++this.index;\r\n\r\n        this.subscribers[currentIndex] = callback;\r\n\r\n        const subscribers = this.subscribers;\r\n        return function unsubscribe() {\r\n            delete subscribers[currentIndex];\r\n        }\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport function useStore<T>(store: Store<T>) {\r\n    const [value, setValue] = useState(store.state);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\r\n            setValue(newVal);\r\n        });\r\n        return unsubscribe\r\n    }, [store.id]);\r\n\r\n\r\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\r\n        store.update(newVal);\r\n    }\r\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\r\n    return returnVal;\r\n}\r\n\r\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\r\n    [\r\n        { [k: string]: T },\r\n        (\r\n            id: string,\r\n            newVal: T | ((old: T) => T)\r\n        ) => void\r\n    ] {\r\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\r\n    const ids = [Object.entries(stores).map(item => item[1].id)];\r\n\r\n    useLayoutEffect(() => {\r\n        // console.log(\"stores has changed\")\r\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\r\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\r\n        }));\r\n\r\n        return () => unsubscribes.forEach(item => item());\r\n    }, [ids.join(\"-\")]);\r\n\r\n\r\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\r\n        stores[id].update(newVal)\r\n    }\r\n\r\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\r\n\r\n    return returnVal;\r\n}","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const ActiveScreen1 = new Store<string>(\"Splash\");\r\n\r\nexport const useActiveScreen = () => {\r\n\r\n    const [ActiveScreen, setActiveScreen] = useStore(ActiveScreen1);\r\n\r\n    return {\r\n        ActiveScreen, setActiveScreen,\r\n    }\r\n\r\n};","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('AuthToken') ? JSON.parse(String(localStorage.getItem('AuthToken'))) : false);\r\n\r\n\r\nexport const useAuth = () => {\r\n    const [auth, setAuth] = useStore(authStore);\r\n\r\n    return {\r\n        auth, setAuth,\r\n        login(AuthToken: string) {\r\n            setAuth(AuthToken);\r\n        },\r\n        logout() {\r\n            localStorage.clear()\r\n            sessionStorage.clear()\r\n            setAuth(null);\r\n        },\r\n    }\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getuser = async () => {\r\n\r\n    return (await axios.get(`user/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getuser;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst edituser = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`user/edit_profile/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default edituser;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editprofileuser = async (data: any) => {\r\n\r\n    return (await axios.put(`user/profile/edit/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editprofileuser;","import { Store, useStore } from \"./Store\";\r\nimport getuser from \"../utils/api/getuser\";\r\nimport edituser from \"../utils/api/edituser\";\r\n\r\nimport editprofileuser from \"../utils/api/editprofileuser\";\r\n\r\nexport class userItem {\r\n\r\n    id: String;\r\n    image: String;\r\n    firstname: String;\r\n    lastname: String;\r\n    email: String;\r\n    address: String;\r\n    dob: String;\r\n    user_type: String;\r\n    gender: String;\r\n    auth_type: String;\r\n    photo_url: String;\r\n    dial_code: String;\r\n    phone: String;\r\n    is_deleted: String;\r\n    updated_by: String;\r\n    owned_by: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    created_by: String;\r\n    TextData: any;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        image: String;\r\n        firstname: String;\r\n        lastname: String;\r\n        email: String;\r\n        address: String;\r\n        dob: String;\r\n        user_type: String;\r\n        gender: String;\r\n        auth_type: String;\r\n        photo_url: String;\r\n        dial_code: String;\r\n        phone: String;\r\n        is_deleted: String;\r\n        updated_by: String;\r\n        owned_by: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        created_by: String;\r\n        TextData: any;\r\n    }) {\r\n        this.id = o.id;\r\n        this.image = o.image;\r\n        this.firstname = o.firstname;\r\n        this.lastname = o.lastname;\r\n        this.email = o.email;\r\n        this.address = o.address;\r\n        this.dob = o.dob;\r\n        this.user_type = o.user_type;\r\n        this.gender = o.gender;\r\n        this.auth_type = o.auth_type;\r\n        this.photo_url = o.photo_url;\r\n        this.dial_code = o.dial_code;\r\n        this.phone = o.phone;\r\n        this.is_deleted = o.is_deleted;\r\n        this.updated_by = o.updated_by;\r\n        this.owned_by = o.owned_by;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.created_by = o.created_by;\r\n        this.TextData = o.TextData;\r\n    }\r\n}\r\n\r\nexport const userStore = new Store<userItem[] | false>(false);\r\nexport const userDetail = new Store<userItem | string>(typeof localStorage === \"undefined\" ? false : localStorage.getItem('UserDetails') ? JSON.parse(String(localStorage.getItem('UserDetails'))) : false);\r\nexport const userstore = () => {\r\n    const [user, setuser] = useStore(userStore);\r\n    const [selfuser, setselfuser] = useStore(userDetail);\r\n\r\n    return {\r\n        user, setuser, selfuser, setselfuser,\r\n\r\n        async loaduser() {\r\n            await getuser().then(\r\n                (data) => {\r\n                    setuser(data.data);\r\n                }\r\n            )\r\n\r\n        },\r\n        async edituser(id: any, data: any) {\r\n            await edituser(id, data).then((res) => {\r\n                setuser((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.image = data.image\r\n                            x.firstname = data.firstname\r\n                            x.lastname = data.lastname\r\n                            x.email = data.email\r\n                            x.address = data.address\r\n                            x.dob = data.dob\r\n                            x.user_type = data.user_type\r\n                            x.gender = data.gender\r\n                            x.auth_type = data.auth_type\r\n                            x.photo_url = data.photo_url\r\n                            x.dial_code = data.dial_code\r\n                            x.phone = data.phone\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n\r\n        async editprofileuser(data: any) {\r\n            await editprofileuser(data).then((res) => {\r\n                setselfuser((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.image = data.image\r\n                            x.firstname = data.firstname\r\n                            x.lastname = data.lastname\r\n                            x.email = data.email\r\n                            x.address = data.address\r\n                            x.dob = data.dob\r\n                            x.user_type = data.user_type\r\n                            x.gender = data.gender\r\n                            x.auth_type = data.auth_type\r\n                            x.photo_url = data.photo_url\r\n                            x.dial_code = data.dial_code\r\n                            x.phone = data.phone\r\n                            return x;\r\n                        }\r\n                        return getobj(obj);\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n\r\n    }\r\n\r\n}","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getinstance = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getinstance;"],"sourceRoot":""}