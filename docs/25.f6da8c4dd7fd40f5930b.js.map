{"version":3,"sources":["webpack:///./src/store/ActiveInstance.ts","webpack:///./src/utils/api/postlanguage.ts","webpack:///./src/utils/api/editLanguage.ts","webpack:///./src/utils/api/getsublevel.ts","webpack:///./src/utils/api/postsublevel.ts","webpack:///./src/utils/api/editsublevel.ts","webpack:///./src/utils/api/deletesublevel.ts","webpack:///./src/store/sublevelStore.ts","webpack:///./src/utils/api/getGamedatalog.ts","webpack:///./src/store/GamedatalogStore.ts","webpack:///./src/store/LanguageStore.ts","webpack:///./src/utils/api/getleveldetailsbyid.ts","webpack:///./src/utils/api/getleveldetailsbyqrid.ts","webpack:///./src/store/ActiveLevelDetailsStore.ts","webpack:///./src/store/ActiveSubLevelDetailsStore.ts","webpack:///./src/store/ActivePopup.ts","webpack:///./src/utils/api/editinstance.ts","webpack:///./src/utils/api/postinstance.ts","webpack:///./src/utils/api/deleteinstance.ts","webpack:///./src/store/InstanceStore.ts","webpack:///./src/utils/api/getsublevel_data_byid.ts","webpack:///./src/utils/api/getlevel.ts","webpack:///./src/utils/api/postlevel.ts","webpack:///./src/utils/api/editlevel.ts","webpack:///./src/utils/api/deletelevel.ts","webpack:///./src/store/levelStore.ts","webpack:///./src/utils/api/getlogo.ts","webpack:///./src/utils/api/editlogo.ts","webpack:///./src/utils/api/postlogo.ts","webpack:///./src/utils/api/deletelogo.ts","webpack:///./src/store/logoStore.ts","webpack:///./src/utils/api/getlogo_arrayposition.ts","webpack:///./src/utils/api/getlogo_arrayposition_iid.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/utils/api/getleveldetails.ts","webpack:///./src/store/leveldetailsStore.ts"],"names":["ActiveInstance1","Store","useActiveInstance","useStore","ActiveInstance","setActiveInstance","postlanguage","data","axios","post","headers","String","localStorage","getItem","editLanguage","id","put","getsublevel","instanceid","levelid","get","postsublevel","editsublevel","deletesublevel","sublevelStore","sublevel1Store","sublevelstore","sublevel","setsublevel","sublevel1","setsublevel1","loadsublevel","then","results","err","console","log","logerror","response","loadsublevelwithid","res","oldArray","oldarr","map","obj","x","instance_id","level_id","sl_types","sl_icon","sl_title","sl_stitle","sl_body","sl_bodytype","sl_bodyoptions","sl_misc","sl_media","filter","ele","loadsublevel1_data_byid","getsublevel_data_byid","getGamedatalog","level","user","GamedatalogStore","Gamedatastore","Gamedatalog","setGamedatalog","loadGamedatalog","loadGamedatalogfilter","LanguageStore","key","value","useLanguageStore","Language","setLanguage","getleveldetailsbyid","getleveldetailsbyqrid","leveldetailsStore","userActiveLevelDetailsStore","ActiveLevelDetails","setActiveLevelDetails","loadActiveleveldetails","loadActiveleveldetailsbyqr","userActiveSubLevelDetailsStore","ActiveSubLevelDetails","setActiveSubLevelDetails","loadActiveSubleveldetails","ActivePopup1","useActivePopup","ActivePopup","setActivePopup","editinstance","postinstance","deleteinstance","instanceStore","instanceStore1","JSON","parse","instancestore","instance","setinstance","activeInstanceData","setactiveInstanceData","loadinstance","getinstance","loadinstancewithcallback","callback","loadactiveInstancebyID","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","color_field","getlevel","postlevel","editlevel","deletelevel","levelStore","levelstore","setlevel","loadlevel","loadlevelwithid","l_level","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","l_media","l_misc","completion_image","clue_image","l_qr_id","unlock_after","getlogo","editlogo","postlogo","deletelogo","logoStore","logostore","logo","setlogo","loadlogo","loadlogowithcallback","loadlogowithid","i_logo","position","section","getlogo_arrayposition","getlogo_arrayposition_iid","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","loadlogo_arrayposition_iid","getleveldetails","leveldetailslstore","leveldetails","setleveldetails","loadleveldetails"],"mappings":"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","file":"25.f6da8c4dd7fd40f5930b.js","sourcesContent":["import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const ActiveInstance1 = new Store<Number>(-1);\r\n\r\nexport const useActiveInstance = () => {\r\n\r\n    const [ActiveInstance, setActiveInstance] = useStore(ActiveInstance1);\r\n\r\n    return {\r\n        ActiveInstance, setActiveInstance,\r\n    }\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlanguage = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/text/create/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlanguage;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editLanguage = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/text/update/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editLanguage;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getsublevel = async (instanceid: any, levelid: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/sublevel/info/?instance_id=${instanceid}&level_id=${levelid}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postsublevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/sublevel/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editsublevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/sublevel/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletesublevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/sublevel/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletesublevel;","import { Store, useStore } from './Store'\r\nimport getsublevel from '../utils/api/getsublevel'\r\nimport postsublevel from '../utils/api/postsublevel'\r\nimport editsublevel from '../utils/api/editsublevel'\r\nimport deletesublevel from '../utils/api/deletesublevel'\r\nimport getsublevel_data_byid from '../utils/api/getsublevel_data_byid'\r\nimport { logerror } from 'utils/actions'\r\nexport class sublevelItem {\r\n  id: String\r\n  sl_types: String\r\n  sl_icon: String\r\n  sl_title: String\r\n  sl_stitle: String\r\n  sl_body: String\r\n  sl_bodytype: String\r\n  sl_bodyoptions: String\r\n  sl_misc: boolean\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  level_id: String\r\n  sl_media: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    sl_types: String\r\n    sl_icon: String\r\n    sl_title: String\r\n    sl_stitle: String\r\n    sl_body: String\r\n    sl_bodytype: String\r\n    sl_bodyoptions: String\r\n    sl_misc: boolean\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    level_id: String\r\n    sl_media: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.sl_types = o.sl_types\r\n    this.sl_icon = o.sl_icon\r\n    this.sl_title = o.sl_title\r\n    this.sl_stitle = o.sl_stitle\r\n    this.sl_body = o.sl_body\r\n    this.sl_bodytype = o.sl_bodytype\r\n    this.sl_bodyoptions = o.sl_bodyoptions\r\n    this.sl_misc = o.sl_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.level_id = o.level_id\r\n    this.sl_media = o.sl_media\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const sublevelStore = new Store<sublevelItem[] | false>(false)\r\n\r\nexport const sublevel1Store = new Store<sublevelItem | false>(false)\r\n\r\nexport const sublevelstore = () => {\r\n  const [sublevel, setsublevel] = useStore(sublevelStore)\r\n  const [sublevel1, setsublevel1] = useStore(sublevel1Store)\r\n\r\n  return {\r\n    sublevel,\r\n    setsublevel,\r\n    sublevel1,\r\n    setsublevel1,\r\n    async loadsublevel() {\r\n      await getsublevel('', '')\r\n        .then(data => {\r\n          setsublevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadsublevelwithid(instanceid: any, levelid: any) {\r\n      await getsublevel(instanceid, levelid)\r\n        .then(data => {\r\n          setsublevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async postsublevel(data: any) {\r\n      await postsublevel(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setsublevel((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async editsublevel(id: any, data: any) {\r\n      await editsublevel(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setsublevel(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.instance_id = data.instance_id\r\n                  x.level_id = data.level_id\r\n                  x.sl_types = data.sl_types\r\n                  x.sl_icon = data.sl_icon\r\n                  x.sl_title = data.sl_title\r\n                  x.sl_stitle = data.sl_stitle\r\n                  x.sl_body = data.sl_body\r\n                  x.sl_bodytype = data.sl_bodytype\r\n                  x.sl_bodyoptions = data.sl_bodyoptions\r\n                  x.sl_misc = data.sl_misc\r\n                  x.sl_media = data.sl_media\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async deletesublevel(id: any) {\r\n      await deletesublevel(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setsublevel(sublevel && sublevel.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadsublevel1_data_byid(id: any) {\r\n      await getsublevel_data_byid(id)\r\n        .then(data => {\r\n          console.log('getsublevel_data_byid', data)\r\n          setsublevel1(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getGamedatalog = async (level: any, user: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/gamedatalog/?level_sublevel=${level}&username=${user}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getGamedatalog;","import { Store, useStore } from './Store'\r\nimport getGamedatalog from '../utils/api/getGamedatalog'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class GamedatalogItem {\r\n  id: String\r\n  level_sublevel_id: String\r\n  level_sublevel: String\r\n  data: String\r\n  misc: String\r\n  status: String\r\n  created_at: String\r\n  updated_at: String\r\n  user: any\r\n  instance: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    level_sublevel_id: String\r\n    level_sublevel: String\r\n    data: String\r\n    misc: String\r\n    status: String\r\n    created_at: String\r\n    updated_at: String\r\n    user: any\r\n    instance: any\r\n  }) {\r\n    this.id = o.id\r\n    this.level_sublevel_id = o.level_sublevel_id\r\n    this.level_sublevel = o.level_sublevel\r\n    this.data = o.data\r\n    this.misc = o.misc\r\n    this.status = o.status\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.user = o.user\r\n    this.instance = o.instance\r\n  }\r\n}\r\n\r\nexport const GamedatalogStore = new Store<GamedatalogItem[] | false>(false)\r\n\r\nexport const Gamedatastore = () => {\r\n  const [Gamedatalog, setGamedatalog] = useStore(GamedatalogStore)\r\n\r\n  return {\r\n    Gamedatalog,\r\n    setGamedatalog,\r\n\r\n    async loadGamedatalog() {\r\n      await getGamedatalog('', '')\r\n        .then(data => {\r\n          console.log('>>> data.data.resultsdata.data.results :', data.data)\r\n          setGamedatalog(data.data)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadGamedatalogfilter(level: any, user: any) {\r\n      await getGamedatalog(level, user)\r\n        .then(data => {\r\n          console.log('>>> data.data.resultsdata.data.results :', data.data)\r\n          setGamedatalog(data.data)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const LanguageStore = new Store<{ key: string, value: string }>({ key: \"ENGLISH\", value: \"ENGLISH\" });\r\n\r\n\r\nexport const useLanguageStore = () => {\r\n    const [Language, setLanguage] = useStore(LanguageStore);\r\n\r\n    return {\r\n        Language, setLanguage,\r\n\r\n    }\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetailsbyid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/list/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetailsbyid;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetailsbyqrid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/qr/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetailsbyqrid;","import { logerror } from './../utils/actions'\r\nimport { Store, useStore } from './Store'\r\nimport getleveldetailsbyid from '../utils/api/getleveldetailsbyid'\r\nimport getleveldetailsbyqrid from '../utils/api/getleveldetailsbyqrid'\r\n\r\nexport class leveldetailsItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  progress: Number\r\n  TextData: any\r\n  completion_image: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    progress: Number\r\n    TextData: any\r\n    completion_image: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n    this.progress = o.progress\r\n    this.TextData = o.TextData\r\n    this.completion_image = o.completion_image\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem | false>(false)\r\n\r\nexport const userActiveLevelDetailsStore = () => {\r\n  const [ActiveLevelDetails, setActiveLevelDetails] = useStore(\r\n    leveldetailsStore\r\n  )\r\n\r\n  return {\r\n    ActiveLevelDetails,\r\n    setActiveLevelDetails,\r\n\r\n    async loadActiveleveldetails(id: any) {\r\n      await getleveldetailsbyid(id)\r\n        .then(data => {\r\n          // console.log(\"data of level \", data.data.results[0]);\r\n          setActiveLevelDetails(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadActiveleveldetailsbyqr(id: any) {\r\n      await getleveldetailsbyqrid(id)\r\n        .then(data => {\r\n          setActiveLevelDetails(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Store, useStore } from './Store'\r\nimport getsublevel_data_byid from '../utils/api/getsublevel_data_byid'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class leveldetailsItem {\r\n  created_at: String\r\n  id: String\r\n  instance_id: any\r\n  level_id: any\r\n  sl_body: String\r\n  sl_bodyoptions: String\r\n  sl_bodytype: String\r\n  sl_icon: String\r\n  sl_media: String\r\n  sl_misc: null\r\n  sl_stitle: String\r\n  sl_title: String\r\n  sl_types: String\r\n  updated_at: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    created_at: String\r\n    id: String\r\n    instance_id: any\r\n    level_id: any\r\n    sl_body: String\r\n    sl_bodyoptions: String\r\n    sl_bodytype: String\r\n    sl_icon: String\r\n    sl_media: String\r\n    sl_misc: null\r\n    sl_stitle: String\r\n    sl_title: String\r\n    sl_types: String\r\n    updated_at: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.created_at = o.created_at\r\n    this.instance_id = o.instance_id\r\n    this.level_id = o.level_id\r\n    this.sl_body = o.sl_body\r\n    this.sl_bodyoptions = o.sl_bodyoptions\r\n    this.sl_bodytype = o.sl_bodytype\r\n    this.sl_icon = o.sl_icon\r\n    this.sl_media = o.sl_media\r\n    this.sl_misc = o.sl_misc\r\n    this.sl_stitle = o.sl_stitle\r\n    this.sl_title = o.sl_title\r\n    this.sl_types = o.sl_types\r\n    this.updated_at = o.updated_at\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem | false>(false)\r\n\r\nexport const userActiveSubLevelDetailsStore = () => {\r\n  const [ActiveSubLevelDetails, setActiveSubLevelDetails] = useStore(\r\n    leveldetailsStore\r\n  )\r\n\r\n  return {\r\n    ActiveSubLevelDetails,\r\n    setActiveSubLevelDetails,\r\n\r\n    async loadActiveSubleveldetails(id: any) {\r\n      await getsublevel_data_byid(id)\r\n        .then(data => {\r\n          // console.log(\"sublevel\", data.data.results[0]);\r\n          setActiveSubLevelDetails(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Store, useStore } from \"./Store\";\r\n\r\nexport const ActivePopup1 = new Store<string>(\"\");\r\n\r\nexport const useActivePopup = () => {\r\n\r\n    const [ActivePopup, setActivePopup] = useStore(ActivePopup1);\r\n\r\n    return {\r\n        ActivePopup, setActivePopup,\r\n    }\r\n\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editinstance = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postinstance = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instance/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deleteinstance = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deleteinstance;","import { Store, useStore } from './Store'\r\nimport getinstance from '../utils/api/getinstance'\r\nimport editinstance from '../utils/api/editinstance'\r\nimport postinstance from '../utils/api/postinstance'\r\nimport deleteinstance from '../utils/api/deleteinstance'\r\nimport { logerror } from 'utils/actions'\r\nexport class instanceItem {\r\n  id: String\r\n  i_icon: String\r\n  mascot: String\r\n  i_title: String\r\n  i_stitle: String\r\n  i_body: String\r\n  i_bodytype: String\r\n  i_bodyoptions: String\r\n  locations: String\r\n  i_media: String\r\n  i_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  color_field: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_icon: String\r\n    mascot: String\r\n    i_title: String\r\n    i_stitle: String\r\n    i_body: String\r\n    i_bodytype: String\r\n    i_bodyoptions: String\r\n    locations: String\r\n    i_media: String\r\n    i_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    color_field: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.i_icon = o.i_icon\r\n    this.mascot = o.mascot\r\n    this.i_title = o.i_title\r\n    this.i_stitle = o.i_stitle\r\n    this.i_body = o.i_body\r\n    this.i_bodytype = o.i_bodytype\r\n    this.i_bodyoptions = o.i_bodyoptions\r\n    this.locations = o.locations\r\n    this.i_media = o.i_media\r\n    this.i_misc = o.i_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.color_field = o.color_field\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport class instanceItem1 {\r\n  id: String\r\n  i_icon: String\r\n  mascot: String\r\n  i_title: String\r\n  i_stitle: String\r\n  i_body: String\r\n  i_bodytype: String\r\n  i_bodyoptions: String\r\n  locations: String\r\n  i_media: String\r\n  i_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  color_field: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_icon: String\r\n    mascot: String\r\n    i_title: String\r\n    i_stitle: String\r\n    i_body: String\r\n    i_bodytype: String\r\n    i_bodyoptions: String\r\n    locations: String\r\n    i_media: String\r\n    i_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    color_field: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.i_icon = o.i_icon\r\n    this.mascot = o.mascot\r\n    this.i_title = o.i_title\r\n    this.i_stitle = o.i_stitle\r\n    this.i_body = o.i_body\r\n    this.i_bodytype = o.i_bodytype\r\n    this.i_bodyoptions = o.i_bodyoptions\r\n    this.locations = o.locations\r\n    this.i_media = o.i_media\r\n    this.i_misc = o.i_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.color_field = o.color_field\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\n// setactiveInstanceData(JSON.parse(String(localStorage.getItem('ActiveInstance'))))\r\nexport const instanceStore = new Store<instanceItem[] | false>(false)\r\n\r\nexport const instanceStore1 = new Store<instanceItem1 | false>(\r\n  typeof localStorage === 'undefined'\r\n    ? null\r\n    : localStorage.getItem('ActiveInstance')\r\n    ? JSON.parse(String(localStorage.getItem('ActiveInstance')))\r\n    : false\r\n)\r\n\r\nexport const instancestore = () => {\r\n  const [instance, setinstance] = useStore(instanceStore)\r\n\r\n  const [activeInstanceData, setactiveInstanceData] = useStore(instanceStore1)\r\n\r\n  return {\r\n    instance,\r\n    setinstance,\r\n    activeInstanceData,\r\n    setactiveInstanceData,\r\n\r\n    async loadinstance() {\r\n      await getinstance(' ')\r\n        .then(data => {\r\n          setinstance(data.data.results)\r\n          console.log('Instances Data: ', data.data.results)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadinstancewithcallback(callback: any) {\r\n      await getinstance(' ')\r\n        .then(data => {\r\n          console.log('Instances Data: ', data.data.results)\r\n          callback(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadactiveInstancebyID(id: any) {\r\n      await getinstance(id)\r\n        .then(data => {\r\n          setactiveInstanceData(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postinstance(data: any) {\r\n      await postinstance(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setinstance((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editinstance(id: any, data: any) {\r\n      await editinstance(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setinstance(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.i_icon = data.i_icon\r\n                  x.mascot = data.mascot\r\n                  x.i_title = data.i_title\r\n                  x.i_stitle = data.i_stitle\r\n                  x.i_body = data.i_body\r\n                  x.i_bodytype = data.i_bodytype\r\n                  x.i_bodyoptions = data.i_bodyoptions\r\n                  x.locations = data.locations\r\n                  x.i_media = data.i_media\r\n                  x.i_misc = data.i_misc\r\n                  x.color_field = data.color_field\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deleteinstance(id: any) {\r\n      await deleteinstance(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setinstance(instance && instance.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getsublevel_data_byid = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/sublevel/level/${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getsublevel_data_byid;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlevel = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/level/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/level/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/level/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelevel;","import { Store, useStore } from './Store'\r\nimport getlevel from '../utils/api/getlevel'\r\nimport postlevel from '../utils/api/postlevel'\r\nimport editlevel from '../utils/api/editlevel'\r\nimport deletelevel from '../utils/api/deletelevel'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class levelItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  unlock_after: String\r\n  completion_image: String\r\n  clue_image: String\r\n  l_qr_id: String\r\n  scan_complete: String\r\n  progress: String\r\n  is_locked: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    unlock_after: String\r\n    completion_image: String\r\n    clue_image: String\r\n    l_qr_id: String\r\n    scan_complete: String\r\n    progress: String\r\n    is_locked: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n\r\n    this.unlock_after = o.unlock_after\r\n    this.completion_image = o.completion_image\r\n    this.clue_image = o.clue_image\r\n    this.l_qr_id = o.l_qr_id\r\n    this.scan_complete = o.scan_complete\r\n    this.progress = o.progress\r\n    this.is_locked = o.is_locked\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const levelStore = new Store<levelItem[] | false>(false)\r\n\r\nexport const levelstore = () => {\r\n  const [level, setlevel] = useStore(levelStore)\r\n\r\n  return {\r\n    level,\r\n    setlevel,\r\n\r\n    async loadlevel() {\r\n      await getlevel('')\r\n        .then(data => {\r\n          setlevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadlevelwithid(id: any) {\r\n      await getlevel(id)\r\n        .then(data => {\r\n          setlevel(data.data.results)\r\n          console.log(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postlevel(data: any) {\r\n      await postlevel(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editlevel(id: any, data: any) {\r\n      await editlevel(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.l_level = data.l_level\r\n                  x.instance_id = data.instance_id\r\n                  x.l_icon = data.l_icon\r\n                  x.l_qrcode = data.l_qrcode\r\n                  x.l_title = data.l_title\r\n                  x.l_stitle = data.l_stitle\r\n                  x.l_body = data.l_body\r\n                  x.l_bodytype = data.l_bodytype\r\n                  x.l_bodyoptions = data.l_bodyoptions\r\n                  x.locations = data.locations\r\n                  x.l_media = data.l_media\r\n                  x.l_misc = data.l_misc\r\n                  x.completion_image = data.completion_image\r\n                  x.clue_image = data.clue_image\r\n                  x.l_qr_id = data.l_qr_id\r\n                  x.unlock_after = data.unlock_after\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deletelevel(id: any) {\r\n      await deletelevel(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel(level && level.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instancelogo/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlogo = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/logo/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlogo = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instancelogo/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelogo = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/logo/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelogo;","import { Store, useStore } from './Store'\r\nimport getlogo from '../utils/api/getlogo'\r\nimport editlogo from '../utils/api/editlogo'\r\nimport postlogo from '../utils/api/postlogo'\r\nimport deletelogo from '../utils/api/deletelogo'\r\nimport { logerror } from 'utils/actions'\r\nexport class logoItem {\r\n  id: String\r\n  i_logo: String\r\n  position: String\r\n  section: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_logo: String\r\n    position: String\r\n    section: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n  }) {\r\n    this.id = o.id\r\n    this.i_logo = o.i_logo\r\n    this.position = o.position\r\n    this.section = o.section\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n  }\r\n}\r\n\r\nexport const logoStore = new Store<logoItem[] | false>(false)\r\n\r\nexport const logostore = () => {\r\n  const [logo, setlogo] = useStore(logoStore)\r\n\r\n  return {\r\n    logo,\r\n    setlogo,\r\n\r\n    async loadlogo() {\r\n      await getlogo('')\r\n        .then(data => {\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogowithcallback(callback: any) {\r\n      await getlogo('')\r\n        .then(data => {\r\n          callback(data.data.results)\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogowithid(id: any) {\r\n      await getlogo(id)\r\n        .then(data => {\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postlogo(data: any) {\r\n      await postlogo(data)\r\n        .then(res => {\r\n          setlogo((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editlogo(id: any, data: any) {\r\n      await editlogo(id, data)\r\n        .then(res => {\r\n          setlogo(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.instance_id = data.instance_id\r\n                  x.i_logo = data.i_logo\r\n                  x.position = data.position\r\n                  x.section = data.section\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deletelogo(id: any) {\r\n      await deletelogo(id)\r\n        .then(res => {\r\n          setlogo(logo && logo.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition_iid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition_iid;","import { Store, useStore } from './Store'\r\nimport getlogo_arrayposition from '../utils/api/getlogo_arrayposition'\r\nimport getlogo_arrayposition_iid from 'utils/api/getlogo_arrayposition_iid'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class logopositionItem {\r\n  id: String\r\n  i_logo: String\r\n  position: String\r\n  section: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_logo: String\r\n    position: String\r\n    section: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n  }) {\r\n    this.id = o.id\r\n    this.i_logo = o.i_logo\r\n    this.position = o.position\r\n    this.section = o.section\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n  }\r\n}\r\n\r\nexport class temp {\r\n  section1: logopositionItem[][]\r\n  section2: logopositionItem[][]\r\n  section3: logopositionItem[][]\r\n  constructor(o: {\r\n    section1: logopositionItem[][]\r\n    section2: logopositionItem[][]\r\n    section3: logopositionItem[][]\r\n  }) {\r\n    this.section1 = o.section1\r\n    this.section2 = o.section2\r\n    this.section3 = o.section3\r\n  }\r\n}\r\n\r\nexport const logopositionStore = new Store<temp | false>(false)\r\n\r\nexport const logopositionstore = () => {\r\n  const [logoposition, setlogoposition] = useStore(logopositionStore)\r\n\r\n  return {\r\n    logoposition,\r\n    setlogoposition,\r\n\r\n    async loadlogo_arrayposition() {\r\n      await getlogo_arrayposition()\r\n        .then(data => {\r\n          setlogoposition(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogo_arrayposition_iid(id: any) {\r\n      await getlogo_arrayposition_iid(id)\r\n        .then(data => {\r\n          setlogoposition(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetails = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetails;","import { Store, useStore } from './Store'\r\nimport getleveldetails from '../utils/api/getleveldetails'\r\nimport { logerror } from 'utils/actions'\r\nexport class leveldetailsItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  unlock_after: String\r\n  completion_image: String\r\n  clue_image: String\r\n  l_qr_id: String\r\n  scan_complete: String\r\n  progress: String\r\n  is_locked: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    unlock_after: String\r\n    completion_image: String\r\n    clue_image: String\r\n    l_qr_id: String\r\n    scan_complete: String\r\n    progress: String\r\n    is_locked: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n\r\n    this.unlock_after = o.unlock_after\r\n    this.completion_image = o.completion_image\r\n    this.clue_image = o.clue_image\r\n    this.l_qr_id = o.l_qr_id\r\n    this.scan_complete = o.scan_complete\r\n    this.progress = o.progress\r\n    this.is_locked = o.is_locked\r\n\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem[] | false>(false)\r\n\r\nexport const leveldetailslstore = () => {\r\n  const [leveldetails, setleveldetails] = useStore(leveldetailsStore)\r\n\r\n  return {\r\n    leveldetails,\r\n    setleveldetails,\r\n\r\n    async loadleveldetails() {\r\n      await getleveldetails()\r\n        .then(data => {\r\n          console.log(data.data.results)\r\n          setleveldetails(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}