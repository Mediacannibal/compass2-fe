{"version":3,"sources":["webpack:///./src/components/GameScreen/style.css?8008","webpack:///./src/store/ActiveScreen.ts","webpack:///./src/components/GameScreen/index.tsx","webpack:///./src/store/Store.ts","webpack:///./src/store/authStore.ts","webpack:///./src/components/GameScreen/style.css"],"names":["options","locals","ActiveScreen1","Store","TaskScreen","React","lazy","CluesScreen","Rewardcreen","QuizScreen","LoadingScreen","ActivityScreen","StartScreen","TaskListScreen","VideoScreen","CompletionScreen","RenderLevelScreen","GameScreen","ActiveScreen","useStore","setActiveScreen","auth","useAuth","history","useHistory","params","useParams","useEffect","instanceId","String","setTimeout","console","log","replace","QRreader","initialValue","this","_state","index","subscribers","id","oldVal","newVal","newValue","Function","pingSubscribers","callback","currentIndex","store","useState","state","value","setValue","useLayoutEffect","subscribe","update","authStore","localStorage","getItem","JSON","parse","setAuth","login","AuthToken","logout","clear","sessionStorage","___CSS_LOADER_EXPORT___","push","module","i"],"mappings":"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","file":"51.2cf2cbc93621760f3356.js","sourcesContent":["import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const ActiveScreen1 = new Store<string>(\"LoadingScreen\");\r\n\r\n\r\nexport const useActiveScreen = () => {\r\n    const [ActiveScreen, setActiveScreen] = useStore(ActiveScreen1);\r\n\r\n    return {\r\n        ActiveScreen, setActiveScreen,\r\n\r\n    }\r\n};","import React, { useEffect } from 'react'\r\nimport './style.css'\r\n\r\nconst TaskScreen = React.lazy(() => import('components/TaskScreen'))\r\nconst CluesScreen = React.lazy(() => import('components/CluesScreen'))\r\nconst Rewardcreen = React.lazy(() => import('components/Rewardcreen'))\r\nconst QuizScreen = React.lazy(() => import('components/QuizScreen'))\r\nconst LoadingScreen = React.lazy(() => import('components/LoadingScreen'))\r\nconst ActivityScreen = React.lazy(() => import('components/ActivityScreen'))\r\nconst StartScreen = React.lazy(() => import('components/StartScreen'))\r\nconst TaskListScreen = React.lazy(() => import('components/TaskListScreen'))\r\nconst VideoScreen = React.lazy(() => import('components/VideoScreen'))\r\nconst CompletionScreen = React.lazy(() => import('components/CompletionScreen'))\r\nconst RenderLevelScreen = React.lazy(() => import('components/Dashboardscreen/RenderLevelScreen'))\r\n\r\n\r\nimport { useActiveScreen } from '../../store/ActiveScreen';\r\nimport { useAuth } from '../../store/authStore'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst GameScreen = () => {\r\n\r\n  const { ActiveScreen, setActiveScreen } = useActiveScreen();\r\n  const { auth } = useAuth();\r\n\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!params.instanceId) {\r\n      history.replace(\"/4/\")\r\n    }\r\n    else if (String(params.instanceId) === \"4\") {\r\n      setTimeout(() => {\r\n        console.log(\"=====\", \"setting StartScreen\");\r\n        if (!auth)\r\n          setActiveScreen(\"StartScreen\")//StartScreen-ActiveQR\r\n        else\r\n          setActiveScreen(\"StartScreen-ActiveQR\")\r\n      }, 3000);\r\n    } else {\r\n      setTimeout(() => {\r\n        console.log(\"=====\", \"setting StartScreen\");\r\n        if (!auth)\r\n          setActiveScreen(\"StartScreen\")//StartScreen-ActiveQR\r\n        else\r\n          setActiveScreen(\"TaskListScreen\")\r\n      }, 3000);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {ActiveScreen === \"LoadingScreen\" &&\r\n        <LoadingScreen />\r\n      }\r\n      {ActiveScreen === \"StartScreen-ActiveQR\" &&\r\n        <StartScreen QRreader={true} />\r\n      }\r\n      {ActiveScreen === \"StartScreen\" &&\r\n        <StartScreen QRreader={false} />\r\n      }\r\n      {ActiveScreen === \"TaskScreen\" &&\r\n        <TaskScreen />\r\n      }\r\n      {ActiveScreen === \"CluesScreen\" &&\r\n        <CluesScreen />\r\n      }\r\n      {ActiveScreen === \"Rewardcreen\" &&\r\n        <Rewardcreen />\r\n      }\r\n      {ActiveScreen === \"QuizScreen\" &&\r\n        <QuizScreen />\r\n      }\r\n      {ActiveScreen === \"ActivityScreen\" &&\r\n        <ActivityScreen />\r\n      }\r\n      {ActiveScreen === \"TaskListScreen\" &&\r\n        <TaskListScreen />\r\n      }\r\n      {ActiveScreen === \"VideoScreen\" &&\r\n        <VideoScreen />\r\n      }\r\n      {ActiveScreen === \"CompletionScreen\" &&\r\n        <CompletionScreen />\r\n      }\r\n      {ActiveScreen === \"ClueListScreen\" &&\r\n        <RenderLevelScreen />\r\n      }\r\n    </>\r\n  )\r\n}\r\nexport default GameScreen;","import { useLayoutEffect, useState } from \"react\";\r\n\r\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\r\n\r\nexport class Store<T> {\r\n    private _state: T;\r\n    private subscribers: { [k: number]: Subscriber<T> };\r\n    private index: number;\r\n    private static id: number = 0;\r\n    id: number;\r\n\r\n    constructor(initialValue: T) {\r\n        this._state = initialValue;\r\n        this.index = 0;\r\n        this.subscribers = {};\r\n        this.id = Store.id++;\r\n    }\r\n\r\n    private pingSubscribers(oldVal: T, newVal: T) {\r\n        for (let id in this.subscribers) {\r\n            this.subscribers[id](oldVal, newVal);\r\n        }\r\n    }\r\n\r\n    update(newValue: ((old: T) => T) | T) {\r\n        let newVal: T;\r\n        if (newValue instanceof Function) {\r\n            newVal = newValue(this._state);\r\n        }\r\n        else {\r\n            newVal = newValue;\r\n        }\r\n        const oldVal = this._state;\r\n\r\n        this._state = newVal;\r\n        this.pingSubscribers(oldVal, newVal);\r\n\r\n        return newVal;\r\n    }\r\n\r\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\r\n    subscribe(callback: Subscriber<T>) {\r\n        const currentIndex = ++this.index;\r\n\r\n        this.subscribers[currentIndex] = callback;\r\n\r\n        const subscribers = this.subscribers;\r\n        return function unsubscribe() {\r\n            delete subscribers[currentIndex];\r\n        }\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport function useStore<T>(store: Store<T>) {\r\n    const [value, setValue] = useState(store.state);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\r\n            setValue(newVal);\r\n        });\r\n        return unsubscribe\r\n    }, [store.id]);\r\n\r\n\r\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\r\n        store.update(newVal);\r\n    }\r\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\r\n    return returnVal;\r\n}\r\n\r\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\r\n    [\r\n        { [k: string]: T },\r\n        (\r\n            id: string,\r\n            newVal: T | ((old: T) => T)\r\n        ) => void\r\n    ] {\r\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\r\n    const ids = [Object.entries(stores).map(item => item[1].id)];\r\n\r\n    useLayoutEffect(() => {\r\n        // console.log(\"stores has changed\")\r\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\r\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\r\n        }));\r\n\r\n        return () => unsubscribes.forEach(item => item());\r\n    }, [ids.join(\"-\")]);\r\n\r\n\r\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\r\n        stores[id].update(newVal)\r\n    }\r\n\r\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\r\n\r\n    return returnVal;\r\n}","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('AuthToken') ? JSON.parse(String(localStorage.getItem('AuthToken'))) : false);\r\n\r\n\r\nexport const useAuth = () => {\r\n    const [auth, setAuth] = useStore(authStore);\r\n\r\n    return {\r\n        auth, setAuth,\r\n        login(AuthToken: string) {\r\n            setAuth(AuthToken);\r\n        },\r\n        logout() {\r\n            localStorage.clear()\r\n            sessionStorage.clear()\r\n            setAuth(null);\r\n        },\r\n    }\r\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \" \", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}