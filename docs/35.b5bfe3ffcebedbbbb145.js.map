{"version":3,"sources":["webpack:///./src/utils/api/getinstance.ts","webpack:///./src/utils/api/editinstance.ts","webpack:///./src/utils/api/postinstance.ts","webpack:///./src/utils/api/deleteinstance.ts","webpack:///./src/store/InstanceStore.ts","webpack:///./src/utils/api/getsublevel.ts","webpack:///./src/utils/api/postsublevel.ts","webpack:///./src/utils/api/editsublevel.ts","webpack:///./src/utils/api/deletesublevel.ts","webpack:///./src/store/sublevelStore.ts","webpack:///./src/utils/api/getuser.ts","webpack:///./src/utils/api/edituser.ts","webpack:///./src/store/userstore.ts","webpack:///./src/utils/api/getlogo_arrayposition.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/utils/axios.ts","webpack:///./src/utils/headers.js","webpack:///./src/utils/actions.ts","webpack:///./src/store/Store.ts","webpack:///./src/utils/api/getlevel.ts","webpack:///./src/utils/api/postlevel.ts","webpack:///./src/utils/api/editlevel.ts","webpack:///./src/utils/api/deletelevel.ts","webpack:///./src/store/levelStore.ts","webpack:///./src/store/ColourStore.ts","webpack:///./src/utils/api/getlogo.ts","webpack:///./src/utils/api/editlogo.ts","webpack:///./src/utils/api/postlogo.ts","webpack:///./src/utils/api/deletelogo.ts","webpack:///./src/store/logoStore.ts"],"names":["getinstance","axios","get","headers","String","localStorage","getItem","editinstance","id","data","put","postinstance","post","deleteinstance","instanceStore","Store","instancestore","useStore","instance","setinstance","loadinstance","then","console","log","results","res","oldArray","err","oldarr","map","obj","x","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","filter","ele","getsublevel","instanceid","levelid","postsublevel","editsublevel","deletesublevel","sublevelStore","sublevelstore","sublevel","setsublevel","loadsublevel","loadsublevelwithid","instance_id","level_id","sl_types","sl_icon","sl_title","sl_stitle","sl_body","sl_bodytype","sl_bodyoptions","sl_misc","getuser","edituser","userStore","userstore","user","setuser","loaduser","image","firstname","lastname","email","address","dob","user_type","gender","auth_type","photo_url","dial_code","phone","getlogo_arrayposition","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","create","baseURL","auth","JSON","parse","fileupload","callback","response","updateGamedata","token","getAppdata","postAppdata","getanalsisdata","getalatestnalsisdata","Sociallogin","initialValue","this","_state","index","subscribers","oldVal","newVal","newValue","Function","pingSubscribers","currentIndex","store","useState","state","value","setValue","useLayoutEffect","subscribe","update","getlevel","postlevel","editlevel","deletelevel","levelStore","levelstore","level","setlevel","loadlevel","loadlevelwithid","l_level","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","l_media","l_misc","ColourObjects","ColObj","ColourObject","Colour","setColour","colourObj","setcolourObj","loadColour","selected","colour","color_1","color_2","color_3","color_4","color_5","color_6","color_7","color_8","color_9","color_10","color_11","color_12","color_13","color_14","color_15","color_16","color_17","color_18","color_19","color_20","color_21","color_22","color_23","color_24","color_25","color_26","color_27","getlogo","editlogo","postlogo","deletelogo","logoStore","logostore","logo","setlogo","loadlogo","loadlogowithid","i_logo","position","section"],"mappings":"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","file":"35.b5bfe3ffcebedbbbb145.js","sourcesContent":["import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getinstance = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/info/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editinstance = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postinstance = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instance/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deleteinstance = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deleteinstance;","import { Store, useStore } from \"./Store\";\r\nimport getinstance from \"../utils/api/getinstance\";\r\nimport editinstance from \"../utils/api/editinstance\";\r\nimport postinstance from \"../utils/api/postinstance\";\r\nimport deleteinstance from \"../utils/api/deleteinstance\";\r\n\r\n\r\nexport class instanceItem {\r\n\r\n    id: String;\r\n    i_icon: String;\r\n    mascot: String;\r\n    i_title: String;\r\n    i_stitle: String;\r\n    i_body: String;\r\n    i_bodytype: String;\r\n    i_bodyoptions: String;\r\n    locations: String;\r\n    i_media: String;\r\n    i_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_icon: String;\r\n        mascot: String;\r\n        i_title: String;\r\n        i_stitle: String;\r\n        i_body: String;\r\n        i_bodytype: String;\r\n        i_bodyoptions: String;\r\n        locations: String;\r\n        i_media: String;\r\n        i_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_icon = o.i_icon;\r\n        this.mascot = o.mascot;\r\n        this.i_title = o.i_title;\r\n        this.i_stitle = o.i_stitle;\r\n        this.i_body = o.i_body;\r\n        this.i_bodytype = o.i_bodytype;\r\n        this.i_bodyoptions = o.i_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.i_media = o.i_media;\r\n        this.i_misc = o.i_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n    }\r\n}\r\n\r\nexport const instanceStore = new Store<instanceItem[] | false>(false);\r\n\r\nexport const instancestore = () => {\r\n    const [instance, setinstance] = useStore(instanceStore);\r\n\r\n    return {\r\n        instance, setinstance,\r\n\r\n        async loadinstance() {\r\n            await getinstance().then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n\r\n                    setinstance(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postinstance(data: any) {\r\n            await postinstance(data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editinstance(id: any, data: any) {\r\n            await editinstance(id, data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.i_icon = data.i_icon\r\n                            x.mascot = data.mascot\r\n                            x.i_title = data.i_title\r\n                            x.i_stitle = data.i_stitle\r\n                            x.i_body = data.i_body\r\n                            x.i_bodytype = data.i_bodytype\r\n                            x.i_bodyoptions = data.i_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.i_media = data.i_media\r\n                            x.i_misc = data.i_misc\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deleteinstance(id: any) {\r\n            await deleteinstance(id).then((res) => {\r\n                console.log(res);\r\n                setinstance(instance && instance.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n}","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getsublevel = async (instanceid: any, levelid: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/sublevel/info/?instance_id=${instanceid}&level_id=${levelid}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postsublevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/sublevel/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editsublevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/sublevel/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletesublevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/sublevel/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletesublevel;","import { Store, useStore } from \"./Store\";\r\nimport getsublevel from \"../utils/api/getsublevel\";\r\nimport postsublevel from \"../utils/api/postsublevel\";\r\nimport editsublevel from \"../utils/api/editsublevel\";\r\nimport deletesublevel from \"../utils/api/deletesublevel\";\r\n\r\nexport class sublevelItem {\r\n\r\n    id: String;\r\n    sl_types: String;\r\n    sl_icon: String;\r\n    sl_title: String;\r\n    sl_stitle: String;\r\n    sl_body: String;\r\n    sl_bodytype: String;\r\n    sl_bodyoptions: String;\r\n    sl_misc: boolean;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    level_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        sl_types: String;\r\n        sl_icon: String;\r\n        sl_title: String;\r\n        sl_stitle: String;\r\n        sl_body: String;\r\n        sl_bodytype: String;\r\n        sl_bodyoptions: String;\r\n        sl_misc: boolean;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        level_id: String\r\n    }) {\r\n        this.id = o.id;\r\n        this.sl_types = o.sl_types;\r\n        this.sl_icon = o.sl_icon;\r\n        this.sl_title = o.sl_title;\r\n        this.sl_stitle = o.sl_stitle;\r\n        this.sl_body = o.sl_body;\r\n        this.sl_bodytype = o.sl_bodytype;\r\n        this.sl_bodyoptions = o.sl_bodyoptions;\r\n        this.sl_misc = o.sl_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.level_id = o.level_id;\r\n\r\n    }\r\n}\r\n\r\nexport const sublevelStore = new Store<sublevelItem[] | false>(false);\r\n\r\nexport const sublevelstore = () => {\r\n    const [sublevel, setsublevel] = useStore(sublevelStore);\r\n\r\n    return {\r\n        sublevel, setsublevel,\r\n\r\n        async loadsublevel() {\r\n            await getsublevel(\"\", \"\").then(\r\n                (data) => {\r\n                    setsublevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadsublevelwithid(instanceid: any, levelid: any) {\r\n            await getsublevel(instanceid, levelid).then(\r\n                (data) => {\r\n                    setsublevel(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postsublevel(data: any) {\r\n            await postsublevel(data).then((res) => {\r\n                console.log(res);\r\n                setsublevel((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editsublevel(id: any, data: any) {\r\n            await editsublevel(id, data).then((res) => {\r\n                console.log(res);\r\n                setsublevel((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.instance_id = data.instance_id\r\n                            x.level_id = data.level_id\r\n                            x.sl_types = data.sl_types\r\n                            x.sl_icon = data.sl_icon\r\n                            x.sl_title = data.sl_title\r\n                            x.sl_stitle = data.sl_stitle\r\n                            x.sl_body = data.sl_body\r\n                            x.sl_bodytype = data.sl_bodytype\r\n                            x.sl_bodyoptions = data.sl_bodyoptions\r\n                            x.sl_misc = data.sl_misc\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletesublevel(id: any) {\r\n            await deletesublevel(id).then((res) => {\r\n                console.log(res);\r\n                setsublevel(sublevel && sublevel.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getuser = async () => {\r\n\r\n    return (await axios.get(`user/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getuser;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst edituser = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`user/edit_profile/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default edituser;","import { Store, useStore } from \"./Store\";\r\nimport getuser from \"../utils/api/getuser\";\r\nimport edituser from \"../utils/api/edituser\";\r\n\r\nexport class userItem {\r\n\r\n    id: String;\r\n    image: String;\r\n    firstname: String;\r\n    lastname: String;\r\n    email: String;\r\n    address: String;\r\n    dob: String;\r\n    user_type: String;\r\n    gender: String;\r\n    auth_type: String;\r\n    photo_url: String;\r\n    dial_code: String;\r\n    phone: String;\r\n    is_deleted: String;\r\n    updated_by: String;\r\n    owned_by: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    created_by: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        image: String;\r\n        firstname: String;\r\n        lastname: String;\r\n        email: String;\r\n        address: String;\r\n        dob: String;\r\n        user_type: String;\r\n        gender: String;\r\n        auth_type: String;\r\n        photo_url: String;\r\n        dial_code: String;\r\n        phone: String;\r\n        is_deleted: String;\r\n        updated_by: String;\r\n        owned_by: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        created_by: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.image = o.image;\r\n        this.firstname = o.firstname;\r\n        this.lastname = o.lastname;\r\n        this.email = o.email;\r\n        this.address = o.address;\r\n        this.dob = o.dob;\r\n        this.user_type = o.user_type;\r\n        this.gender = o.gender;\r\n        this.auth_type = o.auth_type;\r\n        this.photo_url = o.photo_url;\r\n        this.dial_code = o.dial_code;\r\n        this.phone = o.phone;\r\n        this.is_deleted = o.is_deleted;\r\n        this.updated_by = o.updated_by;\r\n        this.owned_by = o.owned_by;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.created_by = o.created_by;\r\n    }\r\n}\r\n\r\nexport const userStore = new Store<userItem[] | false>(false);\r\n\r\nexport const userstore = () => {\r\n    const [user, setuser] = useStore(userStore);\r\n\r\n    return {\r\n        user, setuser,\r\n\r\n        async loaduser() {\r\n            await getuser().then(\r\n                (data) => {\r\n                    console.log(\"user data\", data);\r\n                    setuser(data.data);\r\n                }\r\n            )\r\n\r\n        },\r\n        async edituser(id: any, data: any) {\r\n            await edituser(id, data).then((res) => {\r\n                console.log(res);\r\n                setuser((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.image = data.image\r\n                            x.firstname = data.firstname\r\n                            x.lastname = data.lastname\r\n                            x.email = data.email\r\n                            x.address = data.address\r\n                            x.dob = data.dob\r\n                            x.user_type = data.user_type\r\n                            x.gender = data.gender\r\n                            x.auth_type = data.auth_type\r\n                            x.photo_url = data.photo_url\r\n                            x.dial_code = data.dial_code\r\n                            x.phone = data.phone\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n    }\r\n\r\n}","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition;","import { Store, useStore } from \"./Store\";\r\nimport getlogo_arrayposition from \"../utils/api/getlogo_arrayposition\";\r\n\r\nexport class logopositionItem {\r\n\r\n    id: String;\r\n    i_logo: String;\r\n    position: String;\r\n    section: String\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_logo: String;\r\n        position: String;\r\n        section: String\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_logo = o.i_logo;\r\n        this.position = o.position;\r\n        this.section = o.section;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport class temp {\r\n    section1: logopositionItem[][]\r\n    section2: logopositionItem[][]\r\n    section3: logopositionItem[][]\r\n    constructor(o: {\r\n        section1: logopositionItem[][];\r\n        section2: logopositionItem[][];\r\n        section3: logopositionItem[][];\r\n    }) {\r\n        this.section1 = o.section1;\r\n        this.section2 = o.section2;\r\n        this.section3 = o.section3;\r\n    }\r\n}\r\n\r\nexport const logopositionStore = new Store<temp | false>(false);\r\n\r\nexport const logopositionstore = () => {\r\n    const [logoposition, setlogoposition] = useStore(logopositionStore);\r\n\r\n    return {\r\n        logoposition, setlogoposition,\r\n\r\n        async loadlogo_arrayposition() {\r\n            await getlogo_arrayposition().then(\r\n                (data) => {\r\n                    console.log(\"loadlogo_arrayposition\", data);\r\n                    setlogoposition(data.data.results);\r\n                }\r\n            )\r\n        },\r\n    }\r\n\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://apidc.mediacannibal.com/'\r\n});\r\n\r\nexport default instance;","/**\r\n * Created by rozer on 8/16/2018.\r\n */\r\n\r\n\r\nconst headers = (auth) => {\r\n   return ({\r\n      'Accept': 'application/json',\r\n      'Authorization': auth ? `Token ${JSON.parse(auth)}` : '',\r\n   })\r\n};\r\n\r\n\r\n\r\nexport default headers\r\n","import instance from 'utils/axios'\r\n\r\n// export const Sociallogin = (callback: (arg0: any, arg1: string) => void, data: any) => {\r\n//   instance.post(`/user/social/signup/`, data, {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     }\r\n//   }).then((res) => { callback(res, 'sucess') })\r\n//     .catch(err => callback(err, err.response))\r\n// }\r\n\r\nexport const realtime = (callback: (arg0: any, arg1: string) => void, token: any,) => {\r\n  instance.get(`https://www.googleapis.com/analytics/v3/data/realtime?ids=ga:241653669&metrics=rt:activeUsers`, {\r\n    headers: {\r\n      'Authorization': token ? `Bearer ${token}` : '',\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const fileupload = (callback: (arg0: any, arg1: string) => void, data: any) => {\r\n  instance.post(`/appdata/upload/file/`, data, {\r\n    headers: {\r\n\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const updateGamedata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`/appdata/single_analytics/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\nexport const getAppdata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`/appdata/Screensdata/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const postAppdata = (callback: (arg0: any, arg1: string) => void, token: any, data: any) => {\r\n  instance.post(`/appdata/Screensdata/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const getanalsisdata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`/appdata/analytics/?readlatest=0`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const getalatestnalsisdata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`/appdata/analytics/?readlatest=1`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n// api compass2\r\n\r\nexport const Sociallogin = (callback: (arg0: any, arg1: string) => void, data: any) => {\r\n  instance.post(`user/social/signup/`, data, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n//instance\r\n\r\nexport const getinstancedata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`api/v1/appdata/instance/info/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const postinstancedata = (callback: (arg0: any, arg1: string) => void, token: any, data: any) => {\r\n  instance.post(`api/v1/appdata/instance/info/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const editinstancedata = (callback: (arg0: any, arg1: string) => void, token: any, id: any, data: any) => {\r\n  instance.put(`api/v1/appdata/instance/` + id + `/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const deleteinstancedata = (callback: (arg0: any, arg1: string) => void, token: any, id: any) => {\r\n  instance.delete(`api/v1/appdata/instance/` + id, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n//logo\r\n\r\nexport const getlogodata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`api/v1/appdata/instancelogo/info/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const postlogodata = (callback: (arg0: any, arg1: string) => void, token: any, data: any) => {\r\n  instance.post(`api/v1/appdata/instancelogo/info/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const editlogodata = (callback: (arg0: any, arg1: string) => void, token: any, id: any, data: any) => {\r\n  instance.put(`api/v1/appdata/instance/logo/` + id + `/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const deletelogodata = (callback: (arg0: any, arg1: string) => void, token: any, id: any) => {\r\n  instance.delete(`api/v1/appdata/instance/logo/` + id, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n//level\r\n\r\nexport const getleveldata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`api/v1/appdata/level/info/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const postleveldata = (callback: (arg0: any, arg1: string) => void, token: any, data: any) => {\r\n  instance.post(`api/v1/appdata/level/info/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const editleveldata = (callback: (arg0: any, arg1: string) => void, token: any, id: any, data: any) => {\r\n  instance.put(`api/v1/appdata/level/` + id + `/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const deleteleveldata = (callback: (arg0: any, arg1: string) => void, token: any, id: any) => {\r\n  instance.delete(`api/v1/appdata/level/` + id, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n//sub level\r\n\r\nexport const getsubleveldata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`api/v1/appdata/sublevel/info/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const postsubleveldata = (callback: (arg0: any, arg1: string) => void, token: any, data: any) => {\r\n  instance.post(`api/v1/appdata/sublevel/info/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const editsubleveldata = (callback: (arg0: any, arg1: string) => void, token: any, id: any, data: any) => {\r\n  instance.put(`api/v1/appdata/sublevel/` + id + `/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const deletesubleveldata = (callback: (arg0: any, arg1: string) => void, token: any, id: any) => {\r\n  instance.delete(`api/v1/appdata/sublevel/` + id, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n//userdata\r\n\r\nexport const getuserdata = (callback: (arg0: any, arg1: string) => void, token: any) => {\r\n  instance.get(`user/list/`, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}","import { useLayoutEffect, useState } from \"react\";\r\n\r\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\r\n\r\nexport class Store<T> {\r\n    private _state: T;\r\n    private subscribers: { [k: number]: Subscriber<T> };\r\n    private index: number;\r\n    private static id: number = 0;\r\n    id: number;\r\n\r\n    constructor(initialValue: T) {\r\n        this._state = initialValue;\r\n        this.index = 0;\r\n        this.subscribers = {};\r\n        this.id = Store.id++;\r\n    }\r\n\r\n    private pingSubscribers(oldVal: T, newVal: T) {\r\n        for (let id in this.subscribers) {\r\n            this.subscribers[id](oldVal, newVal);\r\n        }\r\n    }\r\n\r\n    update(newValue: ((old: T) => T) | T) {\r\n        let newVal: T;\r\n        if (newValue instanceof Function) {\r\n            newVal = newValue(this._state);\r\n        }\r\n        else {\r\n            newVal = newValue;\r\n        }\r\n        const oldVal = this._state;\r\n\r\n        this._state = newVal;\r\n        this.pingSubscribers(oldVal, newVal);\r\n\r\n        return newVal;\r\n    }\r\n\r\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\r\n    subscribe(callback: Subscriber<T>) {\r\n        const currentIndex = ++this.index;\r\n\r\n        this.subscribers[currentIndex] = callback;\r\n\r\n        const subscribers = this.subscribers;\r\n        return function unsubscribe() {\r\n            delete subscribers[currentIndex];\r\n        }\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport function useStore<T>(store: Store<T>) {\r\n    const [value, setValue] = useState(store.state);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\r\n            setValue(newVal);\r\n        });\r\n        return unsubscribe\r\n    }, [store.id]);\r\n\r\n\r\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\r\n        store.update(newVal);\r\n    }\r\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\r\n    return returnVal;\r\n}\r\n\r\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\r\n    [\r\n        { [k: string]: T },\r\n        (\r\n            id: string,\r\n            newVal: T | ((old: T) => T)\r\n        ) => void\r\n    ] {\r\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\r\n    const ids = [Object.entries(stores).map(item => item[1].id)];\r\n\r\n    useLayoutEffect(() => {\r\n        // console.log(\"stores has changed\")\r\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\r\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\r\n        }));\r\n\r\n        return () => unsubscribes.forEach(item => item());\r\n    }, [ids.join(\"-\")]);\r\n\r\n\r\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\r\n        stores[id].update(newVal)\r\n    }\r\n\r\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\r\n\r\n    return returnVal;\r\n}","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlevel = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/level/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/level/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/level/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelevel;","import { Store, useStore } from \"./Store\";\r\nimport getlevel from \"../utils/api/getlevel\";\r\nimport postlevel from \"../utils/api/postlevel\";\r\nimport editlevel from \"../utils/api/editlevel\";\r\nimport deletelevel from \"../utils/api/deletelevel\";\r\n\r\n\r\nexport class levelItem {\r\n\r\n    id: String;\r\n    l_level: String;\r\n    l_icon: String;\r\n    l_qrcode: String;\r\n    l_title: String;\r\n    l_stitle: String;\r\n    l_body: String;\r\n    l_bodytype: String;\r\n    l_bodyoptions: String;\r\n    locations: boolean;\r\n    l_media: String;\r\n    l_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        l_level: String;\r\n        l_icon: String;\r\n        l_qrcode: String;\r\n        l_title: String;\r\n        l_stitle: String;\r\n        l_body: String;\r\n        l_bodytype: String;\r\n        l_bodyoptions: String;\r\n        locations: boolean;\r\n        l_media: String;\r\n        l_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.l_level = o.l_level;\r\n        this.l_icon = o.l_icon;\r\n        this.l_qrcode = o.l_qrcode;\r\n        this.l_title = o.l_title;\r\n        this.l_stitle = o.l_stitle;\r\n        this.l_body = o.l_body;\r\n        this.l_bodytype = o.l_bodytype;\r\n        this.l_bodyoptions = o.l_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.l_media = o.l_media;\r\n        this.l_misc = o.l_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport const levelStore = new Store<levelItem[] | false>(false);\r\n\r\nexport const levelstore = () => {\r\n    const [level, setlevel] = useStore(levelStore);\r\n\r\n    return {\r\n        level, setlevel,\r\n\r\n        async loadlevel() {\r\n            await getlevel(\"\").then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setlevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadlevelwithid(id: any) {\r\n            await getlevel(id).then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setlevel(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postlevel(data: any) {\r\n            await postlevel(data).then((res) => {\r\n                console.log(res);\r\n                setlevel((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editlevel(id: any, data: any) {\r\n            await editlevel(id, data).then((res) => {\r\n                console.log(res);\r\n                setlevel((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.l_level = data.l_level\r\n                            x.instance_id = data.instance_id\r\n                            x.l_icon = data.l_icon\r\n                            x.l_qrcode = data.l_qrcode\r\n                            x.l_title = data.l_title\r\n                            x.l_stitle = data.l_stitle\r\n                            x.l_body = data.l_body\r\n                            x.l_bodytype = data.l_bodytype\r\n                            x.l_bodyoptions = data.l_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.l_media = data.l_media\r\n                            x.l_misc = data.l_misc\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletelevel(id: any) {\r\n            await deletelevel(id).then((res) => {\r\n                console.log(res);\r\n                setlevel(level && level.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}","import { Store, useStore } from './Store'\r\n\r\nexport class ColourItem {\r\n  id: String\r\n  selected: boolean\r\n  colour: String\r\n  constructor(o: { id: String; selected: boolean; colour: String }) {\r\n    this.id = o.id\r\n    this.selected = o.selected\r\n    this.colour = o.colour\r\n  }\r\n}\r\nexport class ColourObjItem {\r\n  color_1: String\r\n  color_2: String\r\n  color_3: String\r\n  color_4: String\r\n  color_5: String\r\n  color_6: String\r\n  color_7: String\r\n  color_8: String\r\n  color_9: String\r\n  color_10: String\r\n  color_11: String\r\n  color_12: String\r\n  color_13: String\r\n  color_14: String\r\n  color_15: String\r\n  color_16: String\r\n  color_17: String\r\n  color_18: String\r\n  color_19: String\r\n  color_20: String\r\n  color_21: String\r\n  color_22: String\r\n  color_23: String\r\n  color_24: String\r\n  color_25: String\r\n  color_26: String\r\n  color_27: String\r\n\r\n  constructor(o: {\r\n    color_1: String\r\n    color_2: String\r\n    color_3: String\r\n    color_4: String\r\n    color_5: String\r\n    color_6: String\r\n    color_7: String\r\n    color_8: String\r\n    color_9: String\r\n    color_10: String\r\n    color_11: String\r\n    color_12: String\r\n    color_13: String\r\n    color_14: String\r\n    color_15: String\r\n    color_16: String\r\n    color_17: String\r\n    color_18: String\r\n    color_19: String\r\n    color_20: String\r\n    color_21: String\r\n    color_22: String\r\n    color_23: String\r\n    color_24: String\r\n    color_25: String\r\n    color_26: String\r\n    color_27: String\r\n\r\n  }) {\r\n    this.color_1 = o.color_1\r\n    this.color_2 = o.color_2\r\n    this.color_3 = o.color_3\r\n    this.color_4 = o.color_4\r\n    this.color_5 = o.color_5\r\n    this.color_6 = o.color_6\r\n    this.color_7 = o.color_7\r\n    this.color_8 = o.color_8\r\n    this.color_9 = o.color_9\r\n    this.color_10 = o.color_10\r\n    this.color_11 = o.color_11\r\n    this.color_12 = o.color_12\r\n    this.color_13 = o.color_13\r\n    this.color_14 = o.color_14\r\n    this.color_15 = o.color_15\r\n    this.color_16 = o.color_16\r\n    this.color_17 = o.color_17\r\n    this.color_18 = o.color_18\r\n    this.color_19 = o.color_19\r\n    this.color_20 = o.color_20\r\n    this.color_21 = o.color_21\r\n    this.color_22 = o.color_22\r\n    this.color_23 = o.color_23\r\n    this.color_24 = o.color_24\r\n    this.color_25 = o.color_25\r\n    this.color_26 = o.color_26\r\n    this.color_27 = o.color_27\r\n  }\r\n}\r\n\r\nexport const ColourObjects = new Store<ColourItem[] | false>(false)\r\nexport const ColObj = new Store<ColourObjItem | false>(false)\r\n\r\nexport const ColourObject = () => {\r\n  const [Colour, setColour] = useStore(ColourObjects)\r\n  const [colourObj, setcolourObj] = useStore(ColObj)\r\n  return {\r\n    Colour,\r\n    setColour,\r\n    colourObj,\r\n    setcolourObj,\r\n    async loadColour() {\r\n      setColour([\r\n        {\r\n          id: '--color_1',\r\n          selected: true,\r\n          colour: '#154360',\r\n        },\r\n        {\r\n          id: '--color_2',\r\n          selected: true,\r\n          colour: '#01003c',\r\n        },\r\n        {\r\n          id: '--color_3',\r\n          selected: true,\r\n          colour: '#ff0000',\r\n        },\r\n        {\r\n          id: '--color_4',\r\n          selected: true,\r\n          colour: '#242446',\r\n        },\r\n        {\r\n          id: '--color_5',\r\n          selected: true,\r\n          colour: '#ffffff',\r\n        },\r\n        {\r\n          id: '--color_6',\r\n          selected: true,\r\n          colour: '#00000019',\r\n        },\r\n        {\r\n          id: '--color_7',\r\n          selected: true,\r\n          colour: '#60ce80',\r\n        },\r\n        {\r\n          id: '--color_8',\r\n          selected: true,\r\n          colour: '#fcfeff',\r\n        },\r\n        {\r\n          id: '--color_9',\r\n          selected: true,\r\n          colour: '#eac952',\r\n        },\r\n        {\r\n          id: '--color_10',\r\n          selected: true,\r\n          colour: '#60ce80',\r\n        },\r\n        {\r\n          id: '--color_11',\r\n          selected: true,\r\n          colour: '#dc0000',\r\n        },\r\n        {\r\n          id: '--color_12',\r\n          selected: true,\r\n          colour: '#efecec',\r\n        },\r\n        {\r\n          id: '--color_13',\r\n          selected: true,\r\n          colour: '#00008b',\r\n        },\r\n        {\r\n          id: '--color_14',\r\n          selected: true,\r\n          colour: '#449698',\r\n        },\r\n        {\r\n          id: '--color_15',\r\n          selected: true,\r\n          colour: '#ddd',\r\n        },\r\n        {\r\n          id: '--color_16',\r\n          selected: true,\r\n          colour: '#378587',\r\n        },\r\n        {\r\n          id: '--color_17',\r\n          selected: true,\r\n          colour: '#639A4D',\r\n        },\r\n        {\r\n          id: '--color_18',\r\n          selected: true,\r\n          colour: '#fc595a',\r\n        },\r\n        {\r\n          id: '--color_19',\r\n          selected: true,\r\n          colour: '#4fb5ff',\r\n        },\r\n        {\r\n          id: '--color_20',\r\n          selected: true,\r\n          colour: '#dcfd47',\r\n        },\r\n        {\r\n          id: '--color_21',\r\n          selected: true,\r\n          colour: '#000000',\r\n        },\r\n        {\r\n          id: '--color_22',\r\n          selected: true,\r\n          colour: '#e06a6a19',\r\n        },\r\n        {\r\n          id: '--color_23',\r\n          selected: true,\r\n          colour: '#acfc91c2',\r\n        },\r\n        {\r\n          id: '--color_24',\r\n          selected: true,\r\n          colour: '#e0e0e0',\r\n        },\r\n        {\r\n          id: '--color_25',\r\n          selected: true,\r\n          colour: '#757588',\r\n        },\r\n        {\r\n          id: '--color_26',\r\n          selected: true,\r\n          colour: '#999',\r\n        },\r\n        {\r\n          id: '--color_27',\r\n          selected: true,\r\n          colour: '#000000a4',\r\n        },\r\n      ])\r\n      setcolourObj({\r\n        color_1: '#154360',\r\n        color_2: '#01003c',\r\n        color_3: '#ff0000',\r\n        color_4: '#242446',\r\n        color_5: '#ffffff',\r\n        color_6: '#00000019',\r\n        color_7: '#60ce80',\r\n        color_8: '#fcfeff',\r\n        color_9: '#eac952',\r\n        color_10: '#60ce80',\r\n        color_11: '#dc0000',\r\n        color_12: '#efecec',\r\n        color_13: '#00008b',\r\n        color_14: '#449698',\r\n        color_15: '#ddd',\r\n        color_16: '#378587',\r\n        color_17: '#639A4D',\r\n        color_18: '#fc595a',\r\n        color_19: '#4fb5ff',\r\n        color_20: '#dcfd47',\r\n        color_21: '#000000',\r\n        color_22: '#e06a6a19',\r\n        color_23: '#acfc91c2',\r\n        color_24: '#e0e0e0',\r\n        color_25: '#757588',\r\n        color_26: '#999',\r\n        color_27: '#000000a4',\r\n      })\r\n    },\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instancelogo/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlogo = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/logo/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlogo = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instancelogo/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelogo = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/logo/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelogo;","import { Store, useStore } from \"./Store\";\r\nimport getlogo from \"../utils/api/getlogo\";\r\nimport editlogo from \"../utils/api/editlogo\";\r\nimport postlogo from \"../utils/api/postlogo\";\r\nimport deletelogo from \"../utils/api/deletelogo\";\r\nexport class logoItem {\r\n\r\n    id: String;\r\n    i_logo: String;\r\n    position: String;\r\n    section: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_logo: String;\r\n        position: String;\r\n        section: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_logo = o.i_logo;\r\n        this.position = o.position;\r\n        this.section = o.section;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport const logoStore = new Store<logoItem[] | false>(false);\r\n\r\nexport const logostore = () => {\r\n    const [logo, setlogo] = useStore(logoStore);\r\n\r\n    return {\r\n        logo, setlogo,\r\n\r\n        async loadlogo() {\r\n            await getlogo(\"\").then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n\r\n                    setlogo(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async loadlogowithid(id: any) {\r\n            await getlogo(id).then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n\r\n                    setlogo(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postlogo(data: any) {\r\n            await postlogo(data).then((res) => {\r\n                console.log(res);\r\n                setlogo((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editlogo(id: any, data: any) {\r\n            await editlogo(id, data).then((res) => {\r\n                console.log(res);\r\n                setlogo((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.instance_id = data.instance_id\r\n                            x.i_logo = data.i_logo\r\n                            x.position = data.position\r\n                            x.section = data.section\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletelogo(id: any) {\r\n            await deletelogo(id).then((res) => {\r\n                console.log(res);\r\n                setlogo(logo && logo.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n}"],"sourceRoot":""}