{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","hidden","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","arguments","_sync","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","enumerable","version","unregister","ArcElement","chartX","chartY","rAdjust","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","numberOrZero","param","logarithmic","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","file":"10.f00bb4eb6c46abec0a79.js","sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}