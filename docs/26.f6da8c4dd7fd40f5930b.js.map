{"version":3,"sources":["webpack:///./src/store/LanguageStore.ts","webpack:///./src/utils/api/getleveldetailsbyid.ts","webpack:///./src/utils/api/getleveldetailsbyqrid.ts","webpack:///./src/store/ActiveLevelDetailsStore.ts","webpack:///./src/store/ActiveSubLevelDetailsStore.ts","webpack:///./src/store/ActivePopup.ts","webpack:///./src/utils/api/editinstance.ts","webpack:///./src/utils/api/postinstance.ts","webpack:///./src/utils/api/deleteinstance.ts","webpack:///./src/store/InstanceStore.ts","webpack:///./src/utils/api/getsublevel_data_byid.ts","webpack:///./src/utils/api/getlevel.ts","webpack:///./src/utils/api/postlevel.ts","webpack:///./src/utils/api/editlevel.ts","webpack:///./src/utils/api/deletelevel.ts","webpack:///./src/store/levelStore.ts","webpack:///./src/utils/api/getlogo.ts","webpack:///./src/utils/api/editlogo.ts","webpack:///./src/utils/api/postlogo.ts","webpack:///./src/utils/api/deletelogo.ts","webpack:///./src/store/logoStore.ts","webpack:///./src/utils/api/getlogo_arrayposition.ts","webpack:///./src/utils/api/getlogo_arrayposition_iid.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/utils/api/getleveldetails.ts","webpack:///./src/store/leveldetailsStore.ts","webpack:///./src/store/Loading.ts"],"names":["LanguageStore","Store","key","value","useLanguageStore","useStore","Language","setLanguage","getleveldetailsbyid","id","axios","get","headers","String","localStorage","getItem","getleveldetailsbyqrid","leveldetailsStore","userActiveLevelDetailsStore","ActiveLevelDetails","setActiveLevelDetails","loadActiveleveldetails","then","data","results","err","logerror","response","loadActiveleveldetailsbyqr","userActiveSubLevelDetailsStore","ActiveSubLevelDetails","setActiveSubLevelDetails","loadActiveSubleveldetails","getsublevel_data_byid","ActivePopup1","useActivePopup","ActivePopup","setActivePopup","editinstance","put","postinstance","post","deleteinstance","instanceStore","instanceStore1","JSON","parse","instancestore","instance","setinstance","activeInstanceData","setactiveInstanceData","loadinstance","getinstance","console","log","loadinstancewithcallback","callback","loadactiveInstancebyID","res","oldArray","oldarr","map","obj","x","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","color_field","filter","ele","getlevel","postlevel","editlevel","deletelevel","levelStore","levelstore","level","setlevel","loadlevel","loadlevelwithid","l_level","instance_id","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","l_media","l_misc","completion_image","clue_image","l_qr_id","unlock_after","getlogo","editlogo","postlogo","deletelogo","logoStore","logostore","logo","setlogo","loadlogo","loadlogowithcallback","loadlogowithid","i_logo","position","section","getlogo_arrayposition","getlogo_arrayposition_iid","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","loadlogo_arrayposition_iid","getleveldetails","leveldetailslstore","leveldetails","setleveldetails","loadleveldetails","Loading1","useLoading","Loading","setLoading","pushLoading","newid","push","popLoading","remid","isLoading","state"],"mappings":"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","file":"26.f6da8c4dd7fd40f5930b.js","sourcesContent":["import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const LanguageStore = new Store<{ key: string, value: string }>({ key: \"ENGLISH\", value: \"ENGLISH\" });\r\n\r\n\r\nexport const useLanguageStore = () => {\r\n    const [Language, setLanguage] = useStore(LanguageStore);\r\n\r\n    return {\r\n        Language, setLanguage,\r\n\r\n    }\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetailsbyid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/list/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetailsbyid;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetailsbyqrid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/qr/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetailsbyqrid;","import { logerror } from './../utils/actions'\r\nimport { Store, useStore } from './Store'\r\nimport getleveldetailsbyid from '../utils/api/getleveldetailsbyid'\r\nimport getleveldetailsbyqrid from '../utils/api/getleveldetailsbyqrid'\r\n\r\nexport class leveldetailsItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  progress: Number\r\n  TextData: any\r\n  completion_image: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    progress: Number\r\n    TextData: any\r\n    completion_image: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n    this.progress = o.progress\r\n    this.TextData = o.TextData\r\n    this.completion_image = o.completion_image\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem | false>(false)\r\n\r\nexport const userActiveLevelDetailsStore = () => {\r\n  const [ActiveLevelDetails, setActiveLevelDetails] = useStore(\r\n    leveldetailsStore\r\n  )\r\n\r\n  return {\r\n    ActiveLevelDetails,\r\n    setActiveLevelDetails,\r\n\r\n    async loadActiveleveldetails(id: any) {\r\n      await getleveldetailsbyid(id)\r\n        .then(data => {\r\n          // console.log(\"data of level \", data.data.results[0]);\r\n          setActiveLevelDetails(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadActiveleveldetailsbyqr(id: any) {\r\n      await getleveldetailsbyqrid(id)\r\n        .then(data => {\r\n          setActiveLevelDetails(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Store, useStore } from './Store'\r\nimport getsublevel_data_byid from '../utils/api/getsublevel_data_byid'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class leveldetailsItem {\r\n  created_at: String\r\n  id: String\r\n  instance_id: any\r\n  level_id: any\r\n  sl_body: String\r\n  sl_bodyoptions: String\r\n  sl_bodytype: String\r\n  sl_icon: String\r\n  sl_media: String\r\n  sl_misc: null\r\n  sl_stitle: String\r\n  sl_title: String\r\n  sl_types: String\r\n  updated_at: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    created_at: String\r\n    id: String\r\n    instance_id: any\r\n    level_id: any\r\n    sl_body: String\r\n    sl_bodyoptions: String\r\n    sl_bodytype: String\r\n    sl_icon: String\r\n    sl_media: String\r\n    sl_misc: null\r\n    sl_stitle: String\r\n    sl_title: String\r\n    sl_types: String\r\n    updated_at: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.created_at = o.created_at\r\n    this.instance_id = o.instance_id\r\n    this.level_id = o.level_id\r\n    this.sl_body = o.sl_body\r\n    this.sl_bodyoptions = o.sl_bodyoptions\r\n    this.sl_bodytype = o.sl_bodytype\r\n    this.sl_icon = o.sl_icon\r\n    this.sl_media = o.sl_media\r\n    this.sl_misc = o.sl_misc\r\n    this.sl_stitle = o.sl_stitle\r\n    this.sl_title = o.sl_title\r\n    this.sl_types = o.sl_types\r\n    this.updated_at = o.updated_at\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem | false>(false)\r\n\r\nexport const userActiveSubLevelDetailsStore = () => {\r\n  const [ActiveSubLevelDetails, setActiveSubLevelDetails] = useStore(\r\n    leveldetailsStore\r\n  )\r\n\r\n  return {\r\n    ActiveSubLevelDetails,\r\n    setActiveSubLevelDetails,\r\n\r\n    async loadActiveSubleveldetails(id: any) {\r\n      await getsublevel_data_byid(id)\r\n        .then(data => {\r\n          // console.log(\"sublevel\", data.data.results[0]);\r\n          setActiveSubLevelDetails(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Store, useStore } from \"./Store\";\r\n\r\nexport const ActivePopup1 = new Store<string>(\"\");\r\n\r\nexport const useActivePopup = () => {\r\n\r\n    const [ActivePopup, setActivePopup] = useStore(ActivePopup1);\r\n\r\n    return {\r\n        ActivePopup, setActivePopup,\r\n    }\r\n\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editinstance = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postinstance = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instance/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deleteinstance = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deleteinstance;","import { Store, useStore } from './Store'\r\nimport getinstance from '../utils/api/getinstance'\r\nimport editinstance from '../utils/api/editinstance'\r\nimport postinstance from '../utils/api/postinstance'\r\nimport deleteinstance from '../utils/api/deleteinstance'\r\nimport { logerror } from 'utils/actions'\r\nexport class instanceItem {\r\n  id: String\r\n  i_icon: String\r\n  mascot: String\r\n  i_title: String\r\n  i_stitle: String\r\n  i_body: String\r\n  i_bodytype: String\r\n  i_bodyoptions: String\r\n  locations: String\r\n  i_media: String\r\n  i_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  color_field: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_icon: String\r\n    mascot: String\r\n    i_title: String\r\n    i_stitle: String\r\n    i_body: String\r\n    i_bodytype: String\r\n    i_bodyoptions: String\r\n    locations: String\r\n    i_media: String\r\n    i_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    color_field: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.i_icon = o.i_icon\r\n    this.mascot = o.mascot\r\n    this.i_title = o.i_title\r\n    this.i_stitle = o.i_stitle\r\n    this.i_body = o.i_body\r\n    this.i_bodytype = o.i_bodytype\r\n    this.i_bodyoptions = o.i_bodyoptions\r\n    this.locations = o.locations\r\n    this.i_media = o.i_media\r\n    this.i_misc = o.i_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.color_field = o.color_field\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport class instanceItem1 {\r\n  id: String\r\n  i_icon: String\r\n  mascot: String\r\n  i_title: String\r\n  i_stitle: String\r\n  i_body: String\r\n  i_bodytype: String\r\n  i_bodyoptions: String\r\n  locations: String\r\n  i_media: String\r\n  i_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  color_field: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_icon: String\r\n    mascot: String\r\n    i_title: String\r\n    i_stitle: String\r\n    i_body: String\r\n    i_bodytype: String\r\n    i_bodyoptions: String\r\n    locations: String\r\n    i_media: String\r\n    i_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    color_field: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.i_icon = o.i_icon\r\n    this.mascot = o.mascot\r\n    this.i_title = o.i_title\r\n    this.i_stitle = o.i_stitle\r\n    this.i_body = o.i_body\r\n    this.i_bodytype = o.i_bodytype\r\n    this.i_bodyoptions = o.i_bodyoptions\r\n    this.locations = o.locations\r\n    this.i_media = o.i_media\r\n    this.i_misc = o.i_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.color_field = o.color_field\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\n// setactiveInstanceData(JSON.parse(String(localStorage.getItem('ActiveInstance'))))\r\nexport const instanceStore = new Store<instanceItem[] | false>(false)\r\n\r\nexport const instanceStore1 = new Store<instanceItem1 | false>(\r\n  typeof localStorage === 'undefined'\r\n    ? null\r\n    : localStorage.getItem('ActiveInstance')\r\n    ? JSON.parse(String(localStorage.getItem('ActiveInstance')))\r\n    : false\r\n)\r\n\r\nexport const instancestore = () => {\r\n  const [instance, setinstance] = useStore(instanceStore)\r\n\r\n  const [activeInstanceData, setactiveInstanceData] = useStore(instanceStore1)\r\n\r\n  return {\r\n    instance,\r\n    setinstance,\r\n    activeInstanceData,\r\n    setactiveInstanceData,\r\n\r\n    async loadinstance() {\r\n      await getinstance(' ')\r\n        .then(data => {\r\n          setinstance(data.data.results)\r\n          console.log('Instances Data: ', data.data.results)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadinstancewithcallback(callback: any) {\r\n      await getinstance(' ')\r\n        .then(data => {\r\n          console.log('Instances Data: ', data.data.results)\r\n          callback(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadactiveInstancebyID(id: any) {\r\n      await getinstance(id)\r\n        .then(data => {\r\n          setactiveInstanceData(data.data.results[0])\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postinstance(data: any) {\r\n      await postinstance(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setinstance((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editinstance(id: any, data: any) {\r\n      await editinstance(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setinstance(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.i_icon = data.i_icon\r\n                  x.mascot = data.mascot\r\n                  x.i_title = data.i_title\r\n                  x.i_stitle = data.i_stitle\r\n                  x.i_body = data.i_body\r\n                  x.i_bodytype = data.i_bodytype\r\n                  x.i_bodyoptions = data.i_bodyoptions\r\n                  x.locations = data.locations\r\n                  x.i_media = data.i_media\r\n                  x.i_misc = data.i_misc\r\n                  x.color_field = data.color_field\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deleteinstance(id: any) {\r\n      await deleteinstance(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setinstance(instance && instance.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getsublevel_data_byid = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/sublevel/level/${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getsublevel_data_byid;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlevel = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/level/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/level/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/level/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelevel;","import { Store, useStore } from './Store'\r\nimport getlevel from '../utils/api/getlevel'\r\nimport postlevel from '../utils/api/postlevel'\r\nimport editlevel from '../utils/api/editlevel'\r\nimport deletelevel from '../utils/api/deletelevel'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class levelItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  unlock_after: String\r\n  completion_image: String\r\n  clue_image: String\r\n  l_qr_id: String\r\n  scan_complete: String\r\n  progress: String\r\n  is_locked: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    unlock_after: String\r\n    completion_image: String\r\n    clue_image: String\r\n    l_qr_id: String\r\n    scan_complete: String\r\n    progress: String\r\n    is_locked: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n\r\n    this.unlock_after = o.unlock_after\r\n    this.completion_image = o.completion_image\r\n    this.clue_image = o.clue_image\r\n    this.l_qr_id = o.l_qr_id\r\n    this.scan_complete = o.scan_complete\r\n    this.progress = o.progress\r\n    this.is_locked = o.is_locked\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const levelStore = new Store<levelItem[] | false>(false)\r\n\r\nexport const levelstore = () => {\r\n  const [level, setlevel] = useStore(levelStore)\r\n\r\n  return {\r\n    level,\r\n    setlevel,\r\n\r\n    async loadlevel() {\r\n      await getlevel('')\r\n        .then(data => {\r\n          setlevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadlevelwithid(id: any) {\r\n      await getlevel(id)\r\n        .then(data => {\r\n          setlevel(data.data.results)\r\n          console.log(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postlevel(data: any) {\r\n      await postlevel(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editlevel(id: any, data: any) {\r\n      await editlevel(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.l_level = data.l_level\r\n                  x.instance_id = data.instance_id\r\n                  x.l_icon = data.l_icon\r\n                  x.l_qrcode = data.l_qrcode\r\n                  x.l_title = data.l_title\r\n                  x.l_stitle = data.l_stitle\r\n                  x.l_body = data.l_body\r\n                  x.l_bodytype = data.l_bodytype\r\n                  x.l_bodyoptions = data.l_bodyoptions\r\n                  x.locations = data.locations\r\n                  x.l_media = data.l_media\r\n                  x.l_misc = data.l_misc\r\n                  x.completion_image = data.completion_image\r\n                  x.clue_image = data.clue_image\r\n                  x.l_qr_id = data.l_qr_id\r\n                  x.unlock_after = data.unlock_after\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deletelevel(id: any) {\r\n      await deletelevel(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel(level && level.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instancelogo/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlogo = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/logo/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlogo = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instancelogo/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelogo = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/logo/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelogo;","import { Store, useStore } from './Store'\r\nimport getlogo from '../utils/api/getlogo'\r\nimport editlogo from '../utils/api/editlogo'\r\nimport postlogo from '../utils/api/postlogo'\r\nimport deletelogo from '../utils/api/deletelogo'\r\nimport { logerror } from 'utils/actions'\r\nexport class logoItem {\r\n  id: String\r\n  i_logo: String\r\n  position: String\r\n  section: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_logo: String\r\n    position: String\r\n    section: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n  }) {\r\n    this.id = o.id\r\n    this.i_logo = o.i_logo\r\n    this.position = o.position\r\n    this.section = o.section\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n  }\r\n}\r\n\r\nexport const logoStore = new Store<logoItem[] | false>(false)\r\n\r\nexport const logostore = () => {\r\n  const [logo, setlogo] = useStore(logoStore)\r\n\r\n  return {\r\n    logo,\r\n    setlogo,\r\n\r\n    async loadlogo() {\r\n      await getlogo('')\r\n        .then(data => {\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogowithcallback(callback: any) {\r\n      await getlogo('')\r\n        .then(data => {\r\n          callback(data.data.results)\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogowithid(id: any) {\r\n      await getlogo(id)\r\n        .then(data => {\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postlogo(data: any) {\r\n      await postlogo(data)\r\n        .then(res => {\r\n          setlogo((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editlogo(id: any, data: any) {\r\n      await editlogo(id, data)\r\n        .then(res => {\r\n          setlogo(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.instance_id = data.instance_id\r\n                  x.i_logo = data.i_logo\r\n                  x.position = data.position\r\n                  x.section = data.section\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deletelogo(id: any) {\r\n      await deletelogo(id)\r\n        .then(res => {\r\n          setlogo(logo && logo.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition_iid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition_iid;","import { Store, useStore } from './Store'\r\nimport getlogo_arrayposition from '../utils/api/getlogo_arrayposition'\r\nimport getlogo_arrayposition_iid from 'utils/api/getlogo_arrayposition_iid'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class logopositionItem {\r\n  id: String\r\n  i_logo: String\r\n  position: String\r\n  section: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_logo: String\r\n    position: String\r\n    section: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n  }) {\r\n    this.id = o.id\r\n    this.i_logo = o.i_logo\r\n    this.position = o.position\r\n    this.section = o.section\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n  }\r\n}\r\n\r\nexport class temp {\r\n  section1: logopositionItem[][]\r\n  section2: logopositionItem[][]\r\n  section3: logopositionItem[][]\r\n  constructor(o: {\r\n    section1: logopositionItem[][]\r\n    section2: logopositionItem[][]\r\n    section3: logopositionItem[][]\r\n  }) {\r\n    this.section1 = o.section1\r\n    this.section2 = o.section2\r\n    this.section3 = o.section3\r\n  }\r\n}\r\n\r\nexport const logopositionStore = new Store<temp | false>(false)\r\n\r\nexport const logopositionstore = () => {\r\n  const [logoposition, setlogoposition] = useStore(logopositionStore)\r\n\r\n  return {\r\n    logoposition,\r\n    setlogoposition,\r\n\r\n    async loadlogo_arrayposition() {\r\n      await getlogo_arrayposition()\r\n        .then(data => {\r\n          setlogoposition(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogo_arrayposition_iid(id: any) {\r\n      await getlogo_arrayposition_iid(id)\r\n        .then(data => {\r\n          setlogoposition(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetails = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetails;","import { Store, useStore } from './Store'\r\nimport getleveldetails from '../utils/api/getleveldetails'\r\nimport { logerror } from 'utils/actions'\r\nexport class leveldetailsItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  unlock_after: String\r\n  completion_image: String\r\n  clue_image: String\r\n  l_qr_id: String\r\n  scan_complete: String\r\n  progress: String\r\n  is_locked: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    unlock_after: String\r\n    completion_image: String\r\n    clue_image: String\r\n    l_qr_id: String\r\n    scan_complete: String\r\n    progress: String\r\n    is_locked: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n\r\n    this.unlock_after = o.unlock_after\r\n    this.completion_image = o.completion_image\r\n    this.clue_image = o.clue_image\r\n    this.l_qr_id = o.l_qr_id\r\n    this.scan_complete = o.scan_complete\r\n    this.progress = o.progress\r\n    this.is_locked = o.is_locked\r\n\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem[] | false>(false)\r\n\r\nexport const leveldetailslstore = () => {\r\n  const [leveldetails, setleveldetails] = useStore(leveldetailsStore)\r\n\r\n  return {\r\n    leveldetails,\r\n    setleveldetails,\r\n\r\n    async loadleveldetails() {\r\n      await getleveldetails()\r\n        .then(data => {\r\n          console.log(data.data.results)\r\n          setleveldetails(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Store, useStore } from \"./Store\";\r\n\r\nexport const Loading1 = new Store<String[]>([]);\r\n\r\nexport const useLoading = () => {\r\n\r\n    const [Loading, setLoading] = useStore(Loading1);\r\n\r\n    return {\r\n        Loading, setLoading,\r\n        pushLoading(newid: any) {\r\n            setLoading((oldarr: any) => {\r\n                oldarr.push(newid)\r\n                return oldarr\r\n            })\r\n        },\r\n        popLoading(remid: any) {\r\n            setLoading((oldarr: any) => {\r\n                let newarr = oldarr.filter((obj: any) => String(obj) !== String(remid))\r\n                return newarr\r\n            })\r\n        },\r\n        isLoading(id: any) {\r\n            let state = false\r\n            Loading.map((obj: any) => {\r\n                if (String(obj) === String(id)) {\r\n                    state = true\r\n                }\r\n            })\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n"],"sourceRoot":""}