{"version":3,"sources":["webpack:///./src/assets/Clean Walk/Video/VID_next.png","webpack:///./src/assets/DULT_logo.png","webpack:///./node_modules/universal-cookie/es6/utils.js","webpack:///./node_modules/universal-cookie/es6/Cookies.js","webpack:///./node_modules/universal-cookie/es6/index.js","webpack:///./src/assets/close_icon.svg","webpack:///(webpack)/buildin/global.js","webpack:///./src/assets/tick.svg","webpack:///./src/assets/images/Levels_Screen/share icon.svg","webpack:///./src/assets/images/Levels_Screen/settings icon.svg","webpack:///./src/assets/down.png","webpack:///./src/assets/up.png","webpack:///./src/assets/eye-visibility.svg","webpack:///./src/assets/eye-invisible.svg","webpack:///./src/assets/upload.png","webpack:///./src/assets/color-picker.png","webpack:///./node_modules/value-equal/esm/value-equal.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/universal-cookie/node_modules/cookie/index.js"],"names":["module","exports","readCookie","value","options","cleanValue","substr","cleanupCookieValue","doNotParse","isParsingCookie","JSON","parse","e","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","Cookies","cookies","_this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","Promise","document","catch","_updateBrowserValues","parseOptions","_emitChange","params","get","name","getAll","result","name_1","set","_a","stringify","remove","finalOptions","expires","Date","maxAge","undefined","addChangeListener","callback","push","removeChangeListener","idx","indexOf","splice","g","Function","window","valueOf","obj","valueEqual","a","b","Array","isArray","every","item","index","aValue","bValue","keys","key","prefix","invariant","condition","message","Error","str","TypeError","opt","pairs","split","dec","decode","pair","substring","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","test","isNaN","isFinite","Math","floor","domain","path","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent"],"mappings":"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","file":"main~31ecd969.b45edc8640a233718b3f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"12c31d4081a9828edb9d938ac731984d.png\";","module.exports = __webpack_public_path__ + \"47a84ef0c02ceb0ea89d020dee46915b.png\";","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","module.exports = __webpack_public_path__ + \"b8343bee318281c90e81b37ffd01851c.svg\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = __webpack_public_path__ + \"0697da8bc4fbee309d13954f7e244ea2.svg\";","module.exports = __webpack_public_path__ + \"f382bced3d3cc0b8eafcd815edee8673.svg\";","module.exports = __webpack_public_path__ + \"0af4803da61c5ca683882a379cdb30a3.svg\";","module.exports = __webpack_public_path__ + \"3e3f0976b58e61d1f770c934b49fe3f0.png\";","module.exports = __webpack_public_path__ + \"8b74a9768aeba5748cec863593400e17.png\";","module.exports = __webpack_public_path__ + \"320fe8b07fbbdecaec80bd77dfe06fbb.svg\";","module.exports = __webpack_public_path__ + \"629cbd8d947de94f359d3194d203080f.svg\";","module.exports = __webpack_public_path__ + \"3e5ce0387f51219723535b190da62349.png\";","module.exports = __webpack_public_path__ + \"cfdef933fc4176f2ec1aff6d5b3e7cd2.png\";","function valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n"],"sourceRoot":""}