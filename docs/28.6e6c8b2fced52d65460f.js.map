{"version":3,"sources":["webpack:///./src/store/ActiveInstance.ts","webpack:///./src/utils/api/postlanguage.ts","webpack:///./src/utils/api/editLanguage.ts","webpack:///./src/utils/api/getsublevel.ts","webpack:///./src/utils/api/postsublevel.ts","webpack:///./src/utils/api/editsublevel.ts","webpack:///./src/utils/api/deletesublevel.ts","webpack:///./src/store/sublevelStore.ts","webpack:///./src/utils/api/getGamedatalog.ts","webpack:///./src/store/GamedatalogStore.ts","webpack:///./src/utils/api/getlogo.ts","webpack:///./src/utils/api/editlogo.ts","webpack:///./src/utils/api/postlogo.ts","webpack:///./src/utils/api/deletelogo.ts","webpack:///./src/store/logoStore.ts","webpack:///./src/utils/api/getlogo_arrayposition.ts","webpack:///./src/utils/api/getlogo_arrayposition_iid.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/utils/api/getleveldetails.ts","webpack:///./src/store/leveldetailsStore.ts"],"names":["ActiveInstance1","Store","useActiveInstance","useStore","ActiveInstance","setActiveInstance","postlanguage","data","axios","post","headers","String","localStorage","getItem","editLanguage","id","put","getsublevel","instanceid","levelid","get","postsublevel","editsublevel","deletesublevel","sublevelStore","sublevel1Store","sublevelstore","sublevel","setsublevel","sublevel1","setsublevel1","loadsublevel","then","results","err","console","log","logerror","response","loadsublevelwithid","res","oldArray","oldarr","map","obj","x","instance_id","level_id","sl_types","sl_icon","sl_title","sl_stitle","sl_body","sl_bodytype","sl_bodyoptions","sl_misc","sl_media","filter","ele","loadsublevel1_data_byid","getsublevel_data_byid","getGamedatalog","level","user","GamedatalogStore","Gamedatastore","Gamedatalog","setGamedatalog","loadGamedatalog","loadGamedatalogfilter","getlogo","editlogo","postlogo","deletelogo","logoStore","logostore","logo","setlogo","loadlogo","loadlogowithcallback","callback","loadlogowithid","i_logo","position","section","getlogo_arrayposition","getlogo_arrayposition_iid","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","loadlogo_arrayposition_iid","getleveldetails","leveldetailsStore","leveldetailslstore","leveldetails","setleveldetails","loadleveldetails"],"mappings":"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","file":"28.6e6c8b2fced52d65460f.js","sourcesContent":["import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const ActiveInstance1 = new Store<Number>(-1);\r\n\r\nexport const useActiveInstance = () => {\r\n\r\n    const [ActiveInstance, setActiveInstance] = useStore(ActiveInstance1);\r\n\r\n    return {\r\n        ActiveInstance, setActiveInstance,\r\n    }\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlanguage = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/text/create/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlanguage;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editLanguage = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/text/update/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editLanguage;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getsublevel = async (instanceid: any, levelid: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/sublevel/info/?instance_id=${instanceid}&level_id=${levelid}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postsublevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/sublevel/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editsublevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/sublevel/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editsublevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletesublevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/sublevel/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletesublevel;","import { Store, useStore } from './Store'\r\nimport getsublevel from '../utils/api/getsublevel'\r\nimport postsublevel from '../utils/api/postsublevel'\r\nimport editsublevel from '../utils/api/editsublevel'\r\nimport deletesublevel from '../utils/api/deletesublevel'\r\nimport getsublevel_data_byid from '../utils/api/getsublevel_data_byid'\r\nimport { logerror } from 'utils/actions'\r\nexport class sublevelItem {\r\n  id: String\r\n  sl_types: String\r\n  sl_icon: String\r\n  sl_title: String\r\n  sl_stitle: String\r\n  sl_body: String\r\n  sl_bodytype: String\r\n  sl_bodyoptions: String\r\n  sl_misc: boolean\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  level_id: String\r\n  sl_media: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    sl_types: String\r\n    sl_icon: String\r\n    sl_title: String\r\n    sl_stitle: String\r\n    sl_body: String\r\n    sl_bodytype: String\r\n    sl_bodyoptions: String\r\n    sl_misc: boolean\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    level_id: String\r\n    sl_media: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.sl_types = o.sl_types\r\n    this.sl_icon = o.sl_icon\r\n    this.sl_title = o.sl_title\r\n    this.sl_stitle = o.sl_stitle\r\n    this.sl_body = o.sl_body\r\n    this.sl_bodytype = o.sl_bodytype\r\n    this.sl_bodyoptions = o.sl_bodyoptions\r\n    this.sl_misc = o.sl_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.level_id = o.level_id\r\n    this.sl_media = o.sl_media\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const sublevelStore = new Store<sublevelItem[] | false>(false)\r\n\r\nexport const sublevel1Store = new Store<sublevelItem | false>(false)\r\n\r\nexport const sublevelstore = () => {\r\n  const [sublevel, setsublevel] = useStore(sublevelStore)\r\n  const [sublevel1, setsublevel1] = useStore(sublevel1Store)\r\n\r\n  return {\r\n    sublevel,\r\n    setsublevel,\r\n    sublevel1,\r\n    setsublevel1,\r\n    async loadsublevel() {\r\n      await getsublevel('', '')\r\n        .then(data => {\r\n          setsublevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadsublevelwithid(instanceid: any, levelid: any) {\r\n      await getsublevel(instanceid, levelid)\r\n        .then(data => {\r\n          setsublevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async postsublevel(data: any) {\r\n      await postsublevel(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setsublevel((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async editsublevel(id: any, data: any) {\r\n      await editsublevel(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setsublevel(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.instance_id = data.instance_id\r\n                  x.level_id = data.level_id\r\n                  x.sl_types = data.sl_types\r\n                  x.sl_icon = data.sl_icon\r\n                  x.sl_title = data.sl_title\r\n                  x.sl_stitle = data.sl_stitle\r\n                  x.sl_body = data.sl_body\r\n                  x.sl_bodytype = data.sl_bodytype\r\n                  x.sl_bodyoptions = data.sl_bodyoptions\r\n                  x.sl_misc = data.sl_misc\r\n                  x.sl_media = data.sl_media\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async deletesublevel(id: any) {\r\n      await deletesublevel(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setsublevel(sublevel && sublevel.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadsublevel1_data_byid(id: any) {\r\n      await getsublevel_data_byid(id)\r\n        .then(data => {\r\n          console.log('getsublevel_data_byid', data)\r\n          setsublevel1(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getGamedatalog = async (level: any, user: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/gamedatalog/?level_sublevel=${level}&username=${user}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getGamedatalog;","import { Store, useStore } from './Store'\r\nimport getGamedatalog from '../utils/api/getGamedatalog'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class GamedatalogItem {\r\n  id: String\r\n  level_sublevel_id: String\r\n  level_sublevel: String\r\n  data: String\r\n  misc: String\r\n  status: String\r\n  created_at: String\r\n  updated_at: String\r\n  user: any\r\n  instance: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    level_sublevel_id: String\r\n    level_sublevel: String\r\n    data: String\r\n    misc: String\r\n    status: String\r\n    created_at: String\r\n    updated_at: String\r\n    user: any\r\n    instance: any\r\n  }) {\r\n    this.id = o.id\r\n    this.level_sublevel_id = o.level_sublevel_id\r\n    this.level_sublevel = o.level_sublevel\r\n    this.data = o.data\r\n    this.misc = o.misc\r\n    this.status = o.status\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.user = o.user\r\n    this.instance = o.instance\r\n  }\r\n}\r\n\r\nexport const GamedatalogStore = new Store<GamedatalogItem[] | false>(false)\r\n\r\nexport const Gamedatastore = () => {\r\n  const [Gamedatalog, setGamedatalog] = useStore(GamedatalogStore)\r\n\r\n  return {\r\n    Gamedatalog,\r\n    setGamedatalog,\r\n\r\n    async loadGamedatalog() {\r\n      await getGamedatalog('', '')\r\n        .then(data => {\r\n          console.log('>>> data.data.resultsdata.data.results :', data.data)\r\n          setGamedatalog(data.data)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadGamedatalogfilter(level: any, user: any) {\r\n      await getGamedatalog(level, user)\r\n        .then(data => {\r\n          console.log('>>> data.data.resultsdata.data.results :', data.data)\r\n          setGamedatalog(data.data)\r\n        })\r\n        .catch(err => {\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instancelogo/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlogo = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/logo/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlogo = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instancelogo/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlogo;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelogo = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/logo/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelogo;","import { Store, useStore } from './Store'\r\nimport getlogo from '../utils/api/getlogo'\r\nimport editlogo from '../utils/api/editlogo'\r\nimport postlogo from '../utils/api/postlogo'\r\nimport deletelogo from '../utils/api/deletelogo'\r\nimport { logerror } from 'utils/actions'\r\nexport class logoItem {\r\n  id: String\r\n  i_logo: String\r\n  position: String\r\n  section: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_logo: String\r\n    position: String\r\n    section: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n  }) {\r\n    this.id = o.id\r\n    this.i_logo = o.i_logo\r\n    this.position = o.position\r\n    this.section = o.section\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n  }\r\n}\r\n\r\nexport const logoStore = new Store<logoItem[] | false>(false)\r\n\r\nexport const logostore = () => {\r\n  const [logo, setlogo] = useStore(logoStore)\r\n\r\n  return {\r\n    logo,\r\n    setlogo,\r\n\r\n    async loadlogo() {\r\n      await getlogo('')\r\n        .then(data => {\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogowithcallback(callback: any) {\r\n      await getlogo('')\r\n        .then(data => {\r\n          callback(data.data.results)\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogowithid(id: any) {\r\n      await getlogo(id)\r\n        .then(data => {\r\n          setlogo(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postlogo(data: any) {\r\n      await postlogo(data)\r\n        .then(res => {\r\n          setlogo((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editlogo(id: any, data: any) {\r\n      await editlogo(id, data)\r\n        .then(res => {\r\n          setlogo(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x = o\r\n                  x.instance_id = data.instance_id\r\n                  x.i_logo = data.i_logo\r\n                  x.position = data.position\r\n                  x.section = data.section\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deletelogo(id: any) {\r\n      await deletelogo(id)\r\n        .then(res => {\r\n          setlogo(logo && logo.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlogo_arrayposition_iid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/logo/position/${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlogo_arrayposition_iid;","import { Store, useStore } from './Store'\r\nimport getlogo_arrayposition from '../utils/api/getlogo_arrayposition'\r\nimport getlogo_arrayposition_iid from 'utils/api/getlogo_arrayposition_iid'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class logopositionItem {\r\n  id: String\r\n  i_logo: String\r\n  position: String\r\n  section: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n\r\n  constructor(o: {\r\n    id: String\r\n    i_logo: String\r\n    position: String\r\n    section: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n  }) {\r\n    this.id = o.id\r\n    this.i_logo = o.i_logo\r\n    this.position = o.position\r\n    this.section = o.section\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n  }\r\n}\r\n\r\nexport class temp {\r\n  section1: logopositionItem[][]\r\n  section2: logopositionItem[][]\r\n  section3: logopositionItem[][]\r\n  constructor(o: {\r\n    section1: logopositionItem[][]\r\n    section2: logopositionItem[][]\r\n    section3: logopositionItem[][]\r\n  }) {\r\n    this.section1 = o.section1\r\n    this.section2 = o.section2\r\n    this.section3 = o.section3\r\n  }\r\n}\r\n\r\nexport const logopositionStore = new Store<temp | false>(false)\r\n\r\nexport const logopositionstore = () => {\r\n  const [logoposition, setlogoposition] = useStore(logopositionStore)\r\n\r\n  return {\r\n    logoposition,\r\n    setlogoposition,\r\n\r\n    async loadlogo_arrayposition() {\r\n      await getlogo_arrayposition()\r\n        .then(data => {\r\n          setlogoposition(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n    async loadlogo_arrayposition_iid(id: any) {\r\n      await getlogo_arrayposition_iid(id)\r\n        .then(data => {\r\n          setlogoposition(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetails = async () => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetails;","import { Store, useStore } from './Store'\r\nimport getleveldetails from '../utils/api/getleveldetails'\r\nimport { logerror } from 'utils/actions'\r\nexport class leveldetailsItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  unlock_after: String\r\n  completion_image: String\r\n  clue_image: String\r\n  l_qr_id: String\r\n  scan_complete: String\r\n  progress: String\r\n  is_locked: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    unlock_after: String\r\n    completion_image: String\r\n    clue_image: String\r\n    l_qr_id: String\r\n    scan_complete: String\r\n    progress: String\r\n    is_locked: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n\r\n    this.unlock_after = o.unlock_after\r\n    this.completion_image = o.completion_image\r\n    this.clue_image = o.clue_image\r\n    this.l_qr_id = o.l_qr_id\r\n    this.scan_complete = o.scan_complete\r\n    this.progress = o.progress\r\n    this.is_locked = o.is_locked\r\n\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem[] | false>(false)\r\n\r\nexport const leveldetailslstore = () => {\r\n  const [leveldetails, setleveldetails] = useStore(leveldetailsStore)\r\n\r\n  return {\r\n    leveldetails,\r\n    setleveldetails,\r\n\r\n    async loadleveldetails() {\r\n      await getleveldetails()\r\n        .then(data => {\r\n          console.log(data.data.results)\r\n          setleveldetails(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}