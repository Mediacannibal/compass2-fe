{"version":3,"sources":["webpack:///./src/utils/axios.ts","webpack:///./src/utils/headers.js","webpack:///./src/store/ColourStore.ts","webpack:///./src/store/Store.ts","webpack:///./src/utils/api/addusererrorlog.ts","webpack:///./src/utils/actions.ts","webpack:///./src/store/authStore.ts","webpack:///./src/store/ActiveScreen.ts","webpack:///./src/utils/api/getuser.ts","webpack:///./src/utils/api/edituser.ts","webpack:///./src/utils/api/getcurrentuser.ts","webpack:///./src/utils/api/editprofileuser.ts","webpack:///./src/store/userStore.ts","webpack:///./src/utils/api/getinstance.ts"],"names":["instance","axios","create","baseURL","headers","auth","JSON","parse","HSLToHex","h","s","l","c","Math","abs","x","m","r","g","b","round","toString","length","generate_theme_colours","value","m1","m2h_temp","H","cmin","min","cmax","max","delta","toFixed","hexToHSL","m3h_temp","color_11","color_12","color_13","color_14","color_15","color_red","color_green","color_m1","color_m2","color_m3","color_s1","color_s2","color_s3","color_t1","color_t2","color_t3","colorStore","Store","useColourObjectStore","useStore","colourObj","setcolourObj","loadinstancecolor","id","getinstance","then","data","results","color_field","err","logerror","response","loaddefaultcolor","setinstancecolor","color","initialValue","this","_state","index","subscribers","oldVal","newVal","newValue","Function","pingSubscribers","callback","currentIndex","store","useState","state","setValue","useLayoutEffect","subscribe","update","addusererrorlog","post","String","localStorage","getItem","fileupload","token","file","Authorization","res","file_upload","Sociallogin","postGamedataLog","errres","console","log","error_title","error_message","stringify","additional_info","authStore","useAuth","setAuth","login","AuthToken","logout","clear","sessionStorage","ActiveScreen1","useActiveScreen","ActiveScreen","setActiveScreen","getuser","get","edituser","put","getcurrentuser","editprofileuser","userStore","userDetail","userstore","user","setuser","selfuser","setselfuser","loaduser","oldarr","map","obj","image","firstname","lastname","email","address","dob","user_type","gender","auth_type","photo_url","dial_code","phone","loadcurrentuser","result","setItem"],"mappings":"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","file":"1.94b6e28497be7263a164.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://apidc.mediacannibal.com/'\n});\n\nexport default instance;","/**\n * Created by rozer on 8/16/2018.\n */\n\n\nconst headers = (auth) => {\n    if (auth === null ||auth === \"null\" )\n      return ({\n         'Accept': 'application/json',\n      })\n   else\n      return ({\n         'Accept': 'application/json',\n         'Authorization': auth ? `Token ${JSON.parse(auth)}` : ''\n      })\n};\n\n\n\nexport default headers\n","import { logerror } from 'utils/actions'\nimport getinstance from 'utils/api/getinstance'\nimport { Store, useStore } from './Store'\n\nconst hexToHSL = H => {\n  // Convert hex to RGB first\n  let r = 0,\n    g = 0,\n    b = 0\n  if (H.length == 4) {\n    r = '0x' + H[1] + H[1]\n    g = '0x' + H[2] + H[2]\n    b = '0x' + H[3] + H[3]\n  } else if (H.length == 7) {\n    r = '0x' + H[1] + H[2]\n    g = '0x' + H[3] + H[4]\n    b = '0x' + H[5] + H[6]\n  }\n  // Then to HSL\n  r /= 255\n  g /= 255\n  b /= 255\n  let cmin = Math.min(r, g, b),\n    cmax = Math.max(r, g, b),\n    delta = cmax - cmin,\n    h = 0,\n    s = 0,\n    l = 0\n\n  if (delta == 0) h = 0\n  else if (cmax == r) h = ((g - b) / delta) % 6\n  else if (cmax == g) h = (b - r) / delta + 2\n  else h = (r - g) / delta + 4\n\n  h = Math.round(h * 60)\n\n  if (h < 0) h += 360\n\n  l = (cmax + cmin) / 2\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n  s = +(s * 100).toFixed(1)\n  l = +(l * 100).toFixed(1)\n\n  let hsl = { h, s, l }\n  // console.log(\"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\");\n  return hsl\n}\n\nconst HSLToHex = (h, s, l) => {\n  s /= 100\n  l /= 100\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n    m = l - c / 2,\n    r = 0,\n    g = 0,\n    b = 0\n\n  if (0 <= h && h < 60) {\n    r = c\n    g = x\n    b = 0\n  } else if (60 <= h && h < 120) {\n    r = x\n    g = c\n    b = 0\n  } else if (120 <= h && h < 180) {\n    r = 0\n    g = c\n    b = x\n  } else if (180 <= h && h < 240) {\n    r = 0\n    g = x\n    b = c\n  } else if (240 <= h && h < 300) {\n    r = x\n    g = 0\n    b = c\n  } else if (300 <= h && h < 360) {\n    r = c\n    g = 0\n    b = x\n  }\n  // Having obtained RGB, convert channels to hex\n  r = Math.round((r + m) * 255).toString(16)\n  g = Math.round((g + m) * 255).toString(16)\n  b = Math.round((b + m) * 255).toString(16)\n\n  // Prepend 0s, if necessary\n  if (r.length == 1) r = '0' + r\n  if (g.length == 1) g = '0' + g\n  if (b.length == 1) b = '0' + b\n\n  return '#' + r + g + b\n}\nexport class ColourObjItem {\n  color_11: String\n  color_12: String\n  color_13: String\n  color_14: String\n  color_15: String\n  color_red: String\n  color_green: String\n  color_m1: String\n  color_m2: String\n  color_m3: String\n  color_s1: String\n  color_s2: String\n  color_s3: String\n  color_t1: String\n  color_t2: String\n  color_t3: String\n\n  constructor(o: {\n    color_11: String\n    color_12: String\n    color_13: String\n    color_14: String\n    color_15: String\n    color_red: String\n    color_green: String\n    color_m1: String\n    color_m2: String\n    color_m3: String\n    color_s1: String\n    color_s2: String\n    color_s3: String\n    color_t1: String\n    color_t2: String\n    color_t3: String\n  }) {\n    this.color_11 = o.color_11\n    this.color_12 = o.color_12\n    this.color_13 = o.color_13\n    this.color_14 = o.color_14\n    this.color_15 = o.color_15\n    this.color_red = o.color_red\n    this.color_green = o.color_green\n    this.color_m1 = o.color_m1\n    this.color_m2 = o.color_m2\n    this.color_m3 = o.color_m3\n    this.color_s1 = o.color_s1\n    this.color_s2 = o.color_s2\n    this.color_s3 = o.color_s3\n    this.color_t1 = o.color_t1\n    this.color_t2 = o.color_t2\n    this.color_t3 = o.color_t3\n  }\n}\n\nexport const generate_theme_colours = (value: any) => {\n  // color 1 to HSL\n  let m1 = {}\n  m1 = hexToHSL(value)\n\n  // calculating color 2\n  let m2h_temp = 0\n  m2h_temp = m1.h - 12\n  if (m2h_temp > 360) {\n    m2h_temp = m2h_temp - 360\n  } else if (m2h_temp < 0) {\n    m2h_temp = m2h_temp + 360\n  }\n\n  // calculating color 3\n  let m3h_temp = 0\n  m3h_temp = m1.h - 170\n  if (m3h_temp > 360) {\n    m3h_temp = m3h_temp - 360\n  } else if (m3h_temp < 0) {\n    m3h_temp = m3h_temp + 360\n  }\n\n  let m2 = ''\n  m2 = HSLToHex(m2h_temp, 50, 45)\n\n  let m3 = ''\n  m3 = HSLToHex(m3h_temp, 93, 54)\n\n  let s1 = ''\n  s1 = HSLToHex(m1.h, 30, 70)\n\n  let s2 = ''\n  s2 = HSLToHex(m2h_temp, 30, 70)\n\n  let s3 = ''\n  s3 = HSLToHex(m3h_temp, 30, 70)\n\n  let t1 = ''\n  t1 = HSLToHex(m1.h, 50, 95)\n\n  let t2 = ''\n  t2 = HSLToHex(m2h_temp, 50, 95)\n\n  let t3 = ''\n  t3 = HSLToHex(m3h_temp, 50, 95)\n  // console.log(m2_temp, m1.s, 29);\n\n  let data = {\n    color_11: '#ad43f5',\n    color_12: '#78ce6a',\n    color_13: '#EC7A4A',\n    color_14: '#f5d343',\n    color_15: '#76c2f6',\n    color_red: '#e00000',\n    color_green: '#639A4D',\n    color_m1: value,\n    color_m2: m2,\n    color_m3: m3,\n    color_s1: s1,\n    color_s2: s2,\n    color_s3: s3,\n    color_t1: t1,\n    color_t2: t2,\n    color_t3: t3\n  }\n\n  // console.log(data)\n  return data\n}\n\nexport const colorStore = new Store<ColourObjItem | false>({\n  color_11: '#ad43f5',\n  color_12: '#78ce6a',\n  color_13: '#EC7A4A',\n  color_14: '#f5d343',\n  color_15: '#76c2f6',\n  color_red: '#e00000',\n  color_green: '#639A4D',\n  color_m1: '#00253a',\n  color_m2: '#3998ab',\n  color_m3: '#f6901d',\n  color_s1: '#9bb8c8',\n  color_s2: '#9bc1c8',\n  color_s3: '#c8b39b',\n  color_t1: '#ebf3f8,',\n  color_t2: '#ebf6f8',\n  color_t3: '#f8f2eb'\n})\n\nexport const useColourObjectStore = () => {\n  const [colourObj, setcolourObj] = useStore(colorStore)\n\n  return {\n    colourObj,\n    setcolourObj,\n\n    async loadinstancecolor(id: any) {\n      await getinstance(id)\n        .then(data => {\n          setcolourObj(generate_theme_colours(data.data.results[0].color_field))\n        })\n        .catch(err => {\n          logerror(err, err.response)\n        })\n    },\n\n    loaddefaultcolor() {\n      setcolourObj(generate_theme_colours('#00253a'))\n    },\n\n    setinstancecolor(color: string) {\n      setcolourObj(generate_theme_colours(color))\n    }\n  }\n}\n","import { useLayoutEffect, useState } from \"react\";\n\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\n\nexport class Store<T> {\n    private _state: T;\n    private subscribers: { [k: number]: Subscriber<T> };\n    private index: number;\n    private static id: number = 0;\n    id: number;\n\n    constructor(initialValue: T) {\n        this._state = initialValue;\n        this.index = 0;\n        this.subscribers = {};\n        this.id = Store.id++;\n    }\n\n    private pingSubscribers(oldVal: T, newVal: T) {\n        for (let id in this.subscribers) {\n            this.subscribers[id](oldVal, newVal);\n        }\n    }\n\n    update(newValue: ((old: T) => T) | T) {\n        let newVal: T;\n        if (newValue instanceof Function) {\n            newVal = newValue(this._state);\n        }\n        else {\n            newVal = newValue;\n        }\n        const oldVal = this._state;\n\n        this._state = newVal;\n        this.pingSubscribers(oldVal, newVal);\n\n        return newVal;\n    }\n\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\n    subscribe(callback: Subscriber<T>) {\n        const currentIndex = ++this.index;\n\n        this.subscribers[currentIndex] = callback;\n\n        const subscribers = this.subscribers;\n        return function unsubscribe() {\n            delete subscribers[currentIndex];\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n}\n\nexport function useStore<T>(store: Store<T>) {\n    const [value, setValue] = useState(store.state);\n\n    useLayoutEffect(() => {\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\n            setValue(newVal);\n        });\n        return unsubscribe\n    }, [store.id]);\n\n\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\n        store.update(newVal);\n    }\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\n    return returnVal;\n}\n\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\n    [\n        { [k: string]: T },\n        (\n            id: string,\n            newVal: T | ((old: T) => T)\n        ) => void\n    ] {\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\n    const ids = [Object.entries(stores).map(item => item[1].id)];\n\n    useLayoutEffect(() => {\n        // console.log(\"stores has changed\")\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\n        }));\n\n        return () => unsubscribes.forEach(item => item());\n    }, [ids.join(\"-\")]);\n\n\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\n        stores[id].update(newVal)\n    }\n\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\n\n    return returnVal;\n}","import axios from '../axios';\nimport headers from '../headers';\n\nconst addusererrorlog = async (data: any) => {\n    return (await axios.post(`user/usererrorlog/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default addusererrorlog;","import instance from 'utils/axios'\nimport addusererrorlog from './api/addusererrorlog'\n\n// export const Sociallogin = (callback: (arg0: any, arg1: string) => void, data: any) => {\n//   instance.post(`/user/social/signup/`, data, {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     }\n//   }).then((res) => { callback(res, 'sucess') })\n//     .catch(err => callback(err, err.response))\n// }\n\nexport const fileupload = (callback: any, token: any, data: any, file: any) => {\n  instance\n    .post(`/api/v1/appdata/filemodel/create/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess', file)\n    })\n    .catch(err => {\n      callback(err, err.response, file)\n      logerror(err, err.response)\n    })\n}\n\nexport const file_upload = (callback: any, token: any, data: any) => {\n  instance\n    .post(`/api/v1/appdata/filemodel/create/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const realtime = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(\n      `https://www.googleapis.com/analytics/v3/data/realtime?ids=ga:241653669&metrics=rt:activeUsers`,\n      {\n        headers: {\n          Authorization: token ? `Bearer ${token}` : ''\n        }\n      }\n    )\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const updateGamedata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`/appdata/single_analytics/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const getAppdata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`/appdata/Screensdata/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const postAppdata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  data: any\n) => {\n  instance\n    .post(`/appdata/Screensdata/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const getanalsisdata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`/appdata/analytics/?readlatest=0`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const getalatestnalsisdata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`/appdata/analytics/?readlatest=1`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\n// api compass2\n\nexport const Sociallogin = (\n  callback: (arg0: any, arg1: string) => void,\n  data: any\n) => {\n  instance\n    .post(`user/social/signup/`, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\n//instance\n\nexport const getinstancedata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`api/v1/appdata/instance/info/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const postinstancedata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  data: any\n) => {\n  instance\n    .post(`api/v1/appdata/instance/info/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const postGamedataLog = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  data: any\n) => {\n  instance\n    .post(`api/v1/appdata/gamedatalog/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\nexport const editinstancedata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any,\n  data: any\n) => {\n  instance\n    .put(`api/v1/appdata/instance/` + id + `/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const deleteinstancedata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any\n) => {\n  instance\n    .delete(`api/v1/appdata/instance/` + id, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\n//logo\n\nexport const getlogodata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`api/v1/appdata/instancelogo/info/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const postlogodata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  data: any\n) => {\n  instance\n    .post(`api/v1/appdata/instancelogo/info/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const editlogodata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any,\n  data: any\n) => {\n  instance\n    .put(`api/v1/appdata/instance/logo/` + id + `/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const deletelogodata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any\n) => {\n  instance\n    .delete(`api/v1/appdata/instance/logo/` + id, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\n//level\n\nexport const getleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`api/v1/appdata/level/info/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const postleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  data: any\n) => {\n  instance\n    .post(`api/v1/appdata/level/info/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const editleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any,\n  data: any\n) => {\n  instance\n    .put(`api/v1/appdata/level/` + id + `/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const deleteleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any\n) => {\n  instance\n    .delete(`api/v1/appdata/level/` + id, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\n//sub level\n\nexport const getsubleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`api/v1/appdata/sublevel/info/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const postsubleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  data: any\n) => {\n  instance\n    .post(`api/v1/appdata/sublevel/info/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const editsubleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any,\n  data: any\n) => {\n  instance\n    .put(`api/v1/appdata/sublevel/` + id + `/`, data, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const deletesubleveldata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any,\n  id: any\n) => {\n  instance\n    .delete(`api/v1/appdata/sublevel/` + id, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\n//userdata\n\nexport const getuserdata = (\n  callback: (arg0: any, arg1: string) => void,\n  token: any\n) => {\n  instance\n    .get(`user/list/`, {\n      headers: {\n        Authorization: token ? `Token ${token}` : '',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      callback(res, 'sucess')\n    })\n    .catch(err => {\n      callback(err, err.response)\n      logerror(err, err.response)\n    })\n}\n\nexport const logerror = (err: any, errres: any) => {\n  console.log('========>>> error in frontend logged ', err)\n\n  let data = {\n    error_title: 'front end error',\n    error_message: JSON.stringify(errres),\n    additional_info: JSON.stringify(err)\n  }\n  addusererrorlog(data)\n}\n","import { Store, useStore } from \"./Store\";\n\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\n\nexport const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('AuthToken') ? JSON.parse(String(localStorage.getItem('AuthToken'))) : false);\n\n\nexport const useAuth = () => {\n    const [auth, setAuth] = useStore(authStore);\n\n    return {\n        auth, setAuth,\n        login(AuthToken: string) {\n            setAuth(AuthToken);\n        },\n        logout() {\n            localStorage.clear()\n            sessionStorage.clear()\n            setAuth(null);\n        },\n    }\n};","import { Store, useStore } from \"./Store\";\n\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\n\nexport const ActiveScreen1 = new Store<string>(\"Splash\");\n\nexport const useActiveScreen = () => {\n\n    const [ActiveScreen, setActiveScreen] = useStore(ActiveScreen1);\n\n    return {\n        ActiveScreen, setActiveScreen,\n    }\n\n};","import axios from '../axios';\nimport headers from '../headers';\n\nconst getuser = async () => {\n\n    return (await axios.get(`user/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getuser;","import axios from '../axios';\nimport headers from '../headers';\n\nconst edituser = async (id: any, data: any) => {\n\n    return (await axios.put(`user/edit_profile/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default edituser;","import axios from '../axios';\nimport headers from '../headers';\n\nconst getcurrentuser = async () => {\n\n    return (await axios.get(`user/profile/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getcurrentuser;","import axios from '../axios';\nimport headers from '../headers';\n\nconst editprofileuser = async (data: any) => {\n\n    return (await axios.put(`user/profile/edit/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default editprofileuser;","import { Store, useStore } from './Store'\nimport getuser from '../utils/api/getuser'\nimport edituser from '../utils/api/edituser'\nimport getcurrentuser from '../utils/api/getcurrentuser'\nimport editprofileuser from '../utils/api/editprofileuser'\nimport { logerror } from 'utils/actions'\nexport class userItem {\n  id: String\n  image: String\n  firstname: String\n  lastname: String\n  email: String\n  address: String\n  dob: String\n  user_type: String\n  gender: String\n  auth_type: String\n  photo_url: String\n  dial_code: String\n  phone: String\n  is_deleted: String\n  updated_by: String\n  owned_by: String\n  created_at: String\n  updated_at: String\n  created_by: String\n  TextData: any\n\n  constructor(o: {\n    id: String\n    image: String\n    firstname: String\n    lastname: String\n    email: String\n    address: String\n    dob: String\n    user_type: String\n    gender: String\n    auth_type: String\n    photo_url: String\n    dial_code: String\n    phone: String\n    is_deleted: String\n    updated_by: String\n    owned_by: String\n    created_at: String\n    updated_at: String\n    created_by: String\n    TextData: any\n  }) {\n    this.id = o.id\n    this.image = o.image\n    this.firstname = o.firstname\n    this.lastname = o.lastname\n    this.email = o.email\n    this.address = o.address\n    this.dob = o.dob\n    this.user_type = o.user_type\n    this.gender = o.gender\n    this.auth_type = o.auth_type\n    this.photo_url = o.photo_url\n    this.dial_code = o.dial_code\n    this.phone = o.phone\n    this.is_deleted = o.is_deleted\n    this.updated_by = o.updated_by\n    this.owned_by = o.owned_by\n    this.created_at = o.created_at\n    this.updated_at = o.updated_at\n    this.created_by = o.created_by\n    this.TextData = o.TextData\n  }\n}\n\nexport const userStore = new Store<userItem[] | false>(false)\nexport const userDetail = new Store<userItem | string>(\n  typeof localStorage === 'undefined'\n    ? false\n    : localStorage.getItem('UserDetails')\n    ? JSON.parse(String(localStorage.getItem('UserDetails')))\n    : false\n)\n\nexport const userstore = () => {\n  const [user, setuser] = useStore(userStore)\n  const [selfuser, setselfuser] = useStore(userDetail)\n\n  return {\n    user,\n    setuser,\n    selfuser,\n    setselfuser,\n\n    async loaduser() {\n      await getuser()\n        .then(data => {\n          setuser(data.data)\n          console.log('selfuser selfuser selfuser :', data.data)\n        })\n        .catch(err => {\n          console.log(err)\n          logerror(err, err.response)\n        })\n    },\n    async edituser(id: any, data: any) {\n      await edituser(id, data)\n        .then(res => {\n          setuser(oldarr => {\n            return (\n              oldarr &&\n              oldarr.map((obj: any) => {\n                const getobj = (o: any) => {\n                  let x = o\n                  x.image = data.image\n                  x.firstname = data.firstname\n                  x.lastname = data.lastname\n                  x.email = data.email\n                  x.address = data.address\n                  x.dob = data.dob\n                  x.user_type = data.user_type\n                  x.gender = data.gender\n                  x.auth_type = data.auth_type\n                  x.photo_url = data.photo_url\n                  x.dial_code = data.dial_code\n                  x.phone = data.phone\n                  return x\n                }\n                return String(obj.id) === String(id) ? getobj(obj) : obj\n              })\n            )\n          })\n        })\n        .catch(err => {\n          console.log(err)\n          logerror(err, err.response)\n        })\n    },\n\n    async loadcurrentuser() {\n      await getcurrentuser()\n        .then((data: any) => {\n          console.log('currentuser :', data.data.result)\n          setselfuser(data.data.result)\n        })\n        .catch(err => {\n          console.log(err)\n          logerror(err, err.response)\n        })\n    },\n    async editprofileuser(data: any) {\n      await editprofileuser(data)\n        .then(res => {\n          console.log('edit >>> :', data, res)\n\n          setselfuser((oldarr: any) => {\n            let x = oldarr\n            x.firstname = data.firstname\n            x.lastname = data.lastname\n            x.email = data.email\n            x.image = data.image\n            x.photo_url = data.photo_url\n            x.dob = data.dob\n            x.gender = data.gender\n            x.address = data.address\n            x.dial_code = data.dial_code\n            x.phone = data.phone\n\n            localStorage.setItem('UserDetails', JSON.stringify(x))\n\n            return x\n          })\n        })\n        .catch(err => {\n          console.log(err)\n          logerror(err, err.response)\n        })\n    }\n  }\n}\n","import axios from '../axios';\nimport headers from '../headers';\n\nconst getinstance = async (id: any) => {\n\n    return (await axios.get(`api/v1/appdata/instance/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getinstance;"],"sourceRoot":""}