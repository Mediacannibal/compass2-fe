{"version":3,"sources":["webpack:///./src/store/Store.ts","webpack:///./src/store/InstanceStore.ts","webpack:///./src/store/ActiveInstanceStore.ts","webpack:///./src/store/levelStore.ts","webpack:///./src/store/sublevelStore.ts","webpack:///./src/store/authStore.ts","webpack:///./src/store/logoStore.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/store/userStore.ts","webpack:///./src/store/ColourStore.ts"],"names":["Store","initialValue","this","_state","index","subscribers","id","oldVal","newVal","newValue","Function","pingSubscribers","callback","currentIndex","useStore","store","useState","state","value","setValue","useLayoutEffect","subscribe","update","instanceStore","instancestore","instance","setinstance","loadinstance","getinstance","then","data","console","log","results","postinstance","res","oldArray","err","editinstance","oldarr","map","obj","x","String","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","deleteinstance","filter","ele","ActiveInstancestore","localStorage","getItem","useActiveInstance","ActiveInstance","setActiveInstance","login","AuthToken","logout","clear","sessionStorage","levelStore","levelstore","level","setlevel","loadlevel","getlevel","loadlevelwithid","postlevel","editlevel","l_level","instance_id","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","l_media","l_misc","completion_image","clue_image","deletelevel","sublevelStore","sublevel1Store","sublevelstore","sublevel","setsublevel","sublevel1","setsublevel1","loadsublevel","getsublevel","loadsublevelwithid","instanceid","levelid","postsublevel","editsublevel","level_id","sl_types","sl_icon","sl_title","sl_stitle","sl_body","sl_bodytype","sl_bodyoptions","sl_misc","sl_media","deletesublevel","loadsublevel1_data_byid","getsublevel_data_byid","authStore","JSON","parse","useAuth","auth","setAuth","logoStore","logostore","logo","setlogo","loadlogo","getlogo","loadlogowithid","postlogo","editlogo","i_logo","position","section","deletelogo","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","getlogo_arrayposition","loadlogo_arrayposition_iid","getlogo_arrayposition_iid","userStore","userDetail","userstore","user","setuser","selfuser","setselfuser","loaduser","getuser","edituser","image","firstname","lastname","email","address","dob","user_type","gender","auth_type","photo_url","dial_code","phone","ColourObjects","ColObj","ColourObject","Colour","setColour","colourObj","setcolourObj","loadColour","selected","colour","color_1","color_2","color_3","color_4","color_5","color_6","color_7","color_8","color_9","color_10","color_11","color_12","color_13","color_14","color_15","color_16","color_17","color_18","color_19","color_20","color_21","color_22","color_23","color_24","color_25","color_26","color_27"],"mappings":"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","file":"41.3131d88a98dc6bacece5.js","sourcesContent":["import { useLayoutEffect, useState } from \"react\";\r\n\r\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\r\n\r\nexport class Store<T> {\r\n    private _state: T;\r\n    private subscribers: { [k: number]: Subscriber<T> };\r\n    private index: number;\r\n    private static id: number = 0;\r\n    id: number;\r\n\r\n    constructor(initialValue: T) {\r\n        this._state = initialValue;\r\n        this.index = 0;\r\n        this.subscribers = {};\r\n        this.id = Store.id++;\r\n    }\r\n\r\n    private pingSubscribers(oldVal: T, newVal: T) {\r\n        for (let id in this.subscribers) {\r\n            this.subscribers[id](oldVal, newVal);\r\n        }\r\n    }\r\n\r\n    update(newValue: ((old: T) => T) | T) {\r\n        let newVal: T;\r\n        if (newValue instanceof Function) {\r\n            newVal = newValue(this._state);\r\n        }\r\n        else {\r\n            newVal = newValue;\r\n        }\r\n        const oldVal = this._state;\r\n\r\n        this._state = newVal;\r\n        this.pingSubscribers(oldVal, newVal);\r\n\r\n        return newVal;\r\n    }\r\n\r\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\r\n    subscribe(callback: Subscriber<T>) {\r\n        const currentIndex = ++this.index;\r\n\r\n        this.subscribers[currentIndex] = callback;\r\n\r\n        const subscribers = this.subscribers;\r\n        return function unsubscribe() {\r\n            delete subscribers[currentIndex];\r\n        }\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport function useStore<T>(store: Store<T>) {\r\n    const [value, setValue] = useState(store.state);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\r\n            setValue(newVal);\r\n        });\r\n        return unsubscribe\r\n    }, [store.id]);\r\n\r\n\r\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\r\n        store.update(newVal);\r\n    }\r\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\r\n    return returnVal;\r\n}\r\n\r\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\r\n    [\r\n        { [k: string]: T },\r\n        (\r\n            id: string,\r\n            newVal: T | ((old: T) => T)\r\n        ) => void\r\n    ] {\r\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\r\n    const ids = [Object.entries(stores).map(item => item[1].id)];\r\n\r\n    useLayoutEffect(() => {\r\n        // console.log(\"stores has changed\")\r\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\r\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\r\n        }));\r\n\r\n        return () => unsubscribes.forEach(item => item());\r\n    }, [ids.join(\"-\")]);\r\n\r\n\r\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\r\n        stores[id].update(newVal)\r\n    }\r\n\r\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\r\n\r\n    return returnVal;\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getinstance from \"../utils/api/getinstance\";\r\nimport editinstance from \"../utils/api/editinstance\";\r\nimport postinstance from \"../utils/api/postinstance\";\r\nimport deleteinstance from \"../utils/api/deleteinstance\";\r\n\r\n\r\nexport class instanceItem {\r\n\r\n    id: String;\r\n    i_icon: String;\r\n    mascot: String;\r\n    i_title: String;\r\n    i_stitle: String;\r\n    i_body: String;\r\n    i_bodytype: String;\r\n    i_bodyoptions: String;\r\n    locations: String;\r\n    i_media: String;\r\n    i_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_icon: String;\r\n        mascot: String;\r\n        i_title: String;\r\n        i_stitle: String;\r\n        i_body: String;\r\n        i_bodytype: String;\r\n        i_bodyoptions: String;\r\n        locations: String;\r\n        i_media: String;\r\n        i_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_icon = o.i_icon;\r\n        this.mascot = o.mascot;\r\n        this.i_title = o.i_title;\r\n        this.i_stitle = o.i_stitle;\r\n        this.i_body = o.i_body;\r\n        this.i_bodytype = o.i_bodytype;\r\n        this.i_bodyoptions = o.i_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.i_media = o.i_media;\r\n        this.i_misc = o.i_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n    }\r\n}\r\n\r\nexport const instanceStore = new Store<instanceItem[] | false>(false);\r\n\r\nexport const instancestore = () => {\r\n    const [instance, setinstance] = useStore(instanceStore);\r\n\r\n    return {\r\n        instance, setinstance,\r\n\r\n        async loadinstance() {\r\n            await getinstance().then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n\r\n                    setinstance(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postinstance(data: any) {\r\n            await postinstance(data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editinstance(id: any, data: any) {\r\n            await editinstance(id, data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.i_icon = data.i_icon\r\n                            x.mascot = data.mascot\r\n                            x.i_title = data.i_title\r\n                            x.i_stitle = data.i_stitle\r\n                            x.i_body = data.i_body\r\n                            x.i_bodytype = data.i_bodytype\r\n                            x.i_bodyoptions = data.i_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.i_media = data.i_media\r\n                            x.i_misc = data.i_misc\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deleteinstance(id: any) {\r\n            await deleteinstance(id).then((res) => {\r\n                console.log(res);\r\n                setinstance(instance && instance.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const ActiveInstancestore = new Store<false | string>(typeof localStorage === \"undefined\" ? false : localStorage.getItem('ActiveInstance') ? localStorage.getItem('ActiveInstance') : false);\r\n\r\n\r\nexport const useActiveInstance = () => {\r\n    const [ActiveInstance, setActiveInstance] = useStore(ActiveInstancestore);\r\n\r\n    return {\r\n        ActiveInstance, setActiveInstance,\r\n        login(AuthToken: string) {\r\n            setActiveInstance(AuthToken);\r\n        },\r\n        logout() {\r\n            localStorage.clear()\r\n            sessionStorage.clear()\r\n            setActiveInstance(null);\r\n        },\r\n    }\r\n};","import { Store, useStore } from \"./Store\";\r\nimport getlevel from \"../utils/api/getlevel\";\r\nimport postlevel from \"../utils/api/postlevel\";\r\nimport editlevel from \"../utils/api/editlevel\";\r\nimport deletelevel from \"../utils/api/deletelevel\";\r\n\r\n\r\nexport class levelItem {\r\n\r\n    id: String;\r\n    l_level: String;\r\n    l_icon: String;\r\n    l_qrcode: String;\r\n    l_title: String;\r\n    l_stitle: String;\r\n    l_body: String;\r\n    l_bodytype: String;\r\n    l_bodyoptions: String;\r\n    locations: boolean;\r\n    l_media: String;\r\n    l_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    completion_image: String;\r\n    clue_image: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        l_level: String;\r\n        l_icon: String;\r\n        l_qrcode: String;\r\n        l_title: String;\r\n        l_stitle: String;\r\n        l_body: String;\r\n        l_bodytype: String;\r\n        l_bodyoptions: String;\r\n        locations: boolean;\r\n        l_media: String;\r\n        l_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        completion_image: String;\r\n        clue_image: String\r\n    }) {\r\n        this.id = o.id;\r\n        this.l_level = o.l_level;\r\n        this.l_icon = o.l_icon;\r\n        this.l_qrcode = o.l_qrcode;\r\n        this.l_title = o.l_title;\r\n        this.l_stitle = o.l_stitle;\r\n        this.l_body = o.l_body;\r\n        this.l_bodytype = o.l_bodytype;\r\n        this.l_bodyoptions = o.l_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.l_media = o.l_media;\r\n        this.l_misc = o.l_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.completion_image = o.completion_image;\r\n        this.clue_image = o.clue_image;\r\n    }\r\n}\r\n\r\nexport const levelStore = new Store<levelItem[] | false>(false);\r\n\r\nexport const levelstore = () => {\r\n    const [level, setlevel] = useStore(levelStore);\r\n\r\n    return {\r\n        level, setlevel,\r\n\r\n        async loadlevel() {\r\n            await getlevel(\"\").then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setlevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadlevelwithid(id: any) {\r\n            await getlevel(id).then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setlevel(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postlevel(data: any) {\r\n            await postlevel(data).then((res) => {\r\n                console.log(res);\r\n                setlevel((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editlevel(id: any, data: any) {\r\n            await editlevel(id, data).then((res) => {\r\n                console.log(res);\r\n                setlevel((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.l_level = data.l_level\r\n                            x.instance_id = data.instance_id\r\n                            x.l_icon = data.l_icon\r\n                            x.l_qrcode = data.l_qrcode\r\n                            x.l_title = data.l_title\r\n                            x.l_stitle = data.l_stitle\r\n                            x.l_body = data.l_body\r\n                            x.l_bodytype = data.l_bodytype\r\n                            x.l_bodyoptions = data.l_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.l_media = data.l_media\r\n                            x.l_misc = data.l_misc\r\n                            x.completion_image = data.completion_image\r\n                            x.clue_image = data.clue_image\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletelevel(id: any) {\r\n            await deletelevel(id).then((res) => {\r\n                console.log(res);\r\n                setlevel(level && level.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getsublevel from \"../utils/api/getsublevel\";\r\nimport postsublevel from \"../utils/api/postsublevel\";\r\nimport editsublevel from \"../utils/api/editsublevel\";\r\nimport deletesublevel from \"../utils/api/deletesublevel\";\r\nimport getsublevel_data_byid from \"../utils/api/getsublevel_data_byid\";\r\nexport class sublevelItem {\r\n\r\n    id: String;\r\n    sl_types: String;\r\n    sl_icon: String;\r\n    sl_title: String;\r\n    sl_stitle: String;\r\n    sl_body: String;\r\n    sl_bodytype: String;\r\n    sl_bodyoptions: String;\r\n    sl_misc: boolean;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    level_id: String;\r\n    sl_media: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        sl_types: String;\r\n        sl_icon: String;\r\n        sl_title: String;\r\n        sl_stitle: String;\r\n        sl_body: String;\r\n        sl_bodytype: String;\r\n        sl_bodyoptions: String;\r\n        sl_misc: boolean;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        level_id: String;\r\n        sl_media: String\r\n    }) {\r\n        this.id = o.id;\r\n        this.sl_types = o.sl_types;\r\n        this.sl_icon = o.sl_icon;\r\n        this.sl_title = o.sl_title;\r\n        this.sl_stitle = o.sl_stitle;\r\n        this.sl_body = o.sl_body;\r\n        this.sl_bodytype = o.sl_bodytype;\r\n        this.sl_bodyoptions = o.sl_bodyoptions;\r\n        this.sl_misc = o.sl_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.level_id = o.level_id;\r\n        this.sl_media = o.sl_media;\r\n    }\r\n}\r\n\r\nexport const sublevelStore = new Store<sublevelItem[] | false>(false);\r\n\r\nexport const sublevel1Store = new Store<sublevelItem | false>(false);\r\n\r\n\r\nexport const sublevelstore = () => {\r\n    const [sublevel, setsublevel] = useStore(sublevelStore);\r\n    const [sublevel1, setsublevel1] = useStore(sublevel1Store);\r\n\r\n    return {\r\n        sublevel, setsublevel,\r\n        sublevel1, setsublevel1,\r\n        async loadsublevel() {\r\n            await getsublevel(\"\", \"\").then(\r\n                (data) => {\r\n                    setsublevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadsublevelwithid(instanceid: any, levelid: any) {\r\n            await getsublevel(instanceid, levelid).then(\r\n                (data) => {\r\n                    setsublevel(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postsublevel(data: any) {\r\n            await postsublevel(data).then((res) => {\r\n                console.log(res);\r\n                setsublevel((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editsublevel(id: any, data: any) {\r\n            await editsublevel(id, data).then((res) => {\r\n                console.log(res);\r\n                setsublevel((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.instance_id = data.instance_id\r\n                            x.level_id = data.level_id\r\n                            x.sl_types = data.sl_types\r\n                            x.sl_icon = data.sl_icon\r\n                            x.sl_title = data.sl_title\r\n                            x.sl_stitle = data.sl_stitle\r\n                            x.sl_body = data.sl_body\r\n                            x.sl_bodytype = data.sl_bodytype\r\n                            x.sl_bodyoptions = data.sl_bodyoptions\r\n                            x.sl_misc = data.sl_misc\r\n                            x.sl_media = data.sl_media\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletesublevel(id: any) {\r\n            await deletesublevel(id).then((res) => {\r\n                console.log(res);\r\n                setsublevel(sublevel && sublevel.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        },\r\n        async loadsublevel1_data_byid(id: any) {\r\n            await getsublevel_data_byid(id).then(\r\n                (data) => {\r\n                    console.log(\"getsublevel_data_byid\", data);\r\n\r\n                    setsublevel1(data.data.results);\r\n                }\r\n            )\r\n        },\r\n\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('AuthToken') ? JSON.parse(String(localStorage.getItem('AuthToken'))) : false);\r\n\r\n\r\nexport const useAuth = () => {\r\n    const [auth, setAuth] = useStore(authStore);\r\n\r\n    return {\r\n        auth, setAuth,\r\n        login(AuthToken: string) {\r\n            setAuth(AuthToken);\r\n        },\r\n        logout() {\r\n            localStorage.clear()\r\n            sessionStorage.clear()\r\n            setAuth(null);\r\n        },\r\n    }\r\n};","import { Store, useStore } from \"./Store\";\r\nimport getlogo from \"../utils/api/getlogo\";\r\nimport editlogo from \"../utils/api/editlogo\";\r\nimport postlogo from \"../utils/api/postlogo\";\r\nimport deletelogo from \"../utils/api/deletelogo\";\r\nexport class logoItem {\r\n\r\n    id: String;\r\n    i_logo: String;\r\n    position: String;\r\n    section: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_logo: String;\r\n        position: String;\r\n        section: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_logo = o.i_logo;\r\n        this.position = o.position;\r\n        this.section = o.section;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport const logoStore = new Store<logoItem[] | false>(false);\r\n\r\nexport const logostore = () => {\r\n    const [logo, setlogo] = useStore(logoStore);\r\n\r\n    return {\r\n        logo, setlogo,\r\n\r\n        async loadlogo() {\r\n            await getlogo(\"\").then(\r\n                (data) => {\r\n                    setlogo(data.data.results);\r\n                }\r\n            ) \r\n        },\r\n        async loadlogowithid(id: any) {\r\n            await getlogo(id).then(\r\n                (data) => {\r\n                    setlogo(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postlogo(data: any) {\r\n            await postlogo(data).then((res) => {\r\n                console.log(res);\r\n                setlogo((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editlogo(id: any, data: any) {\r\n            await editlogo(id, data).then((res) => {\r\n                console.log(res);\r\n                setlogo((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.instance_id = data.instance_id\r\n                            x.i_logo = data.i_logo\r\n                            x.position = data.position\r\n                            x.section = data.section\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletelogo(id: any) {\r\n            await deletelogo(id).then((res) => {\r\n                console.log(res);\r\n                setlogo(logo && logo.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getlogo_arrayposition from \"../utils/api/getlogo_arrayposition\";\r\nimport getlogo_arrayposition_iid from \"utils/api/getlogo_arrayposition_iid\";\r\n\r\nexport class logopositionItem {\r\n\r\n    id: String;\r\n    i_logo: String;\r\n    position: String;\r\n    section: String\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_logo: String;\r\n        position: String;\r\n        section: String\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_logo = o.i_logo;\r\n        this.position = o.position;\r\n        this.section = o.section;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport class temp {\r\n    section1: logopositionItem[][]\r\n    section2: logopositionItem[][]\r\n    section3: logopositionItem[][]\r\n    constructor(o: {\r\n        section1: logopositionItem[][];\r\n        section2: logopositionItem[][];\r\n        section3: logopositionItem[][];\r\n    }) {\r\n        this.section1 = o.section1;\r\n        this.section2 = o.section2;\r\n        this.section3 = o.section3;\r\n    }\r\n}\r\n\r\nexport const logopositionStore = new Store<temp | false>(false);\r\n\r\nexport const logopositionstore = () => {\r\n    const [logoposition, setlogoposition] = useStore(logopositionStore);\r\n\r\n    return {\r\n        logoposition, setlogoposition,\r\n\r\n        async loadlogo_arrayposition() {\r\n            await getlogo_arrayposition().then(\r\n                (data) => {\r\n                    console.log(\"loadlogo_arrayposition\", data);\r\n                    setlogoposition(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadlogo_arrayposition_iid(id:any) {\r\n            await getlogo_arrayposition_iid(id).then(\r\n                (data) => {\r\n                    console.log(\"loadlogo_arrayposition\", data);\r\n                    setlogoposition(data.data.results);\r\n                }\r\n            )\r\n        },\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getuser from \"../utils/api/getuser\";\r\nimport edituser from \"../utils/api/edituser\";\r\n\r\nexport class userItem {\r\n\r\n    id: String;\r\n    image: String;\r\n    firstname: String;\r\n    lastname: String;\r\n    email: String;\r\n    address: String;\r\n    dob: String;\r\n    user_type: String;\r\n    gender: String;\r\n    auth_type: String;\r\n    photo_url: String;\r\n    dial_code: String;\r\n    phone: String;\r\n    is_deleted: String;\r\n    updated_by: String;\r\n    owned_by: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    created_by: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        image: String;\r\n        firstname: String;\r\n        lastname: String;\r\n        email: String;\r\n        address: String;\r\n        dob: String;\r\n        user_type: String;\r\n        gender: String;\r\n        auth_type: String;\r\n        photo_url: String;\r\n        dial_code: String;\r\n        phone: String;\r\n        is_deleted: String;\r\n        updated_by: String;\r\n        owned_by: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        created_by: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.image = o.image;\r\n        this.firstname = o.firstname;\r\n        this.lastname = o.lastname;\r\n        this.email = o.email;\r\n        this.address = o.address;\r\n        this.dob = o.dob;\r\n        this.user_type = o.user_type;\r\n        this.gender = o.gender;\r\n        this.auth_type = o.auth_type;\r\n        this.photo_url = o.photo_url;\r\n        this.dial_code = o.dial_code;\r\n        this.phone = o.phone;\r\n        this.is_deleted = o.is_deleted;\r\n        this.updated_by = o.updated_by;\r\n        this.owned_by = o.owned_by;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.created_by = o.created_by;\r\n    }\r\n}\r\n\r\nexport const userStore = new Store<userItem[] | false>(false);\r\nexport const userDetail =  new Store<userItem | string>(typeof localStorage === \"undefined\" ? false : localStorage.getItem('UserDetails') ? JSON.parse(String(localStorage.getItem('UserDetails'))) : false);\r\nexport const userstore = () => {\r\n    const [user, setuser] = useStore(userStore);\r\n    const [selfuser, setselfuser] = useStore(userDetail);\r\n\r\n    return {\r\n        user, setuser, selfuser, setselfuser,\r\n\r\n        async loaduser() {\r\n            await getuser().then(\r\n                (data) => {\r\n                    console.log(\"user data\", data);\r\n                    setuser(data.data);\r\n                }\r\n            )\r\n\r\n        },\r\n        async edituser(id: any, data: any) {\r\n            await edituser(id, data).then((res) => {\r\n                console.log(res);\r\n                setuser((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.image = data.image\r\n                            x.firstname = data.firstname\r\n                            x.lastname = data.lastname\r\n                            x.email = data.email\r\n                            x.address = data.address\r\n                            x.dob = data.dob\r\n                            x.user_type = data.user_type\r\n                            x.gender = data.gender\r\n                            x.auth_type = data.auth_type\r\n                            x.photo_url = data.photo_url\r\n                            x.dial_code = data.dial_code\r\n                            x.phone = data.phone\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n    }\r\n\r\n}","import { Store, useStore } from './Store'\r\n\r\nexport class ColourItem {\r\n  id: String\r\n  selected: boolean\r\n  colour: String\r\n  constructor(o: { id: String; selected: boolean; colour: String }) {\r\n    this.id = o.id\r\n    this.selected = o.selected\r\n    this.colour = o.colour\r\n  }\r\n}\r\nexport class ColourObjItem {\r\n  color_1: String\r\n  color_2: String\r\n  color_3: String\r\n  color_4: String\r\n  color_5: String\r\n  color_6: String\r\n  color_7: String\r\n  color_8: String\r\n  color_9: String\r\n  color_10: String\r\n  color_11: String\r\n  color_12: String\r\n  color_13: String\r\n  color_14: String\r\n  color_15: String\r\n  color_16: String\r\n  color_17: String\r\n  color_18: String\r\n  color_19: String\r\n  color_20: String\r\n  color_21: String\r\n  color_22: String\r\n  color_23: String\r\n  color_24: String\r\n  color_25: String\r\n  color_26: String\r\n  color_27: String\r\n\r\n  constructor(o: {\r\n    color_1: String\r\n    color_2: String\r\n    color_3: String\r\n    color_4: String\r\n    color_5: String\r\n    color_6: String\r\n    color_7: String\r\n    color_8: String\r\n    color_9: String\r\n    color_10: String\r\n    color_11: String\r\n    color_12: String\r\n    color_13: String\r\n    color_14: String\r\n    color_15: String\r\n    color_16: String\r\n    color_17: String\r\n    color_18: String\r\n    color_19: String\r\n    color_20: String\r\n    color_21: String\r\n    color_22: String\r\n    color_23: String\r\n    color_24: String\r\n    color_25: String\r\n    color_26: String\r\n    color_27: String\r\n\r\n  }) {\r\n    this.color_1 = o.color_1\r\n    this.color_2 = o.color_2\r\n    this.color_3 = o.color_3\r\n    this.color_4 = o.color_4\r\n    this.color_5 = o.color_5\r\n    this.color_6 = o.color_6\r\n    this.color_7 = o.color_7\r\n    this.color_8 = o.color_8\r\n    this.color_9 = o.color_9\r\n    this.color_10 = o.color_10\r\n    this.color_11 = o.color_11\r\n    this.color_12 = o.color_12\r\n    this.color_13 = o.color_13\r\n    this.color_14 = o.color_14\r\n    this.color_15 = o.color_15\r\n    this.color_16 = o.color_16\r\n    this.color_17 = o.color_17\r\n    this.color_18 = o.color_18\r\n    this.color_19 = o.color_19\r\n    this.color_20 = o.color_20\r\n    this.color_21 = o.color_21\r\n    this.color_22 = o.color_22\r\n    this.color_23 = o.color_23\r\n    this.color_24 = o.color_24\r\n    this.color_25 = o.color_25\r\n    this.color_26 = o.color_26\r\n    this.color_27 = o.color_27\r\n  }\r\n}\r\n\r\nexport const ColourObjects = new Store<ColourItem[] | false>(false)\r\nexport const ColObj = new Store<ColourObjItem | false>(false)\r\n\r\nexport const ColourObject = () => {\r\n  const [Colour, setColour] = useStore(ColourObjects)\r\n  const [colourObj, setcolourObj] = useStore(ColObj)\r\n  return {\r\n    Colour,\r\n    setColour,\r\n    colourObj,\r\n    setcolourObj,\r\n    async loadColour() {\r\n      setColour([\r\n        {\r\n          id: '--color_1',\r\n          selected: true,\r\n          colour: '#154360',\r\n        },\r\n        {\r\n          id: '--color_2',\r\n          selected: true,\r\n          colour: '#01003c',\r\n        },\r\n        {\r\n          id: '--color_3',\r\n          selected: true,\r\n          colour: '#ff0000',\r\n        },\r\n        {\r\n          id: '--color_4',\r\n          selected: true,\r\n          colour: '#242446',\r\n        },\r\n        {\r\n          id: '--color_5',\r\n          selected: true,\r\n          colour: '#ffffff',\r\n        },\r\n        {\r\n          id: '--color_6',\r\n          selected: true,\r\n          colour: '#00000019',\r\n        },\r\n        {\r\n          id: '--color_7',\r\n          selected: true,\r\n          colour: '#60ce80',\r\n        },\r\n        {\r\n          id: '--color_8',\r\n          selected: true,\r\n          colour: '#fcfeff',\r\n        },\r\n        {\r\n          id: '--color_9',\r\n          selected: true,\r\n          colour: '#eac952',\r\n        },\r\n        {\r\n          id: '--color_10',\r\n          selected: true,\r\n          colour: '#60ce80',\r\n        },\r\n        {\r\n          id: '--color_11',\r\n          selected: true,\r\n          colour: '#dc0000',\r\n        },\r\n        {\r\n          id: '--color_12',\r\n          selected: true,\r\n          colour: '#efecec',\r\n        },\r\n        {\r\n          id: '--color_13',\r\n          selected: true,\r\n          colour: '#00008b',\r\n        },\r\n        {\r\n          id: '--color_14',\r\n          selected: true,\r\n          colour: '#449698',\r\n        },\r\n        {\r\n          id: '--color_15',\r\n          selected: true,\r\n          colour: '#ddd',\r\n        },\r\n        {\r\n          id: '--color_16',\r\n          selected: true,\r\n          colour: '#378587',\r\n        },\r\n        {\r\n          id: '--color_17',\r\n          selected: true,\r\n          colour: '#639A4D',\r\n        },\r\n        {\r\n          id: '--color_18',\r\n          selected: true,\r\n          colour: '#fc595a',\r\n        },\r\n        {\r\n          id: '--color_19',\r\n          selected: true,\r\n          colour: '#4fb5ff',\r\n        },\r\n        {\r\n          id: '--color_20',\r\n          selected: true,\r\n          colour: '#dcfd47',\r\n        },\r\n        {\r\n          id: '--color_21',\r\n          selected: true,\r\n          colour: '#000000',\r\n        },\r\n        {\r\n          id: '--color_22',\r\n          selected: true,\r\n          colour: '#e06a6a19',\r\n        },\r\n        {\r\n          id: '--color_23',\r\n          selected: true,\r\n          colour: '#acfc91c2',\r\n        },\r\n        {\r\n          id: '--color_24',\r\n          selected: true,\r\n          colour: '#e0e0e0',\r\n        },\r\n        {\r\n          id: '--color_25',\r\n          selected: true,\r\n          colour: '#757588',\r\n        },\r\n        {\r\n          id: '--color_26',\r\n          selected: true,\r\n          colour: '#999',\r\n        },\r\n        {\r\n          id: '--color_27',\r\n          selected: true,\r\n          colour: '#000000a4',\r\n        },\r\n      ])\r\n      setcolourObj({\r\n        color_1: '#154360',\r\n        color_2: '#01003c',\r\n        color_3: '#ff0000',\r\n        color_4: '#242446',\r\n        color_5: '#ffffff',\r\n        color_6: '#00000019',\r\n        color_7: '#60ce80',\r\n        color_8: '#fcfeff',\r\n        color_9: '#eac952',\r\n        color_10: '#60ce80',\r\n        color_11: '#dc0000',\r\n        color_12: '#efecec',\r\n        color_13: '#00008b',\r\n        color_14: '#449698',\r\n        color_15: '#ddd',\r\n        color_16: '#378587',\r\n        color_17: '#639A4D',\r\n        color_18: '#fc595a',\r\n        color_19: '#4fb5ff',\r\n        color_20: '#dcfd47',\r\n        color_21: '#000000',\r\n        color_22: '#e06a6a19',\r\n        color_23: '#acfc91c2',\r\n        color_24: '#e0e0e0',\r\n        color_25: '#757588',\r\n        color_26: '#999',\r\n        color_27: '#000000a4',\r\n      })\r\n    },\r\n  }\r\n}\r\n"],"sourceRoot":""}