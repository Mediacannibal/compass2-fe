{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","hidden","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","enumerable","version","unregister","ArcElement","chartX","chartY","rAdjust","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","numberOrZero","param","logarithmic","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","file":"10.f6da8c4dd7fd40f5930b.js","sourcesContent":["/*!\n * Chart.js v3.5.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}