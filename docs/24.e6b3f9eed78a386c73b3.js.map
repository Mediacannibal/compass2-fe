{"version":3,"sources":["webpack:///./src/assets/Clean Walk/Loading_Screen/Search.logo.small.jpg.png","webpack:///./src/assets/Clean Walk/Levels_Screen/BG_top.svg","webpack:///./src/assets/Clean Walk/google.svg","webpack:///./src/assets/Clean Walk/facebook.svg","webpack:///./src/assets/images/Levels_Screen/share icon.svg","webpack:///./src/assets/images/Levels_Screen/settings icon.svg","webpack:///./src/assets/images/Levels_Screen/save icon.svg","webpack:///./src/assets/Clean Walk/instagram.png","webpack:///./src/assets/Clean Walk/Audio_icon_ON.png","webpack:///./src/assets/Clean Walk/Audio_icon.png","webpack:///./src/assets/Clean Walk/Vibration Icon_ON.png","webpack:///./src/assets/Clean Walk/Vibration Icon.png","webpack:///./src/assets/Clean Walk/clear.png","webpack:///./node_modules/react-countdown-hook/dist/index.module.js","webpack:///./src/assets/Clean Walk/csv.svg","webpack:///./src/assets/Clean Walk/download.svg","webpack:///./src/assets/Clean Walk/reload.svg","webpack:///./src/components/AnalyticsReport/App.css?6c79","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_01.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_02.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_03.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_06.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_05.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_04.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_07.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_08.png","webpack:///./src/assets/Clean Walk/Clues/Clue_lev_09.png","webpack:///./src/assets/Clean Walk/Clues/Clue_tick.png","webpack:///./src/assets/up_down.svg","webpack:///./src/components/AnalyticsReport/App.css","webpack:///./src/components/AnalyticsReport/Dashboard/style.css","webpack:///./src/components/AnalyticsReport/Dashboard/styles.js","webpack:///./src/components/AnalyticsReport/Dashboard/datepicker.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReportingApi/queryReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/utils.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReportingApi/queryReport2.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/dayVisitsReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/countriesReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/pageviewReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/sourceReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/browsersReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/devicesReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReportingApi/realtime_queryReport.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/dayVisitsReport_realtime.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReportingApi/queryReport3.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/visual_usertype_report.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/visual_daysince_lastsession.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/visual_users_location.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/userdataReports.tsx","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/visual_devicedata_report.js","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/devicedataReports.tsx","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/webPerformanceReport.tsx","webpack:///./src/components/AnalyticsReport/Dashboard/AnalyticsReports/trafficAnalysisReport.tsx","webpack:///./src/components/AnalyticsReport/Dashboard/style.css?8c2c","webpack:///./src/components/AnalyticsReport/Dashboard/dashboard.tsx","webpack:///./src/assets/images/favicon.png","webpack:///./src/assets/trash.svg","webpack:///./src/assets/add.svg","webpack:///./src/assets/edit.png","webpack:///./src/assets/star.png","webpack:///./src/assets/down.png","webpack:///./src/assets/up.png","webpack:///./src/assets/eye-visibility.svg","webpack:///./src/assets/eye-invisible.svg"],"names":["module","exports","t","r","n","useState","u","c","a","useRef","i","e","current","started","lastInterval","Math","min","timeLeft","Infinity","timeToCount","requestId","window","requestAnimationFrame","o","useCallback","cancelAnimationFrame","s","l","m","d","useMemo","start","pause","resume","reset","useEffect","options","locals","___CSS_LOADER_EXPORT___","push","ChartWrapper","styled","div","PieChartWrapper","StyledTable","table","colors","ChartTitle","h2","Subtitle","h3","ReportWrapper","LastRow","DatepickerRow","DatepickerWrapper","DatepickerLabel","label","CustomDatePicker","props","placeholder","selected","date","onChange","handleDateChange","maxDate","Date","dateFormat","className","queryReport","viewID","startDate","endDate","metrics","dimensions","orderBy","filter","gapi","client","request","path","root","method","headers","JSON","parse","String","localStorage","getItem","body","reportRequests","viewId","filtersExpression","dateRanges","format","result","forEach","item","name","requestDimensions","orderBys","fieldName","sortOrder","order","formatDate","string","substring","transformToDate","queryReport2","expression","DayVisitsReport","labels","values","reportData","setReportData","addDays","setStartDate","setEndDate","average","setAverage","data","datasets","title","fill","lineTension","borderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","metric","setTimeout","then","resp","response","queryResult","reports","rows","total","totals","parseInt","rowCount","row","displayResults","error","console","scales","yAxes","ticks","suggestedMin","xAxes","autoSkip","maxTicksLimit","maintainAspectRatio","legend","display","plugins","datalabels","font","size","width","height","CountriesReport","totalCoutries","setTotalCountries","totalUsers","setTotalUsers","backgroundColor","tooltips","callbacks","tooltipItem","color","formatter","value","context","length","bgColors","idx","PageviewsReport","totalPages","setTotalPages","newReportData","tempObj","views","perc","parseFloat","toFixed","map","id","key","SourceReport","totalSources","setTotalSources","transformedData","datesArray","source","visits","transformAPIData","groupedBySource","reduce","Object","create","groupDataBySource","keys","dataForChart","sumedVisits","sort","b","datesFormatted","uniqueDates","Set","datasetsArray","find","createDataForChart","entries","sumOfVisits","sortSourcesByTotalVisits","displayColors","mode","stacked","gridLines","beginAtZero","type","position","BrowsersReport","DevicesReport","realtime_queryReport","DayVisitsReport_realtime","metriheaders","setmetriheaders","dimensionheaders","setdimensionheaders","listItems","setlistItems","setmetriheaders2","dimensionheaders2","setdimensionheaders2","listItems2","setlistItems2","setmetriheaders3","dimensionheaders3","setdimensionheaders3","listItems3","setlistItems3","dimensionHeaders","metricHeaders","renderHeader","element","renderBody2","dimensionValues","obj","Card","card_title","card_body","onClick","log","metricValues","queryReport3","Visual_usertype_report","dimension","Visual_daysince_lastsession","Visual_users_location","UserdataReports","metriheaders4","setmetriheaders4","dimensionheaders4","setdimensionheaders4","data4","setData4","metriheaders6","setmetriheaders6","dimensionheaders6","setdimensionheaders6","data6","setData6","metriheaders7","dimensionheaders7","data7","metriheaders8","setmetriheaders8","dimensionheaders8","setdimensionheaders8","data8","setData8","request4","columnHeader","metricHeader","metricHeaderEntries","request6","request8","renderHeader2","renderHeader3","renderBody3","Visual_devicedata_report","DevicedataReports","metriheaders2","data2","setData2","metriheaders3","data3","setData3","request2","request3","WebPerformanceReport","setData","TrafficAnalysisReport","metriheaders5","dimensionheaders5","data5","DashBoard","activetab","setactivetab","active","setActive","handleClick","index","target"],"mappings":"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","file":"24.e6b3f9eed78a386c73b3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"529f2f9cbed9cc2fe9621242cd21c7d4.png\";","module.exports = __webpack_public_path__ + \"2b14942022269d0439e13eccd0bac564.svg\";","module.exports = __webpack_public_path__ + \"3fb6926972efb0a74caa4003f5e2d7ed.svg\";","module.exports = __webpack_public_path__ + \"fcab5557f585bccbdc64fee0b5d0a18d.svg\";","module.exports = __webpack_public_path__ + \"f382bced3d3cc0b8eafcd815edee8673.svg\";","module.exports = __webpack_public_path__ + \"0af4803da61c5ca683882a379cdb30a3.svg\";","module.exports = __webpack_public_path__ + \"699ac5002ca1d3b6d00e27878a746299.svg\";","module.exports = __webpack_public_path__ + \"8290266a5fb402a34b96f890bbdb2d60.png\";","module.exports = __webpack_public_path__ + \"1b5245f0e2c46c8a145524ce870c76b9.png\";","module.exports = __webpack_public_path__ + \"f495f5e0a7dfc701f263e6f81aa35c47.png\";","module.exports = __webpack_public_path__ + \"3f995dc615f2c7b66ab71e4987246b82.png\";","module.exports = __webpack_public_path__ + \"a5fc53e453ca043f41325f1f270cf192.png\";","module.exports = __webpack_public_path__ + \"dd37bdfb57d5f8780757336f15c23019.png\";","import e from\"react\";export default function(t,r){void 0===t&&(t=6e4),void 0===r&&(r=1e3);var n=e.useState(0),u=n[0],c=n[1],a=e.useRef({}),i=function e(t){a.current.started||(a.current.started=t,a.current.lastInterval=t);var n=Math.min(r,a.current.timeLeft||Infinity);t-a.current.lastInterval>=n&&(a.current.lastInterval+=n,c(function(e){return a.current.timeLeft=e-n,a.current.timeLeft})),t-a.current.started<a.current.timeToCount?a.current.requestId=window.requestAnimationFrame(e):(a.current={},c(0))},o=e.useCallback(function(e){window.cancelAnimationFrame(a.current.requestId);var r=void 0!==e?e:t;a.current.started=null,a.current.lastInterval=null,a.current.timeToCount=r,a.current.requestId=window.requestAnimationFrame(i),c(r)},[]),s=e.useCallback(function(){window.cancelAnimationFrame(a.current.requestId),a.current.started=null,a.current.lastInterval=null,a.current.timeToCount=a.current.timeLeft},[]),l=e.useCallback(function(){!a.current.started&&a.current.timeLeft>0&&(window.cancelAnimationFrame(a.current.requestId),a.current.requestId=window.requestAnimationFrame(i))},[]),m=e.useCallback(function(){a.current.timeLeft&&(window.cancelAnimationFrame(a.current.requestId),a.current={},c(0))},[]),d=e.useMemo(function(){return{start:o,pause:s,resume:l,reset:m}},[]);return e.useEffect(function(){return m},[]),[u,d]}\n//# sourceMappingURL=index.module.js.map\n","module.exports = __webpack_public_path__ + \"b7806be58176555416d337122b5a55f0.svg\";","module.exports = __webpack_public_path__ + \"f7d264bcbf3016c01720964bbb0b0205.svg\";","module.exports = __webpack_public_path__ + \"956633b0e885df9db3a39aae6cebafd1.svg\";","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./App.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","module.exports = __webpack_public_path__ + \"b01d42ba9f91724e0a80935a2955b1d9.png\";","module.exports = __webpack_public_path__ + \"24725d235b7de9f6db9297eeda01461e.png\";","module.exports = __webpack_public_path__ + \"65ae5273bb0ff8d6758d4d106c0b965d.png\";","module.exports = __webpack_public_path__ + \"5aaecd30e753e5810735c5216d9d0a8d.png\";","module.exports = __webpack_public_path__ + \"9bf8c71c50fa608dacc65a68b7554fcf.png\";","module.exports = __webpack_public_path__ + \"bdc8c1cce5c62e5b2e3d12961dd2f3c4.png\";","module.exports = __webpack_public_path__ + \"e9a977b0307abac6b6b112b7f28cb9fe.png\";","module.exports = __webpack_public_path__ + \"2da2805f67e69ff750984d33aec2ddbe.png\";","module.exports = __webpack_public_path__ + \"c2ce47eca6bd5619f2b9e2c7fe4a1801.png\";","module.exports = __webpack_public_path__ + \"47350838ed4dd53e72c53c1083e69766.png\";","module.exports = __webpack_public_path__ + \"233bb7462ce0aee126012bdedcd97ca7.svg\";","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".App {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.tabelheading {\\r\\n  font-weight: bold;\\r\\n  text-decoration: underline;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/AnalyticsReport/App.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,0BAA0B;AAC5B\",\"sourcesContent\":[\".App {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.tabelheading {\\r\\n  font-weight: bold;\\r\\n  text-decoration: underline;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".results_container {\\r\\n    background-color: var(--color_12);\\r\\n    color: var(--color_5);\\r\\n    border-color: var(--color_1);\\r\\n    border-width: calc(0.1vw + 0.3vh + 0.1vmin);\\r\\n    border-style: solid;\\r\\n    border-radius: 2vw;\\r\\n    width: calc(60vw + 20vh + 20vmin);\\r\\n    margin: 6vh 0;\\r\\n}\\r\\n\\r\\n.tab_day_night {\\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n    font-size: var(--TS2);\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.tab_active {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_5);\\r\\n    text-decoration: underline;\\r\\n    text-decoration-color: var(--color_1);\\r\\n    text-underline-offset: 0.6vw;\\r\\n}\\r\\n\\r\\n.tab_inactive {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_6);\\r\\n    ;\\r\\n    font-size: var(--TS4);\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\n.result_tab {\\r\\n    margin: 5vh 0;\\r\\n}\\r\\n\\r\\n.tab_day_night2 {\\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n    font-size: var(--TS4);\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.tab_active2 {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_5);\\r\\n    text-decoration: underline;\\r\\n    text-decoration-color: var(--color_1);\\r\\n    text-underline-offset: 0.6vw;\\r\\n}\\r\\n\\r\\n.tab_inactive2 {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_6);\\r\\n    font-size: var(--TS4);\\r\\n    align-self: center;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/AnalyticsReport/Dashboard/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,iCAAiC;IACjC,qBAAqB;IACrB,4BAA4B;IAC5B,2CAA2C;IAC3C,mBAAmB;IACnB,kBAAkB;IAClB,iCAAiC;IACjC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,UAAU;IACV,qBAAqB;IACrB,0BAA0B;IAC1B,qCAAqC;IACrC,4BAA4B;AAChC;;AAEA;IACI,cAAc;IACd,UAAU;IACV,qBAAqB;;IAErB,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,UAAU;IACV,qBAAqB;IACrB,0BAA0B;IAC1B,qCAAqC;IACrC,4BAA4B;AAChC;;AAEA;IACI,cAAc;IACd,UAAU;IACV,qBAAqB;IACrB,qBAAqB;IACrB,kBAAkB;AACtB\",\"sourcesContent\":[\".results_container {\\r\\n    background-color: var(--color_12);\\r\\n    color: var(--color_5);\\r\\n    border-color: var(--color_1);\\r\\n    border-width: calc(0.1vw + 0.3vh + 0.1vmin);\\r\\n    border-style: solid;\\r\\n    border-radius: 2vw;\\r\\n    width: calc(60vw + 20vh + 20vmin);\\r\\n    margin: 6vh 0;\\r\\n}\\r\\n\\r\\n.tab_day_night {\\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n    font-size: var(--TS2);\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.tab_active {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_5);\\r\\n    text-decoration: underline;\\r\\n    text-decoration-color: var(--color_1);\\r\\n    text-underline-offset: 0.6vw;\\r\\n}\\r\\n\\r\\n.tab_inactive {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_6);\\r\\n    ;\\r\\n    font-size: var(--TS4);\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\n.result_tab {\\r\\n    margin: 5vh 0;\\r\\n}\\r\\n\\r\\n.tab_day_night2 {\\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n    font-size: var(--TS4);\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.tab_active2 {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_5);\\r\\n    text-decoration: underline;\\r\\n    text-decoration-color: var(--color_1);\\r\\n    text-underline-offset: 0.6vw;\\r\\n}\\r\\n\\r\\n.tab_inactive2 {\\r\\n    padding: 3vh 0;\\r\\n    width: 50%;\\r\\n    color: var(--color_6);\\r\\n    font-size: var(--TS4);\\r\\n    align-self: center;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import styled from \"styled-components\";\r\n\r\nexport const ChartWrapper = styled.div`\r\n  width: 80vw;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const PieChartWrapper = styled.div`\r\n  width: 48vw;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const StyledTable = styled.table`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  border-collapse: collapse;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n\r\n  th {\r\n    background: black;\r\n    color: white;\r\n  }\r\n\r\n  .left-align {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const colors = [\r\n  \"#fcba03\",\r\n  \"#fa8c5c\",\r\n  \"#9fc934\",\r\n  \"#60d17e\",\r\n  \"#45afed\",\r\n  \"#7c5cdb\",\r\n  \"#ce5cdb\",\r\n  \"#db5c97\",\r\n];\r\n\r\nexport const ChartTitle = styled.h2`\r\n  color: #4b2f57;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const Subtitle = styled.h3`\r\n  color: #35213d;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport const ReportWrapper = styled.div`\r\n  padding: 40px 0;\r\n  border-bottom: 1px solid #f0eee9;\r\n`;\r\n\r\nexport const LastRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const DatepickerRow = styled.div`\r\n  width: 60vw;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const DatepickerWrapper = styled.div`\r\n  color: #35213d;\r\n  font-weight: 500;\r\n  .picker {\r\n    width: fit-content;\r\n    border-color: #a2c1f2;\r\n    border-radius: 10px;\r\n    background-color: #d3dded;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    font-size: 1rem;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const DatepickerLabel = styled.label`\r\n  padding-right: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DatepickerLabel, DatepickerWrapper } from \"./styles\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst CustomDatePicker = (props) => {\r\n  return (\r\n    <DatepickerWrapper>\r\n      <DatepickerLabel>{props.placeholder}</DatepickerLabel>\r\n      <DatePicker\r\n        selected={props.date}\r\n        onChange={props.handleDateChange}\r\n        maxDate={new Date()}\r\n        dateFormat=\"MMM dd, yyyy\"\r\n        className=\"picker\"\r\n      />\r\n    </DatepickerWrapper>\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","import { format } from \"date-fns\";\r\nexport const queryReport = (props) => {\r\n  const {\r\n    viewID,\r\n    startDate,\r\n    endDate,\r\n    metrics,\r\n    dimensions,\r\n    orderBy,\r\n    filter,\r\n  } = props;\r\n\r\n  const requestDimensions = (dimensions) => {\r\n    let result = [];\r\n    dimensions.forEach((item) => {\r\n      result.push({\r\n        name: item,\r\n      });\r\n    });\r\n    return result;\r\n  };\r\n  return window.gapi.client.request({\r\n    path: \"/v4/reports:batchGet\",\r\n    root: \"https://analyticsreporting.googleapis.com/\",\r\n    method: \"POST\",\r\n    headers: {\r\n      'Authorization': `Bearer ${JSON.parse(String(localStorage.getItem(\"Bearer\")))}`,\r\n    },\r\n    body: {\r\n      reportRequests: [\r\n        {\r\n          viewId: viewID,\r\n          filtersExpression: filter,\r\n          dateRanges: [\r\n            {\r\n              startDate: format(new Date(startDate), \"yyyy-MM-dd\"),\r\n              endDate: format(new Date(endDate), \"yyyy-MM-dd\"),\r\n            },\r\n          ],\r\n          metrics: metrics,\r\n          dimensions: requestDimensions(dimensions),\r\n          orderBys: orderBy\r\n            ? [\r\n              {\r\n                fieldName: orderBy.fieldName,\r\n                sortOrder: orderBy.order,\r\n              },\r\n            ]\r\n            : [],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n};\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatDate = (string) => {\r\n  return format(\r\n    new Date(\r\n      string.substring(0, 4),\r\n      string.substring(4, 6) - 1,\r\n      string.substring(6, 8)\r\n    ),\r\n    \"MMM. d, yyyy\"\r\n  );\r\n};\r\n\r\nexport const transformToDate = (string) => {\r\n  return new Date(\r\n    string.substring(0, 4),\r\n    string.substring(4, 6) - 1,\r\n    string.substring(6, 8)\r\n  );\r\n};\r\n","import { format } from \"date-fns\";\r\n\r\nexport const queryReport2 = (props) => {\r\n  const {\r\n    viewID,\r\n    startDate,\r\n    endDate,\r\n    metrics,\r\n    dimensions,\r\n    orderBy,\r\n    filter,\r\n  } = props;\r\n\r\n  const requestDimensions = (dimensions) => {\r\n    let result = [];\r\n    dimensions.forEach((item) => {\r\n      result.push({\r\n        name: item,\r\n      });\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return window.gapi.client.request({\r\n    path: \"/v4/reports:batchGet\",\r\n    root: \"https://analyticsreporting.googleapis.com/\",\r\n    method: \"POST\",\r\n    headers: {\r\n      'Authorization': `Bearer ${JSON.parse(String(localStorage.getItem(\"Bearer\")))}`,\r\n    },\r\n    body: {\r\n      reportRequests: [\r\n        {\r\n          viewId: viewID,\r\n          filtersExpression: filter,\r\n          dateRanges: [\r\n            {\r\n              startDate: format(new Date(startDate), \"yyyy-MM-dd\"),\r\n              endDate: format(new Date(endDate), \"yyyy-MM-dd\"),\r\n            },\r\n          ],\r\n          metrics: [\r\n            {\r\n              expression: metrics,\r\n            },\r\n          ],\r\n          dimensions: requestDimensions(dimensions),\r\n          orderBys: orderBy\r\n            ? [\r\n              {\r\n                fieldName: orderBy.fieldName,\r\n                sortOrder: orderBy.order,\r\n              },\r\n            ]\r\n            : [],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { addDays } from \"date-fns\";\r\nimport {\r\n  ChartWrapper,\r\n  ReportWrapper,\r\n  ChartTitle,\r\n  Subtitle,\r\n  DatepickerRow,\r\n} from \"../styles\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { formatDate } from \"../utils\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\n\r\nconst DayVisitsReport = (props) => {\r\n\r\n\r\n  const [metrics, setmetrics] = useState('ga:users')\r\n\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    values: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [average, setAverage] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    const total = response.result.reports[0].data.totals[0].values[0];\r\n    setAverage(parseInt(total / response.result.reports[0].data.rowCount));\r\n    let labels = [];\r\n    let values = [];\r\n    queryResult.forEach((row) => {\r\n      labels.push(formatDate(row.dimensions[0]));\r\n      values.push(row.metrics[0].values[0]);\r\n    });\r\n    setReportData({\r\n      ...reportData,\r\n      labels,\r\n      values,\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: [\r\n      {\r\n        label: `${props.title} per day`,\r\n        fill: false,\r\n        lineTension: 0.3,\r\n        borderColor: \"#35213d\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#375751\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: reportData.values,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            suggestedMin: 0,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            autoSkip: true,\r\n            maxTicksLimit: 7,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    plugins: {\r\n      datalabels: {\r\n        font: {\r\n          size: 0,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // let token = JSON.parse(String(localStorage.getItem(\"Bearer\")))\r\n    // queryReport1(async (data) => {\r\n    //   displayResults(data)\r\n    //   console.log(\"++++++comon++++++\", data.data)\r\n    // }, token, metrics)\r\n\r\n    const request = {\r\n      viewID: props.viewID,\r\n      startDate,\r\n      endDate,\r\n      metrics: props.metric,\r\n      dimensions: [\"ga:date\"],\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport2(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      5500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <ReportWrapper>\r\n      <ChartTitle>{`${props.title} per day`}</ChartTitle>\r\n      <Subtitle>{`Average - ${average} ${props.title}`}</Subtitle>\r\n      <DatepickerRow>\r\n        <CustomDatePicker\r\n          placeholder={\"Start date\"}\r\n          date={startDate}\r\n          handleDateChange={(date) => setStartDate(date)}\r\n        />\r\n        <CustomDatePicker\r\n          placeholder={\"End date\"}\r\n          date={endDate}\r\n          handleDateChange={(date) => setEndDate(date)}\r\n        />\r\n      </DatepickerRow>\r\n      {reportData && (\r\n        <ChartWrapper>\r\n          <Line data={data} options={options} width={100} height={250} />\r\n        </ChartWrapper>\r\n      )}\r\n    </ReportWrapper>\r\n  );\r\n};\r\n\r\nexport default DayVisitsReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { PieChartWrapper, colors } from \"../styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { ChartTitle, ReportWrapper, Subtitle, DatepickerRow } from \"../styles\";\r\n\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\n\r\nconst CountriesReport = (props) => {\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    values: [],\r\n    colors: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalCoutries, setTotalCountries] = useState(0);\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    setTotalUsers(response.result.reports[0].data.totals[0].values[0]);\r\n    setTotalCountries(queryResult.length);\r\n    let labels = [];\r\n    let values = [];\r\n    let bgColors = [];\r\n    queryResult.forEach((row, idx) => {\r\n      if (idx < 5) {\r\n        labels.push(row.dimensions[0]);\r\n        values.push(row.metrics[0].values[0]);\r\n        bgColors.push(colors[idx + 1]);\r\n      }\r\n    });\r\n    setReportData({\r\n      ...reportData,\r\n      labels,\r\n      values,\r\n      colors: bgColors,\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: [\r\n      {\r\n        data: reportData.values,\r\n        backgroundColor: reportData.colors,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return data.labels[tooltipItem[\"index\"]];\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      datalabels: {\r\n        color: \"black\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        formatter: function (value, context) {\r\n          const perc = parseInt((value / totalUsers) * 100);\r\n          return perc + \"%\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: props.viewID,\r\n      startDate,\r\n      endDate,\r\n      metrics: \"ga:users\",\r\n      dimensions: [\"ga:country\"],\r\n      orderBy: {\r\n        fieldName: \"ga:users\",\r\n        order: \"DESCENDING\",\r\n      },\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport2(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      5500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <ReportWrapper>\r\n      <ChartTitle>Top 5 Countries by Users</ChartTitle>\r\n      <Subtitle>{`Total countries - ${totalCoutries}`}</Subtitle>\r\n      <DatepickerRow>\r\n        <CustomDatePicker\r\n          placeholder={\"Start date\"}\r\n          date={startDate}\r\n          handleDateChange={(date) => setStartDate(date)}\r\n        />\r\n        <CustomDatePicker\r\n          placeholder={\"End date\"}\r\n          date={endDate}\r\n          handleDateChange={(date) => setEndDate(date)}\r\n        />\r\n      </DatepickerRow>\r\n      {reportData && (\r\n        <PieChartWrapper>\r\n          <Pie data={data} options={options} />\r\n        </PieChartWrapper>\r\n      )}\r\n    </ReportWrapper>\r\n  );\r\n};\r\n\r\nexport default CountriesReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport {\r\n  ChartTitle,\r\n  ReportWrapper,\r\n  Subtitle,\r\n  DatepickerRow,\r\n  StyledTable,\r\n} from \"../styles\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\n\r\nconst PageviewsReport = (props) => {\r\n  const [reportData, setReportData] = useState([]);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    setTotalPages(queryResult.length);\r\n    const total = response.result.reports[0].data.totals[0].values[0];\r\n    let newReportData = [];\r\n    queryResult.forEach((row, idx) => {\r\n      if (idx < 10) {\r\n        let tempObj = {\r\n          path: row.dimensions[0],\r\n          views: row.metrics[0].values[0],\r\n          perc: `${parseFloat((row.metrics[0].values[0] / total) * 100).toFixed(\r\n            1\r\n          )}%`,\r\n        };\r\n        newReportData.push(tempObj);\r\n      }\r\n    });\r\n    setReportData(newReportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: props.viewID,\r\n      startDate,\r\n      endDate,\r\n      metrics: \"ga:pageviews\",\r\n      dimensions: [\"ga:pagePath\"],\r\n      orderBy: {\r\n        fieldName: \"ga:pageViews\",\r\n        order: \"DESCENDING\",\r\n      },\r\n      filter: \"ga:pagePath!@localhost/\",\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport2(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      9500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <ReportWrapper>\r\n      <ChartTitle>Top 10 Pages by Views</ChartTitle>\r\n      <Subtitle>{`Total pages - ${totalPages}`}</Subtitle>\r\n      <DatepickerRow>\r\n        <CustomDatePicker\r\n          placeholder={\"Start date\"}\r\n          date={startDate}\r\n          handleDateChange={(date) => setStartDate(date)}\r\n        />\r\n        <CustomDatePicker\r\n          placeholder={\"End date\"}\r\n          date={endDate}\r\n          handleDateChange={(date) => setEndDate(date)}\r\n        />\r\n      </DatepickerRow>\r\n      {reportData.length && (\r\n        <StyledTable>\r\n          <thead>\r\n            <tr>\r\n              <th>Page</th>\r\n              <th>Views</th>\r\n              <th>%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {reportData.map((row, id) => (\r\n              <tr key={id}>\r\n                <td className=\"left-align\">{row.path}</td>\r\n                <td>{row.views}</td>\r\n                <td>{row.perc}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </StyledTable>\r\n      )}\r\n    </ReportWrapper>\r\n  );\r\n};\r\n\r\nexport default PageviewsReport;","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { addDays, format } from \"date-fns\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { formatDate, transformToDate } from \"../utils\";\r\nimport {\r\n  ChartTitle,\r\n  ReportWrapper,\r\n  Subtitle,\r\n  DatepickerRow,\r\n  ChartWrapper,\r\n  colors,\r\n} from \"../styles\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\n\r\nconst SourceReport = (props) => {\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    datasets: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalSources, setTotalSources] = useState(0);\r\n\r\n  const transformAPIData = (data) => {\r\n    let transformedData = [];\r\n    let datesArray = [];\r\n    data.forEach((row) => {\r\n      transformedData.push({\r\n        date: formatDate(row.dimensions[1]),\r\n        source: row.dimensions[0],\r\n        visits: row.metrics[0].values[0],\r\n      });\r\n      datesArray.push(transformToDate(row.dimensions[1]));\r\n    });\r\n    return [transformedData, datesArray];\r\n  };\r\n\r\n  const groupDataBySource = (data) => {\r\n    return data.reduce((r, a) => {\r\n      r[a.source] = r[a.source] || [];\r\n      r[a.source].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n  };\r\n\r\n  const sortSourcesByTotalVisits = (data) => {\r\n    let sumedVisits = [];\r\n    for (let [key, value] of Object.entries(data)) {\r\n      const sumOfVisits = value.reduce((a, b) => {\r\n        return a + parseInt(b.visits);\r\n      }, 0);\r\n      sumedVisits.push({\r\n        source: key,\r\n        visits: sumOfVisits,\r\n      });\r\n    }\r\n    return sumedVisits.sort((a, b) => b.visits - a.visits);\r\n  };\r\n\r\n  const createDataForChart = (datesArray, sumedVisits, groupedBySource) => {\r\n    datesArray.sort((a, b) => {\r\n      return new Date(a) - new Date(b);\r\n    });\r\n    const datesFormatted = datesArray.map((date) =>\r\n      format(new Date(date), \"MMM. d, yyyy\")\r\n    );\r\n    const uniqueDates = [...new Set(datesFormatted)];\r\n    let datasetsArray = [];\r\n    let i = 0;\r\n    sumedVisits.forEach((item, id) => {\r\n      if (id < 5) {\r\n        const label = item.source;\r\n        const backgroundColor = colors[i + 3];\r\n        i++;\r\n        let data = [];\r\n        uniqueDates.forEach((date) => {\r\n          const row = groupedBySource[item.source].find(\r\n            (item) => item.date === date\r\n          );\r\n          if (row) {\r\n            data.push(parseInt(row.visits));\r\n          } else {\r\n            data.push(0);\r\n          }\r\n        });\r\n        datasetsArray.push({\r\n          label,\r\n          backgroundColor,\r\n          data,\r\n        });\r\n      }\r\n    });\r\n    return { labels: uniqueDates, data: datasetsArray };\r\n  };\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n\r\n    const data = transformAPIData(queryResult);\r\n    let transformedData = data[0];\r\n    let datesArray = data[1];\r\n\r\n    const groupedBySource = groupDataBySource(transformedData);\r\n    setTotalSources(Object.keys(groupedBySource).length);\r\n\r\n    const sumedVisits = sortSourcesByTotalVisits(groupedBySource);\r\n\r\n    const dataForChart = createDataForChart(\r\n      datesArray,\r\n      sumedVisits,\r\n      groupedBySource\r\n    );\r\n\r\n    setReportData({\r\n      ...reportData,\r\n      labels: dataForChart.labels,\r\n      datasets: dataForChart.data,\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    tooltips: {\r\n      displayColors: true,\r\n      callbacks: {\r\n        mode: \"x\",\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n          type: \"linear\",\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n    legend: { position: \"bottom\" },\r\n    plugins: {\r\n      datalabels: {\r\n        font: {\r\n          size: 0,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: reportData.datasets,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: props.viewID,\r\n      startDate,\r\n      endDate,\r\n      metrics: \"ga:users\",\r\n      dimensions: [\"ga:source\", \"ga:date\"],\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport2(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      5500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <ReportWrapper>\r\n      <ChartTitle>Top 5 Sources of Visits</ChartTitle>\r\n      <Subtitle>{`Total sources - ${totalSources}`}</Subtitle>\r\n      <DatepickerRow>\r\n        <CustomDatePicker\r\n          placeholder={\"Start date\"}\r\n          date={startDate}\r\n          handleDateChange={(date) => setStartDate(date)}\r\n        />\r\n        <CustomDatePicker\r\n          placeholder={\"End date\"}\r\n          date={endDate}\r\n          handleDateChange={(date) => setEndDate(date)}\r\n        />\r\n      </DatepickerRow>\r\n      {reportData && (\r\n        <ChartWrapper>\r\n          <Bar data={data} width={100} height={250} options={options} />\r\n        </ChartWrapper>\r\n      )}\r\n    </ReportWrapper>\r\n  );\r\n};\r\n\r\nexport default SourceReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { ChartTitle, Subtitle, PieChartWrapper, colors } from \"../styles\";\r\n\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\n\r\nconst BrowsersReport = (props) => {\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    values: [],\r\n    colors: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    const total = response.result.reports[0].data.totals[0].values[0];\r\n    setTotalUsers(total);\r\n    let labels = [];\r\n    let values = [];\r\n    let bgColors = [];\r\n    queryResult.forEach((row, id) => {\r\n      labels.push(row.dimensions[0]);\r\n      values.push(row.metrics[0].values[0]);\r\n      bgColors.push(colors[id]);\r\n    });\r\n    setReportData({\r\n      ...reportData,\r\n      labels,\r\n      values,\r\n      colors: bgColors,\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: [\r\n      {\r\n        data: reportData.values,\r\n        backgroundColor: reportData.colors,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: { position: \"bottom\" },\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      datalabels: {\r\n        font: {\r\n          size: 0,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: props.viewID,\r\n      startDate,\r\n      endDate,\r\n      metrics: \"ga:users\",\r\n      dimensions: [\"ga:browser\"],\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport2(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      9500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div>\r\n      <ChartTitle>Browsers by Users</ChartTitle>\r\n      <Subtitle>{`Total Users - ${totalUsers}`}</Subtitle>\r\n      <CustomDatePicker\r\n        placeholder={\"Start date\"}\r\n        date={startDate}\r\n        handleDateChange={(date) => setStartDate(date)}\r\n      />\r\n      <CustomDatePicker\r\n        placeholder={\"End date\"}\r\n        date={endDate}\r\n        handleDateChange={(date) => setEndDate(date)}\r\n      />\r\n      {reportData && (\r\n        <PieChartWrapper>\r\n          <Pie data={data} options={options} width={300} height={300} />\r\n        </PieChartWrapper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrowsersReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { ChartTitle, Subtitle, PieChartWrapper, colors } from \"../styles\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\n\r\nconst DevicesReport = (props) => {\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    values: [],\r\n    colors: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    const total = response.result.reports[0].data.totals[0].values[0];\r\n    setTotalUsers(total);\r\n    let labels = [];\r\n    let values = [];\r\n    let bgColors = [];\r\n    queryResult.forEach((row, id) => {\r\n      labels.push(row.dimensions[0]);\r\n      values.push(row.metrics[0].values[0]);\r\n      bgColors.push(colors[id + 4]);\r\n    });\r\n    setReportData({\r\n      ...reportData,\r\n      labels,\r\n      values,\r\n      colors: bgColors,\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: [\r\n      {\r\n        data: reportData.values,\r\n        backgroundColor: reportData.colors,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: { position: \"bottom\" },\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      datalabels: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: props.viewID,\r\n      startDate,\r\n      endDate,\r\n      metrics: \"ga:users\",\r\n      dimensions: [\"ga:deviceCategory\"],\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport2(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      5500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div>\r\n      <ChartTitle>Devices by Users</ChartTitle>\r\n      <Subtitle>{`Total Users - ${totalUsers}`}</Subtitle>\r\n      <CustomDatePicker\r\n        placeholder={\"Start date\"}\r\n        date={startDate}\r\n        handleDateChange={(date) => setStartDate(date)}\r\n      />\r\n      <CustomDatePicker\r\n        placeholder={\"End date\"}\r\n        date={endDate}\r\n        handleDateChange={(date) => setEndDate(date)}\r\n      />\r\n      {reportData && (\r\n        <PieChartWrapper>\r\n          <Doughnut data={data} options={options} width={300} height={300} />\r\n        </PieChartWrapper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevicesReport;\r\n","import { format } from \"date-fns\";\r\nexport const realtime_queryReport = (props) => {\r\n\r\n  const {\r\n    metrics,\r\n    dimensions,\r\n  } = props;\r\n\r\n  return window.gapi.client.request({\r\n\r\n    path: \"/v1beta/properties/269126937:runRealtimeReport\",\r\n    root: \"https://analyticsdata.googleapis.com/\",\r\n    method: \"POST\",\r\n    headers: {\r\n      'Authorization': `Bearer ${JSON.parse(String(localStorage.getItem(\"Bearer\")))}`,\r\n    },\r\n    body: {\r\n      \"metrics\": metrics,\r\n      \"dimensions\": dimensions\r\n    }\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { addDays } from \"date-fns\";\r\nimport {\r\n  ChartWrapper,\r\n  ReportWrapper,\r\n  ChartTitle,\r\n  Subtitle,\r\n  DatepickerRow,\r\n} from \"../styles\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { realtime_queryReport } from \"../AnalyticsReportingApi/realtime_queryReport\";\r\nimport { formatDate } from \"../utils\";\r\nimport '../../../../components/app.css'\r\nimport Card from '../../../Common/Card';\r\n\r\nconst DayVisitsReport_realtime = (props) => {\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const [metriheaders, setmetriheaders] = useState([])\r\n  const [dimensionheaders, setdimensionheaders] = useState([])\r\n  const [listItems, setlistItems] = useState([])\r\n\r\n  const [metriheaders2, setmetriheaders2] = useState([])\r\n  const [dimensionheaders2, setdimensionheaders2] = useState([])\r\n  const [listItems2, setlistItems2] = useState([])\r\n\r\n  const [metriheaders3, setmetriheaders3] = useState([])\r\n  const [dimensionheaders3, setdimensionheaders3] = useState([])\r\n  const [listItems3, setlistItems3] = useState([])\r\n\r\n\r\n  const displayResults = (response) => {\r\n    // console.log(\"><>????????????\", response.result.dimensionHeaders);\r\n\r\n    setdimensionheaders(response.result.dimensionHeaders)\r\n    setmetriheaders(response.result.metricHeaders)\r\n    setlistItems(response.result.rows)\r\n  };\r\n\r\n  const displayResults2 = (response) => {\r\n    // console.log(\"><>????????????\", response.result.dimensionHeaders);\r\n\r\n    setdimensionheaders2(response.result.dimensionHeaders)\r\n    setmetriheaders2(response.result.metricHeaders)\r\n    setlistItems2(response.result.rows)\r\n  };\r\n\r\n  const displayResults3 = (response) => {\r\n    // console.log(\"><>????????????\", response.result.dimensionHeaders);\r\n\r\n    setdimensionheaders3(response.result.dimensionHeaders)\r\n    setmetriheaders3(response.result.metricHeaders)\r\n    setlistItems3(response.result.rows)\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const request = {\r\n      startDate,\r\n      endDate,\r\n      metrics: [\r\n        {\r\n          \"name\": \"activeUsers\"\r\n        },\r\n        {\r\n          \"name\": \"conversions\"\r\n        },\r\n        {\r\n          \"name\": \"eventCount\"\r\n        },\r\n        {\r\n          \"name\": \"screenPageViews\"\r\n        },\r\n      ],\r\n      dimensions: [\r\n        {\r\n          \"name\": \"city\"\r\n        },\r\n        {\r\n          \"name\": \"cityId\"\r\n        },\r\n        {\r\n          \"name\": \"country\"\r\n        },\r\n        {\r\n          \"name\": \"countryId\"\r\n        },\r\n\r\n      ],\r\n    };\r\n    realtime_queryReport(request)\r\n      .then((resp) => displayResults(resp))\r\n      .catch((error) => console.error(error));\r\n\r\n\r\n    const request2 = {\r\n      startDate,\r\n      endDate,\r\n      metrics: [\r\n        {\r\n          \"name\": \"activeUsers\"\r\n        },\r\n        {\r\n          \"name\": \"conversions\"\r\n        },\r\n        {\r\n          \"name\": \"screenPageViews\"\r\n        },\r\n      ],\r\n      dimensions: [\r\n        {\r\n          \"name\": \"appVersion\"\r\n        },\r\n        {\r\n          \"name\": \"audienceId\"\r\n        },\r\n        {\r\n          \"name\": \"audienceName\"\r\n        },\r\n        {\r\n          \"name\": \"deviceCategory\"\r\n        },\r\n      ],\r\n    };\r\n    realtime_queryReport(request2)\r\n      .then((resp) => displayResults2(resp))\r\n      .catch((error) => console.error(error));\r\n\r\n\r\n    const request3 = {\r\n      startDate,\r\n      endDate,\r\n      metrics: [\r\n        {\r\n          \"name\": \"activeUsers\"\r\n        },\r\n        {\r\n          \"name\": \"conversions\"\r\n        },\r\n        {\r\n          \"name\": \"eventCount\"\r\n        },\r\n        {\r\n          \"name\": \"screenPageViews\"\r\n        },\r\n      ],\r\n      dimensions: [\r\n        {\r\n          \"name\": \"platform\"\r\n        },\r\n        {\r\n          \"name\": \"streamName\"\r\n        },\r\n        {\r\n          \"name\": \"unifiedScreenName\"\r\n        }\r\n      ],\r\n    };\r\n    realtime_queryReport(request3)\r\n      .then((resp) => displayResults3(resp))\r\n      .catch((error) => console.error(error));\r\n\r\n\r\n  }, [startDate, endDate]);\r\n\r\n\r\n  const renderHeader = (element) => {\r\n    // console.log(\"element=====222\", element);\r\n    return (\r\n      <>\r\n        <th>{element.name}</th>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderBody = (element) => {\r\n    // console.log(\"element=====\", element);\r\n    return (\r\n      <tr>\r\n        {element.dimensionValues?.map((obj) => <td>{obj.value}</td>)}\r\n        {element.metricValues?.map((obj) => <td>{obj.value}</td>)}\r\n      </tr >\r\n    )\r\n  }\r\n\r\n\r\n  const renderBody2 = (element) => {\r\n    // console.log(\"element=====\", element);\r\n    return (\r\n      <tr>\r\n        {element.dimensionValues?.map((obj) => <td>{obj.value}</td>)}\r\n      </tr >\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        card_title=\"Active RealTime Users\"\r\n        card_body={\r\n          <div className=\"internal_table\" onClick={() => { console.log(\"hiiiiiiiihelloooo\"); }}>\r\n            <table id='internal_table'>\r\n              <thead>\r\n                <tr>{dimensionheaders?.map(renderHeader)} {metriheaders?.map(renderHeader)} </tr>\r\n              </thead>\r\n              <tbody> {listItems?.map(renderBody)}</tbody>\r\n            </table>\r\n\r\n            <table id='internal_table'>\r\n              <thead>\r\n                <tr>{dimensionheaders2?.map(renderHeader)}</tr>\r\n              </thead>\r\n              <tbody>{listItems2?.map(renderBody2)} </tbody>\r\n            </table>\r\n\r\n            <table id='internal_table'>\r\n              <thead>\r\n                <tr>{dimensionheaders3?.map(renderHeader)}</tr>\r\n              </thead>\r\n              <tbody>{listItems3?.map(renderBody2)} </tbody>\r\n            </table>\r\n          </div>\r\n        }\r\n      />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayVisitsReport_realtime;","import { format } from \"date-fns\";\r\n\r\nexport const queryReport3 = (props) => {\r\n  const {\r\n    viewID,\r\n    startDate,\r\n    endDate,\r\n    metrics,\r\n    dimensions,\r\n    orderBy,\r\n    filter,\r\n  } = props;\r\n\r\n  const requestDimensions = (dimensions) => {\r\n    let result = [];\r\n    dimensions.forEach((item) => {\r\n      result.push({\r\n        name: item,\r\n      });\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return window.gapi.client.request({\r\n    path: \"/v4/reports:batchGet\",\r\n    root: \"https://analyticsreporting.googleapis.com/\",\r\n    method: \"POST\",\r\n    headers: {\r\n      'Authorization': `Bearer ${JSON.parse(String(localStorage.getItem(\"Bearer\")))}`,\r\n    },\r\n    body: {\r\n      reportRequests: [\r\n        {\r\n          viewId: viewID,\r\n          filtersExpression: filter,\r\n          dateRanges: [\r\n            {\r\n              startDate: format(new Date(startDate), \"yyyy-MM-dd\"),\r\n              endDate: format(new Date(endDate), \"yyyy-MM-dd\"),\r\n            },\r\n          ],\r\n          metrics: metrics,\r\n          dimensions: requestDimensions(dimensions),\r\n          orderBys: orderBy\r\n            ? [\r\n              {\r\n                fieldName: orderBy.fieldName,\r\n                sortOrder: orderBy.order,\r\n              },\r\n            ]\r\n            : [],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { addDays, format } from \"date-fns\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { formatDate, transformToDate } from \"../utils\";\r\nimport {\r\n    ChartTitle,\r\n    ReportWrapper,\r\n    Subtitle,\r\n    DatepickerRow,\r\n    ChartWrapper,\r\n    colors,\r\n} from \"../styles\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\nimport { queryReport3 } from \"../AnalyticsReportingApi/queryReport3\";\r\n\r\n\r\nconst Visual_usertype_report = (props) => {\r\n    const INITIAL_STATE = {\r\n        labels: [],\r\n        datasets: [],\r\n    };\r\n    const [reportData, setReportData] = useState(INITIAL_STATE);\r\n    const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [totalSources, setTotalSources] = useState(0);\r\n\r\n    const transformAPIData = (data) => {\r\n        let transformedData = [];\r\n        let datesArray = [];\r\n        data.forEach((row) => {\r\n            transformedData.push({\r\n                date: formatDate(row.dimensions[1]),\r\n                source: row.dimensions[0],\r\n                visits: row.metrics[0].values[0],\r\n            });\r\n            datesArray.push(transformToDate(row.dimensions[1]));\r\n        });\r\n        return [transformedData, datesArray];\r\n    };\r\n\r\n    const groupDataBySource = (data) => {\r\n        return data.reduce((r, a) => {\r\n            r[a.source] = r[a.source] || [];\r\n            r[a.source].push(a);\r\n            return r;\r\n        }, Object.create(null));\r\n    };\r\n\r\n    const sortSourcesByTotalVisits = (data) => {\r\n        let sumedVisits = [];\r\n        for (let [key, value] of Object.entries(data)) {\r\n            const sumOfVisits = value.reduce((a, b) => {\r\n                return a + parseInt(b.visits);\r\n            }, 0);\r\n            sumedVisits.push({\r\n                source: key,\r\n                visits: sumOfVisits,\r\n            });\r\n        }\r\n        return sumedVisits.sort((a, b) => b.visits - a.visits);\r\n    };\r\n\r\n    const createDataForChart = (datesArray, sumedVisits, groupedBySource) => {\r\n        datesArray.sort((a, b) => {\r\n            return new Date(a) - new Date(b);\r\n        });\r\n        const datesFormatted = datesArray.map((date) =>\r\n            format(new Date(date), \"MMM. d, yyyy\")\r\n        );\r\n        const uniqueDates = [...new Set(datesFormatted)];\r\n        let datasetsArray = [];\r\n        let i = 0;\r\n        sumedVisits.forEach((item, id) => {\r\n            if (id < 5) {\r\n                const label = item.source;\r\n                const backgroundColor = colors[i + 3];\r\n                i++;\r\n                let data = [];\r\n                uniqueDates.forEach((date) => {\r\n                    const row = groupedBySource[item.source].find(\r\n                        (item) => item.date === date\r\n                    );\r\n                    if (row) {\r\n                        data.push(parseInt(row.visits));\r\n                    } else {\r\n                        data.push(0);\r\n                    }\r\n                });\r\n                datasetsArray.push({\r\n                    label,\r\n                    backgroundColor,\r\n                    data,\r\n                });\r\n            }\r\n        });\r\n        return { labels: uniqueDates, data: datasetsArray };\r\n    };\r\n\r\n    const displayResults = (response) => {\r\n        const queryResult = response.result.reports[0].data.rows;\r\n\r\n        const data = transformAPIData(queryResult);\r\n        let transformedData = data[0];\r\n        let datesArray = data[1];\r\n\r\n        const groupedBySource = groupDataBySource(transformedData);\r\n        setTotalSources(Object.keys(groupedBySource).length);\r\n\r\n        const sumedVisits = sortSourcesByTotalVisits(groupedBySource);\r\n\r\n        const dataForChart = createDataForChart(\r\n            datesArray,\r\n            sumedVisits,\r\n            groupedBySource\r\n        );\r\n\r\n        setReportData({\r\n            ...reportData,\r\n            labels: dataForChart.labels,\r\n            datasets: dataForChart.data,\r\n        });\r\n    };\r\n\r\n    const options = {\r\n        tooltips: {\r\n            displayColors: true,\r\n            callbacks: {\r\n                mode: \"x\",\r\n            },\r\n        },\r\n        scales: {\r\n            xAxes: [\r\n                {\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: false,\r\n                    },\r\n                },\r\n            ],\r\n            yAxes: [\r\n                {\r\n                    stacked: true,\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                    type: \"linear\",\r\n                },\r\n            ],\r\n        },\r\n        maintainAspectRatio: false,\r\n        legend: { position: \"bottom\" },\r\n        plugins: {\r\n            datalabels: {\r\n                font: {\r\n                    size: 0,\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    const data = {\r\n        labels: reportData.labels,\r\n        datasets: reportData.datasets,\r\n    };\r\n\r\n    useEffect(() => {\r\n        const request = {\r\n            viewID: \"241653669\",\r\n            startDate,\r\n            endDate,\r\n            metrics: props.metric,\r\n            dimensions: props.dimension,\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport3(request)\r\n                    .then((resp) => displayResults(resp))\r\n                    .catch((error) => console.error(error)),\r\n            1500\r\n        );\r\n    }, [startDate, endDate]);\r\n\r\n    return (\r\n        <ReportWrapper>\r\n            <ChartTitle>{`${props.title}`}</ChartTitle>\r\n            <Subtitle>{`${props.title} - ${totalSources}`}</Subtitle>\r\n            <DatepickerRow>\r\n                <CustomDatePicker\r\n                    placeholder={\"Start date\"}\r\n                    date={startDate}\r\n                    handleDateChange={(date) => setStartDate(date)}\r\n                />\r\n                <CustomDatePicker\r\n                    placeholder={\"End date\"}\r\n                    date={endDate}\r\n                    handleDateChange={(date) => setEndDate(date)}\r\n                />\r\n            </DatepickerRow>\r\n            {reportData && (\r\n                <ChartWrapper>\r\n                    <Bar data={data} width={100} height={250} options={options} />\r\n                </ChartWrapper>\r\n            )}\r\n        </ReportWrapper>\r\n    );\r\n};\r\n\r\nexport default Visual_usertype_report;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { addDays, format } from \"date-fns\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { formatDate, transformToDate } from \"../utils\";\r\nimport {\r\n    ChartTitle,\r\n    ReportWrapper,\r\n    Subtitle,\r\n    DatepickerRow,\r\n    ChartWrapper,\r\n    colors,\r\n} from \"../styles\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\nimport { queryReport3 } from \"../AnalyticsReportingApi/queryReport3\";\r\n\r\n\r\nconst Visual_daysince_lastsession = (props) => {\r\n\r\n    const [metrics, setmetrics] = useState('ga:users')\r\n\r\n    const INITIAL_STATE = {\r\n        labels: [],\r\n        values: [],\r\n    };\r\n    const [reportData, setReportData] = useState(INITIAL_STATE);\r\n    const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [average, setAverage] = useState(0);\r\n\r\n    const displayResults = (response) => {\r\n        const queryResult = response.result.reports[0].data.rows;\r\n        const total = response.result.reports[0].data.totals[0].values[0];\r\n        setAverage(parseInt(total / response.result.reports[0].data.rowCount));\r\n        let labels = [];\r\n        let values = [];\r\n        queryResult.forEach((row) => {\r\n            labels.push(formatDate(row.dimensions[0]));\r\n            values.push(row.metrics[0].values[0]);\r\n        });\r\n        setReportData({\r\n            ...reportData,\r\n            labels,\r\n            values,\r\n        });\r\n    };\r\n\r\n    const data = {\r\n        labels: reportData.labels,\r\n        datasets: [\r\n            {\r\n                label: `${props.title} per day`,\r\n                fill: false,\r\n                lineTension: 0.3,\r\n                borderColor: \"#35213d\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"#375751\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: reportData.values,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        suggestedMin: 0,\r\n                    },\r\n                },\r\n            ],\r\n            xAxes: [\r\n                {\r\n                    ticks: {\r\n                        autoSkip: true,\r\n                        maxTicksLimit: 7,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false,\r\n        },\r\n        plugins: {\r\n            datalabels: {\r\n                font: {\r\n                    size: 0,\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        const request = {\r\n            viewID: \"241653669\",\r\n            startDate,\r\n            endDate,\r\n            metrics: props.metric,\r\n            dimensions: props.dimension\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport3(request)\r\n                    .then((resp) => displayResults(resp))\r\n                    .catch((error) => console.error(error)),\r\n            1500\r\n        );\r\n    }, [startDate, endDate]);\r\n\r\n    return (\r\n        <ReportWrapper>\r\n            <ChartTitle>{`${props.title}`}</ChartTitle>\r\n            <Subtitle>{`Average - ${average} ${props.title}`}</Subtitle>\r\n            <DatepickerRow>\r\n                <CustomDatePicker\r\n                    placeholder={\"Start date\"}\r\n                    date={startDate}\r\n                    handleDateChange={(date) => setStartDate(date)}\r\n                />\r\n                <CustomDatePicker\r\n                    placeholder={\"End date\"}\r\n                    date={endDate}\r\n                    handleDateChange={(date) => setEndDate(date)}\r\n                />\r\n            </DatepickerRow>\r\n            {reportData && (\r\n                <ChartWrapper>\r\n                    <Line data={data} options={options} width={100} height={250} />\r\n                </ChartWrapper>\r\n            )}\r\n        </ReportWrapper>\r\n    );\r\n};\r\n\r\nexport default Visual_daysince_lastsession;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { PieChartWrapper, colors } from \"../styles\";\r\nimport { addDays } from \"date-fns\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { ChartTitle, ReportWrapper, Subtitle, DatepickerRow } from \"../styles\";\r\n\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\nimport { queryReport3 } from \"../AnalyticsReportingApi/queryReport3\";\r\n\r\nconst Visual_users_location = (props) => {\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    values: [],\r\n    colors: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalCoutries, setTotalCountries] = useState(0);\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    setTotalUsers(response.result.reports[0].data.totals[0].values[0]);\r\n    setTotalCountries(queryResult.length);\r\n    let labels = [];\r\n    let values = [];\r\n    let bgColors = [];\r\n    queryResult.forEach((row, idx) => {\r\n      if (idx < 5) {\r\n        labels.push(row.dimensions[0]);\r\n        values.push(row.metrics[0].values[0]);\r\n        bgColors.push(colors[idx + 1]);\r\n      }\r\n    });\r\n    setReportData({\r\n      ...reportData,\r\n      labels,\r\n      values,\r\n      colors: bgColors,\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: [\r\n      {\r\n        data: reportData.values,\r\n        backgroundColor: reportData.colors,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return data.labels[tooltipItem[\"index\"]];\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      datalabels: {\r\n        color: \"black\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        formatter: function (value, context) {\r\n          const perc = parseInt((value / totalUsers) * 100);\r\n          return perc + \"%\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: \"241653669\",\r\n      startDate,\r\n      endDate,\r\n      metrics: props.metric,\r\n      dimensions: props.dimension,\r\n      orderBy: {\r\n        fieldName: \"ga:users\",\r\n        order: \"DESCENDING\",\r\n      },\r\n    };\r\n    setTimeout(\r\n      () =>\r\n      queryReport3(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      5500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <ReportWrapper>\r\n      <ChartTitle>{`${props.title}`}</ChartTitle>\r\n      <Subtitle>{`${props.title} - ${totalCoutries}`}</Subtitle>\r\n      <DatepickerRow>\r\n        <CustomDatePicker\r\n          placeholder={\"Start date\"}\r\n          date={startDate}\r\n          handleDateChange={(date) => setStartDate(date)}\r\n        />\r\n        <CustomDatePicker\r\n          placeholder={\"End date\"}\r\n          date={endDate}\r\n          handleDateChange={(date) => setEndDate(date)}\r\n        />\r\n      </DatepickerRow>\r\n      {reportData && (\r\n        <PieChartWrapper>\r\n          <Pie data={data} options={options} />\r\n        </PieChartWrapper>\r\n      )}\r\n    </ReportWrapper>\r\n  );\r\n};\r\n\r\nexport default Visual_users_location;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport '../../App.css'\r\nimport { queryReport3 } from \"../AnalyticsReportingApi/queryReport3\";\r\nimport '../../../../components/app.css'\r\nimport Card from '../../../Common/Card';\r\nimport Visual_usertype_report from \"./visual_usertype_report\";\r\nimport Visual_daysince_lastsession from \"./visual_daysince_lastsession\";\r\nimport Visual_users_location from \"./visual_users_location\";\r\n\r\nconst UserdataReports = (props: any) => {\r\n    const [startDate, setStartDate] = useState(addDays(new Date(), -30));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [metriheaders, setmetriheaders] = useState([])\r\n    const [dimensionheaders, setdimensionheaders] = useState([])\r\n    const [data, setData] = useState([]);\r\n\r\n    const [metriheaders2, setmetriheaders2] = useState([])\r\n    const [dimensionheaders2, setdimensionheaders2] = useState([])\r\n    const [data2, setData2] = useState([]);\r\n\r\n    const [metriheaders3, setmetriheaders3] = useState([])\r\n    const [dimensionheaders3, setdimensionheaders3] = useState([])\r\n    const [data3, setData3] = useState([]);\r\n\r\n    const [metriheaders4, setmetriheaders4] = useState([])\r\n    const [dimensionheaders4, setdimensionheaders4] = useState([])\r\n    const [data4, setData4] = useState([]);\r\n\r\n    const [metriheaders5, setmetriheaders5] = useState([])\r\n    const [dimensionheaders5, setdimensionheaders5] = useState([])\r\n    const [data5, setData5] = useState([]);\r\n\r\n    const [metriheaders6, setmetriheaders6] = useState([])\r\n    const [dimensionheaders6, setdimensionheaders6] = useState([])\r\n    const [data6, setData6] = useState([]);\r\n\r\n    const [metriheaders7, setmetriheaders7] = useState([])\r\n    const [dimensionheaders7, setdimensionheaders7] = useState([])\r\n    const [data7, setData7] = useState([]);\r\n\r\n    const [metriheaders8, setmetriheaders8] = useState([])\r\n    const [dimensionheaders8, setdimensionheaders8] = useState([])\r\n    const [data8, setData8] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const displayResults = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults2 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders2(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders2(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData2(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults3 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders3(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders3(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData3(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults4 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders4(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders4(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData4(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults5 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders5(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders5(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData5(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults6 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders6(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders6(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData6(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults7 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders7(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders7(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData7(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults8 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders8(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders8(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData8(response.result.reports[0].data.rows)\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // const request = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         {\r\n        //             expression: \"ga:users\"\r\n        //         },\r\n        //         {\r\n        //             expression: \"ga:newUsers\"\r\n        //         },\r\n        //         {\r\n        //             expression: \"ga:sessionsPerUser\"\r\n        //         },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\", \"ga:hour\", \"ga:minute\", \"ga:userType\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport3(request)\r\n        //             .then((resp: any) => displayResults(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     1500\r\n        // );\r\n\r\n\r\n        // const request2 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         {\r\n        //             expression: \"ga:users\"\r\n        //         },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\", \"ga:daysSinceLastSession\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport3(request2)\r\n        //             .then((resp: any) => displayResults2(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     1500\r\n        // );\r\n\r\n        // const request3 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         {\r\n        //             expression: \"ga:30dayUsers\"\r\n        //         },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\", \"ga:day\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport3(request3)\r\n        //             .then((resp: any) => displayResults3(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     1500\r\n        // );\r\n\r\n        const request4 = {\r\n            viewID: props.viewID,\r\n            startDate,\r\n            endDate,\r\n            metrics: [\r\n                { expression: \"ga:users\" },\r\n                { expression: \"ga:bounceRate\" },\r\n                { expression: \"ga:sessionDuration\" },\r\n            ],\r\n            dimensions: [\"ga:date\"]\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport3(request4)\r\n                    .then((resp: any) => displayResults4(resp))\r\n                    .catch((error: any) => console.error(error)),\r\n            1500\r\n        );\r\n\r\n        // const request5 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:sessions\" },\r\n        //         { expression: \"ga:sessionDuration\" },\r\n        //         { expression: \"ga:avgSessionDuration\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:userType\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport3(request5)\r\n        //             .then((resp: any) => displayResults5(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     1500\r\n        // );\r\n\r\n        const request6 = {\r\n            viewID: props.viewID,\r\n            startDate,\r\n            endDate,\r\n            metrics: [\r\n                { expression: \"ga:users\" },\r\n                { expression: \"ga:newUsers\" },\r\n                { expression: \"ga:sessions\" },\r\n            ],\r\n            dimensions: [\"ga:date\"]\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport3(request6)\r\n                    .then((resp: any) => displayResults6(resp))\r\n                    .catch((error: any) => console.error(error)),\r\n            1500\r\n        );\r\n\r\n        // const request7 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:users\" },\r\n        //         { expression: \"ga:newUsers\" },\r\n        //         { expression: \"ga:sessions\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:continent\", \"ga:subContinent\", \"ga:country\", \"ga:region\", \"ga:metro\", \"ga:city\", \"ga:longitude\", \"ga:latitude\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport3(request7)\r\n        //             .then((resp: any) => displayResults7(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     1500\r\n        // );\r\n\r\n        const request8 = {\r\n            viewID: props.viewID,\r\n            startDate,\r\n            endDate,\r\n            metrics: [\r\n                { expression: \"ga:users\" },\r\n            ],\r\n            dimensions: [\"ga:userAgeBracket\", \"ga:userGender\"]\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport3(request8)\r\n                    .then((resp: any) => displayResults8(resp))\r\n                    .catch((error: any) => console.error(error)),\r\n            1500\r\n        );\r\n\r\n    }, [startDate, endDate]);\r\n\r\n\r\n\r\n\r\n    const renderHeader2 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    const renderHeader3 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element.name}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderBody3 = (element: any) => {\r\n        // console.log(\"element=====\", element);\r\n        return (\r\n            <tr>\r\n                {element.dimensions?.map((obj: any) => <td>{obj}</td>)}\r\n                {element.metrics[0].values.map((obj: any) => <td>{obj}</td>)}\r\n            </tr >\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                card_title=\"User Type\"\r\n                card_body={\r\n                    <>\r\n                        <Visual_usertype_report\r\n                            title={\"Total type of User's\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:userType\", \"ga:date\"]}\r\n                        />\r\n\r\n                        {/* <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders?.map(renderHeader2)} {metriheaders?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div> */}\r\n                    </>\r\n                }\r\n            />\r\n\r\n\r\n            <Card\r\n                card_title=\"Days Since Last Session\"\r\n                card_body={\r\n                    <>\r\n                        <Visual_daysince_lastsession\r\n                            title={\"User Since Last Session\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:date\", \"ga:daysSinceLastSession\"]}\r\n                        />\r\n\r\n                        {/* <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders2?.map(renderHeader2)} {metriheaders2?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data2?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div> */}\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"30dayUsers\"\r\n                card_body={\r\n                    <>\r\n\r\n                        <Visual_daysince_lastsession\r\n                            title={\" 30dayUsers\"}\r\n                            metric={[\r\n                                { expression: \"ga:30dayUsers\" }\r\n                            ]}\r\n                            dimension={[\"ga:date\", \"ga:day\"]}\r\n                        />\r\n\r\n                        {/* <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders3?.map(renderHeader2)} {metriheaders3?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data3?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div> */}\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"User Bounce rate on the site\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders4?.map(renderHeader2)} {metriheaders4?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data4?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"User's average Bounce rate on the site\"\r\n                card_body={\r\n                    <>\r\n                        <Visual_usertype_report\r\n                            title={\"Total type of average users Bounce rate\"}\r\n                            metric={[\r\n                                { expression: \"ga:sessionDuration\" },\r\n                            ]}\r\n                            dimension={[\"ga:userType\", \"ga:date\"]}\r\n                        />\r\n\r\n\r\n                        {/* <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders5?.map(renderHeader2)} {metriheaders5?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data5?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div> */}\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"User Acquisition\"\r\n                card_body={\r\n                    <>\r\n                        <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders6?.map(renderHeader2)} {metriheaders6?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data6?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"User's Locations\"\r\n                card_body={\r\n                    <>\r\n                        <Visual_users_location\r\n                            title={\"User's Locations\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" },\r\n                            ]}\r\n                            dimension={[\"ga:subContinent\"]}\r\n                        />\r\n                        <Visual_users_location\r\n                            title={\"User's Locations\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" },\r\n                            ]}\r\n                            dimension={[\"ga:region\"]} />\r\n\r\n                        <Visual_users_location\r\n                            title={\"User's Locations\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" },\r\n                            ]}\r\n                            dimension={[\"ga:city\"]} />\r\n\r\n                        <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders7?.map(renderHeader2)} {metriheaders7?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data7?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"Demographic Report\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders8?.map(renderHeader2)} {metriheaders8?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data8?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nexport default UserdataReports;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport CustomDatePicker from \"../datepicker\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport { ChartTitle, Subtitle, PieChartWrapper, colors } from \"../styles\";\r\nimport { queryReport2 } from \"../AnalyticsReportingApi/queryReport2\";\r\nimport { queryReport3 } from \"../AnalyticsReportingApi/queryReport3\";\r\n\r\nconst Visual_devicedata_report = (props) => {\r\n  const INITIAL_STATE = {\r\n    labels: [],\r\n    values: [],\r\n    colors: [],\r\n  };\r\n  const [reportData, setReportData] = useState(INITIAL_STATE);\r\n  const [startDate, setStartDate] = useState(addDays(new Date(), -10));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n\r\n  const displayResults = (response) => {\r\n    const queryResult = response.result.reports[0].data.rows;\r\n    const total = response.result.reports[0].data.totals[0].values[0];\r\n    setTotalUsers(total);\r\n    let labels = [];\r\n    let values = [];\r\n    let bgColors = [];\r\n    queryResult.forEach((row, id) => {\r\n      labels.push(row.dimensions[0]);\r\n      values.push(row.metrics[0].values[0]);\r\n      bgColors.push(colors[id + 4]);\r\n    });\r\n    setReportData({\r\n      ...reportData,\r\n      labels,\r\n      values,\r\n      colors: bgColors,\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    labels: reportData.labels,\r\n    datasets: [\r\n      {\r\n        data: reportData.values,\r\n        backgroundColor: reportData.colors,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: { position: \"bottom\" },\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      datalabels: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = {\r\n      viewID: \"241653669\",\r\n      startDate,\r\n      endDate,\r\n      metrics: props.metric,\r\n      dimensions: props.dimension\r\n    };\r\n    setTimeout(\r\n      () =>\r\n        queryReport3(request)\r\n          .then((resp) => displayResults(resp))\r\n          .catch((error) => console.error(error)),\r\n      4500\r\n    );\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div>\r\n      <ChartTitle>{`${props.title}`}</ChartTitle>\r\n      <Subtitle>{`Total Users - ${totalUsers}`}</Subtitle>\r\n      <CustomDatePicker\r\n        placeholder={\"Start date\"}\r\n        date={startDate}\r\n        handleDateChange={(date) => setStartDate(date)}\r\n      />\r\n      <CustomDatePicker\r\n        placeholder={\"End date\"}\r\n        date={endDate}\r\n        handleDateChange={(date) => setEndDate(date)}\r\n      />\r\n      {reportData && (\r\n        <PieChartWrapper>\r\n          <Doughnut data={data} options={options} width={300} height={300} />\r\n        </PieChartWrapper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Visual_devicedata_report;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport '../../App.css'\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport Card from '../../../Common/Card';\r\nimport Visual_devicedata_report from \"./visual_devicedata_report\";\r\n\r\nconst DevicedataReports = (props: any) => {\r\n    const [startDate, setStartDate] = useState(addDays(new Date(), -30));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [metriheaders, setmetriheaders] = useState([])\r\n    const [dimensionheaders, setdimensionheaders] = useState([])\r\n    const [data, setData] = useState([]);\r\n\r\n    const [metriheaders2, setmetriheaders2] = useState([])\r\n    const [dimensionheaders2, setdimensionheaders2] = useState([])\r\n    const [data2, setData2] = useState([]);\r\n\r\n    const [metriheaders3, setmetriheaders3] = useState([])\r\n    const [dimensionheaders3, setdimensionheaders3] = useState([])\r\n    const [data3, setData3] = useState([]);\r\n\r\n\r\n    const displayResults = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults2 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders2(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders2(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData2(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults3 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders3(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders3(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData3(response.result.reports[0].data.rows)\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // const request = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:users\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:deviceCategory\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request)\r\n        //             .then((resp: any) => displayResults(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     4500\r\n        // );\r\n\r\n\r\n        const request2 = {\r\n            viewID: props.viewID,\r\n            startDate,\r\n            endDate,\r\n            metrics: [\r\n                { expression: \"ga:users\" },\r\n            ],\r\n            dimensions: [\"ga:browser\", \"ga:browserVersion\", \"ga:operatingSystem\", \"ga:operatingSystemVersion\", \"ga:browserSize\"]\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport(request2)\r\n                    .then((resp: any) => displayResults2(resp))\r\n                    .catch((error: any) => console.error(error)),\r\n            4500\r\n        );\r\n\r\n        const request3 = {\r\n            viewID: props.viewID,\r\n            startDate,\r\n            endDate,\r\n            metrics: [\r\n                { expression: \"ga:users\" },\r\n            ],\r\n            dimensions: [\"ga:mobileDeviceBranding\", \"ga:mobileDeviceModel\", \"ga:mobileInputSelector\", \"ga:mobileDeviceInfo\", \"ga:mobileDeviceMarketingName\"]\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport(request3)\r\n                    .then((resp: any) => displayResults3(resp))\r\n                    .catch((error: any) => console.error(error)),\r\n            4500\r\n        );\r\n\r\n    }, [startDate, endDate]);\r\n\r\n\r\n\r\n\r\n    const renderHeader2 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    const renderHeader3 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element.name}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderBody3 = (element: any) => {\r\n        // console.log(\"element=====\", element);\r\n        return (\r\n            <tr>\r\n                {element.dimensions?.map((obj: any) => <td>{obj}</td>)}\r\n                {element.metrics[0].values.map((obj: any) => <td>{obj}</td>)}\r\n            </tr >\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                card_title=\"Type of devices\"\r\n                card_body={\r\n                    <>\r\n\r\n                        <Visual_devicedata_report\r\n                            title={\"Type of devices\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:deviceCategory\"]}\r\n                        />\r\n\r\n                        <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders?.map(renderHeader2)} {metriheaders?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                }\r\n            />\r\n\r\n\r\n            <Card\r\n                card_title=\"Browser info\"\r\n                card_body={\r\n                    <>\r\n\r\n                        <Visual_devicedata_report\r\n                            title={\"Type of Browser\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:browser\"]}\r\n                        />\r\n\r\n                        <Visual_devicedata_report\r\n                            title={\"Type of operatingSystem\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:operatingSystem\"]}\r\n                        />\r\n\r\n                        <Visual_devicedata_report\r\n                            title={\"Type of operatingSystem\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:operatingSystemVersion\"]}\r\n                        />\r\n\r\n\r\n                        <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders2?.map(renderHeader2)} {metriheaders2?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data2?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"Mobile info\"\r\n                card_body={\r\n                    <>\r\n\r\n                        <Visual_devicedata_report\r\n                            title={\"Type of mobileDeviceBranding\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:mobileDeviceBranding\"]}\r\n                        />\r\n                        <Visual_devicedata_report\r\n                            title={\"Type of mobileDeviceModel\"}\r\n                            metric={[\r\n                                { expression: \"ga:users\" }\r\n                            ]}\r\n                            dimension={[\"ga:mobileDeviceModel\"]}\r\n                        />\r\n\r\n                        <div className=\"internal_table\">\r\n                            <table id='internal_table'>\r\n                                <thead>\r\n                                    <tr>{dimensionheaders3?.map(renderHeader2)} {metriheaders3?.map(renderHeader3)} </tr>\r\n                                </thead>\r\n                                <tbody>{data3?.map(renderBody3)} </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nexport default DevicedataReports;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport '../../App.css'\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport '../../../../components/app.css'\r\nimport Card from '../../../Common/Card';\r\n\r\nconst WebPerformanceReport = (props: any) => {\r\n    const [startDate, setStartDate] = useState(addDays(new Date(), -30));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [metriheaders, setmetriheaders] = useState([])\r\n    const [dimensionheaders, setdimensionheaders] = useState([])\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n\r\n    const displayResults = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData(response.result.reports[0].data.rows)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const request = {\r\n            viewID: props.viewID,\r\n            startDate,\r\n            endDate,\r\n            metrics: [\r\n                { expression: \"ga:searchResultViews\" },\r\n                { expression: \"ga:searchRefinements\" },\r\n                { expression: \"ga:percentSearchRefinements\" },\r\n                { expression: \"ga:searchDuration\" },\r\n                { expression: \"ga:avgSearchDuration\" },\r\n            ],\r\n            dimensions: [\"ga:searchKeyword\"]\r\n        };\r\n        setTimeout(\r\n            () =>\r\n                queryReport(request)\r\n                    .then((resp: any) => displayResults(resp))\r\n                    .catch((error: any) => console.error(error)),\r\n            3500\r\n        );\r\n\r\n\r\n    }, [startDate, endDate]);\r\n\r\n\r\n\r\n\r\n    const renderHeader2 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderHeader3 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element.name}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderBody3 = (element: any) => {\r\n        // console.log(\"element=====\", element);\r\n        return (\r\n            <tr>\r\n                {element.dimensions?.map((obj: any) => <td>{obj}</td>)}\r\n                {element.metrics[0].values.map((obj: any) => <td>{obj}</td>)}\r\n            </tr >\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                card_title=\"Site Performance\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders?.map(renderHeader2)} {metriheaders?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nexport default WebPerformanceReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addDays } from \"date-fns\";\r\nimport { queryReport } from \"../AnalyticsReportingApi/queryReport\";\r\nimport '../../App.css'\r\nimport '../../../../components/app.css'\r\nimport Card from '../../../Common/Card';\r\n\r\nconst TrafficAnalysisReport = (props: any) => {\r\n    const [startDate, setStartDate] = useState(addDays(new Date(), -30));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [metriheaders, setmetriheaders] = useState([])\r\n    const [dimensionheaders, setdimensionheaders] = useState([])\r\n    const [data, setData] = useState([]);\r\n\r\n    const [metriheaders2, setmetriheaders2] = useState([])\r\n    const [dimensionheaders2, setdimensionheaders2] = useState([])\r\n    const [data2, setData2] = useState([]);\r\n\r\n    const [metriheaders3, setmetriheaders3] = useState([])\r\n    const [dimensionheaders3, setdimensionheaders3] = useState([])\r\n    const [data3, setData3] = useState([]);\r\n\r\n    const [metriheaders4, setmetriheaders4] = useState([])\r\n    const [dimensionheaders4, setdimensionheaders4] = useState([])\r\n    const [data4, setData4] = useState([]);\r\n\r\n    const [metriheaders5, setmetriheaders5] = useState([])\r\n    const [dimensionheaders5, setdimensionheaders5] = useState([])\r\n    const [data5, setData5] = useState([]);\r\n\r\n    const [metriheaders6, setmetriheaders6] = useState([])\r\n    const [dimensionheaders6, setdimensionheaders6] = useState([])\r\n    const [data6, setData6] = useState([]);\r\n\r\n    const [metriheaders7, setmetriheaders7] = useState([])\r\n    const [dimensionheaders7, setdimensionheaders7] = useState([])\r\n    const [data7, setData7] = useState([]);\r\n\r\n\r\n\r\n    const displayResults = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults2 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders2(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders2(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData2(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults3 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders3(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders3(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData3(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults4 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders4(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders4(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData4(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults5 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders5(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders5(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData5(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults6 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders6(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders6(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData6(response.result.reports[0].data.rows)\r\n    };\r\n\r\n    const displayResults7 = (response: any) => {\r\n        // console.log(\"><>?other1111 ===\", response.result.reports[0].data.rows);\r\n        // console.log(\"1111columnHeader ===\", response.result.reports[0].columnHeader, response.result.reports[0].metricHeader);\r\n        setdimensionheaders7(response.result.reports[0].columnHeader.dimensions)\r\n        setmetriheaders7(response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries)\r\n        setData7(response.result.reports[0].data.rows)\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // const request = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:users\" },\r\n        //         { expression: \"ga:newUsers\" },\r\n        //         { expression: \"ga:sessions\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request)\r\n        //             .then((resp: any) => displayResults(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n\r\n        // const request2 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:sessionsPerUser\" },\r\n        //         { expression: \"ga:pageviews\" },\r\n        //         { expression: \"ga:pageviewsPerSession\" },\r\n        //         { expression: \"ga:uniquePageviews\" },\r\n        //         { expression: \"ga:avgSessionDuration\" },\r\n        //         { expression: \"ga:bounceRate\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request2)\r\n        //             .then((resp: any) => displayResults2(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n        // const request3 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:sessions\" },\r\n        //         { expression: \"ga:newUsers\" },\r\n        //         { expression: \"ga:percentNewSessions\" }\r\n        //     ],\r\n        //     dimensions: [\"ga:campaign\", \"ga:source\", \"ga:medium\", \"ga:sourceMedium\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request3)\r\n        //             .then((resp: any) => displayResults3(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n        // const request4 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:newUsers\" },\r\n        //         { expression: \"ga:sessions\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:hostname\", \"ga:pagePath\", \"ga:landingPagePath\", \"ga:pageTitle\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request4)\r\n        //             .then((resp: any) => displayResults4(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n        // const request5 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:sessions\" },\r\n        //         { expression: \"ga:sessionDuration\" },\r\n        //         { expression: \"ga:avgSessionDuration\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:userType\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request5)\r\n        //             .then((resp: any) => displayResults5(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n        // const request6 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:pageviews\" },\r\n        //         { expression: \"ga:uniquePageviews\" },\r\n        //         { expression: \"ga:avgTimeOnPage\" },\r\n        //         { expression: \"ga:bounceRate\" },\r\n        //         { expression: \"ga:exitRate\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request6)\r\n        //             .then((resp: any) => displayResults6(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n        // const request7 = {\r\n        //     viewID: props.viewID,\r\n        //     startDate,\r\n        //     endDate,\r\n        //     metrics: [\r\n        //         { expression: \"ga:pageviews\" },\r\n        //         { expression: \"ga:entranceRate\" },\r\n        //         { expression: \"ga:avgTimeOnPage\" },\r\n        //         { expression: \"ga:avgTimeOnPage\" },\r\n        //         { expression: \"ga:exitRate\" },\r\n        //     ],\r\n        //     dimensions: [\"ga:date\"]\r\n        // };\r\n        // setTimeout(\r\n        //     () =>\r\n        //         queryReport(request7)\r\n        //             .then((resp: any) => displayResults7(resp))\r\n        //             .catch((error: any) => console.error(error)),\r\n        //     3500\r\n        // );\r\n\r\n\r\n    }, [startDate, endDate]);\r\n\r\n\r\n\r\n\r\n    const renderHeader2 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    const renderHeader3 = (element: any) => {\r\n        // console.log(\"element=====222\", element);\r\n        return (\r\n            <>\r\n                <th>{element.name}</th>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderBody3 = (element: any) => {\r\n        // console.log(\"element=====\", element);\r\n        return (\r\n            <tr>\r\n                {element.dimensions?.map((obj: any) => <td>{obj}</td>)}\r\n                {element.metrics[0].values.map((obj: any) => <td>{obj}</td>)}\r\n            </tr >\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                card_title=\"User Acquisition\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders?.map(renderHeader2)} {metriheaders?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n\r\n            <Card\r\n                card_title=\"User engagement\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders2?.map(renderHeader2)} {metriheaders2?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data2?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"Traffic Acquisition\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders3?.map(renderHeader2)} {metriheaders3?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data3?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"Landing Pages\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders4?.map(renderHeader2)} {metriheaders4?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data4?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"User Behavior\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders5?.map(renderHeader2)} {metriheaders5?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data5?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"User Flow report\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders6?.map(renderHeader2)} {metriheaders6?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data6?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n            <Card\r\n                card_title=\"Page visited\"\r\n                card_body={\r\n                    <div className=\"internal_table\">\r\n                        <table id='internal_table'>\r\n                            <thead>\r\n                                <tr>{dimensionheaders7?.map(renderHeader2)} {metriheaders7?.map(renderHeader3)} </tr>\r\n                            </thead>\r\n                            <tbody>{data7?.map(renderBody3)} </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nexport default TrafficAnalysisReport;\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useState } from \"react\";\r\n\r\nimport { LastRow } from \"./styles\";\r\nimport DayVisitsReport from \"./AnalyticsReports/dayVisitsReport\";\r\nimport CountriesReport from \"./AnalyticsReports/countriesReport\";\r\nimport PageviewsReport from \"./AnalyticsReports/pageviewReport\";\r\nimport SourceReport from \"./AnalyticsReports/sourceReport\";\r\nimport BrowsersReport from \"./AnalyticsReports/browsersReport\";\r\nimport DevicesReport from \"./AnalyticsReports/devicesReport\";\r\nimport DayVisitsReport_realtime from \"./AnalyticsReports/dayVisitsReport_realtime\";\r\nimport OtherReports from \"./AnalyticsReports/otherReports\";\r\nimport UserdataReports from \"./AnalyticsReports/userdataReports\";\r\nimport DevicedataReports from \"./AnalyticsReports/devicedataReports\";\r\nimport WebPerformanceReport from \"./AnalyticsReports/webPerformanceReport\";\r\nimport TrafficAnalysisReport from \"./AnalyticsReports/trafficAnalysisReport\";\r\nimport './style.css'\r\n\r\nconst DashBoard = () => {\r\n  const [activetab, setactivetab] = useState(true)\r\n\r\n  const [active, setActive] = useState(0);\r\n  const handleClick = (e: any) => {\r\n    const index = parseInt(e.target.id);\r\n    if (index !== active) {\r\n      setActive(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"results_container\">\r\n        <div className=\"Tab_day_night_container\">\r\n\r\n          <div className=\"tab_day_night\">\r\n            <div onClick={() => {\r\n              setactivetab(true)\r\n            }} className={activetab ? \"tab_active\" : \"tab_inactive\"}>REAL-TIME REPORT</div>\r\n            <div onClick={() => {\r\n              setactivetab(false)\r\n            }} className={activetab ? \"tab_inactive\" : \"tab_active\"}>GENERATED REPORT</div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        {activetab ?\r\n          <div className=\"result_tab\">\r\n            <DayVisitsReport_realtime title={\"Users\"} />\r\n          </div>\r\n          :\r\n          <div className=\"result_tab\">\r\n\r\n            <div className=\"tab_day_night2\">\r\n\r\n              <div onClick={(e) => { handleClick(e) }} className={active === 0 ? \"tab_active2\" : \"tab_inactive2\"}\r\n                active={active === 0} id={0}\r\n              >\r\n                User Data</div>\r\n\r\n              <div onClick={(e) => { handleClick(e) }} className={active === 1 ? \"tab_inactive2\" : \"tab_active2\"}\r\n                active={active === 1} id={1}\r\n              >\r\n                Device Data</div>\r\n\r\n              <div onClick={(e) => { handleClick(e) }} className={active === 2 ? \"tab_inactive2\" : \"tab_active2\"}\r\n                active={active === 2} id={2}\r\n              >\r\n                Website/Webapp/App Performance</div>\r\n\r\n              <div onClick={(e) => { handleClick(e) }} className={active === 3 ? \"tab_inactive2\" : \"tab_active2\"}\r\n                active={active === 3} id={3}\r\n              >\r\n                Traffic Analysis</div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            {(active === 0) &&\r\n              <UserdataReports viewID={\"241653669\"} />\r\n            }\r\n\r\n            {(active === 1) &&\r\n              <DevicedataReports viewID={\"241653669\"} />\r\n            }\r\n\r\n            {(active === 2) &&\r\n              <WebPerformanceReport viewID={\"241653669\"} />\r\n            }\r\n\r\n            {(active === 3) &&\r\n              <TrafficAnalysisReport viewID={\"241653669\"} />\r\n            }\r\n\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* <OtherReports viewID={\"241653669\"} /> */}\r\n\r\n      <DayVisitsReport\r\n        metric={\"ga:users\"}\r\n        title={\"Users\"}\r\n        viewID={\"241653669\"}\r\n      />\r\n      <DayVisitsReport\r\n        metric={\"ga:sessions\"}\r\n        title={\"Sessions\"}\r\n        viewID={\"241653669\"}\r\n      />\r\n      <CountriesReport viewID={\"241653669\"} />\r\n      <PageviewsReport viewID={\"241653669\"} />\r\n      <SourceReport viewID={\"241653669\"} />\r\n      <LastRow>\r\n        <BrowsersReport viewID={\"241653669\"} />\r\n        <DevicesReport viewID={\"241653669\"} />\r\n      </LastRow>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default DashBoard;","module.exports = __webpack_public_path__ + \"529f2f9cbed9cc2fe9621242cd21c7d4.png\";","module.exports = __webpack_public_path__ + \"0d10f8f10c38b84eada450482ad46fb4.svg\";","module.exports = __webpack_public_path__ + \"d99cc9b1b688ca434c91f656314a1dac.svg\";","module.exports = __webpack_public_path__ + \"61530c7cbedc911a79cd62d593340906.png\";","module.exports = __webpack_public_path__ + \"a7c106668c4dcf9b17515731bea20ebc.png\";","module.exports = __webpack_public_path__ + \"3e3f0976b58e61d1f770c934b49fe3f0.png\";","module.exports = __webpack_public_path__ + \"8b74a9768aeba5748cec863593400e17.png\";","module.exports = __webpack_public_path__ + \"320fe8b07fbbdecaec80bd77dfe06fbb.svg\";","module.exports = __webpack_public_path__ + \"629cbd8d947de94f359d3194d203080f.svg\";"],"sourceRoot":""}