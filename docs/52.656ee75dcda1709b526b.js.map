{"version":3,"sources":["webpack:///./src/store/InstanceStore.ts","webpack:///./src/store/ActiveScreen.ts","webpack:///./src/store/ActiveLevelDetailsStore.ts","webpack:///./src/store/ActiveSubLevelDetailsStore.ts"],"names":["instanceStore","Store","instancestore","useStore","instance","setinstance","loadinstance","getinstance","then","data","results","loadinstancewithid","id","console","log","postinstance","res","oldArray","err","editinstance","oldarr","map","obj","x","String","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","color_field","deleteinstance","filter","ele","ActiveScreen1","useActiveScreen","ActiveScreen","setActiveScreen","leveldetailsStore","userActiveLevelDetailsStore","ActiveLevelDetails","setActiveLevelDetails","loadActiveleveldetails","getleveldetailsbyid","userActiveSubLevelDetailsStore","ActiveSubLevelDetails","setActiveSubLevelDetails","loadActiveSubleveldetails","getsublevel_data_byid"],"mappings":"2xDAKO,IAkDMA,EAAgB,IAAIC,KAA8B,GAElDC,EAAgB,WACzB,QAAgCC,YAASH,GAAzC,GAAOI,EAAP,KAAiBC,EAAjB,KAEA,MAAO,CACHD,WAAUC,cAEJC,aAHH,WAGkB,+IACXC,YAAY,IAAIC,MAClB,SAACC,GAEGJ,EAAYI,EAAKA,KAAKC,YAJb,8CASfC,mBAZH,SAYsBC,GAAS,+IACxBL,YAAYK,GAAIJ,MAClB,SAACC,GACGI,QAAQC,IAAI,sBAAuBL,GACnCJ,EAAYI,EAAKA,KAAKC,YAJA,8CAS5BK,aArBH,SAqBgBN,GAAW,+IACpBM,YAAaN,GAAMD,MAAK,SAACQ,GAC3BH,QAAQC,IAAIE,GACZX,GAAY,SAACY,GAAD,kBAAuBA,GAAvB,CAAiCD,EAAIP,aAF/C,OAGG,SAACS,GACNL,QAAQC,IAAII,MALU,8CAQxBC,aA7BH,SA6BgBP,EAASH,GAAW,+IAC7BU,YAAaP,EAAIH,GAAMD,MAAK,SAACQ,GAC/BH,QAAQC,IAAIE,GACZX,GAAY,SAACe,GACT,OAAQA,GAAWA,EAAOC,KAAI,SAACC,GAC3B,IACQC,EAcR,OAAQC,OAAOF,EAAIV,MAAQY,OAAOZ,KAd1BW,EAcwCD,GAb1CG,OAAShB,EAAKgB,OAChBF,EAAEG,OAASjB,EAAKiB,OAChBH,EAAEI,QAAUlB,EAAKkB,QACjBJ,EAAEK,SAAWnB,EAAKmB,SAClBL,EAAEM,OAASpB,EAAKoB,OAChBN,EAAEO,WAAarB,EAAKqB,WACpBP,EAAEQ,cAAgBtB,EAAKsB,cACvBR,EAAES,UAAYvB,EAAKuB,UACnBT,EAAEU,QAAUxB,EAAKwB,QACjBV,EAAEW,OAASzB,EAAKyB,OAChBX,EAAEY,YAAc1B,EAAK0B,YACdZ,GAE4CD,WAnB7D,OAsBG,SAACJ,GACNL,QAAQC,IAAII,MAxBmB,8CA2BjCkB,eAxDH,SAwDkBxB,GAAS,+IACpBwB,YAAexB,GAAIJ,MAAK,SAACQ,GAC3BH,QAAQC,IAAIE,GACZX,EAAYD,GAAYA,EAASiC,QAAO,SAAAC,GAAG,OAAIA,EAAI1B,KAAOA,SAFxD,OAGG,SAACI,GACNH,QAAQC,IAAIE,MALU,iD,giCChH/B,IAAMuB,EAAgB,IAAItC,IAAc,iBAGlCuC,EAAkB,WAC3B,QAAwCrC,YAASoC,GAAjD,GAEA,MAAO,CACHE,aAHJ,KAGkBC,gBAHlB,Q,kqCCJG,IA0DMC,EAAoB,IAAI1C,KAAgC,GAExD2C,EAA8B,WACvC,QAAoDzC,YAASwC,GAA7D,GAAOE,EAAP,KAA2BC,EAA3B,KAEA,MAAO,CACHD,qBAAoBC,wBAEdC,uBAHH,SAG0BnC,GAAQ,O,EAAA,sIAC3BoC,YAAoBpC,GAAIJ,MAC1B,SAACC,GAEGqC,EAAsBrC,EAAKA,KAAKC,QAAQ,OAJf,0C,61CClEtC,IAoDMiC,EAAoB,IAAI1C,KAAgC,GAExDgD,EAAiC,WAC1C,QAA0D9C,YAASwC,GAAnE,GAAOO,EAAP,KAA8BC,EAA9B,KAEA,MAAO,CACHD,wBAAuBC,2BAEjBC,0BAHH,SAG6BxC,GAAS,O,EAAA,sIAC/ByC,YAAsBzC,GAAIJ,MAC5B,SAACC,GACGI,QAAQC,IAAI,WAAYL,EAAKA,KAAKC,SAClCyC,EAAyB1C,EAAKA,KAAKC,YAJN,0C","file":"52.656ee75dcda1709b526b.js","sourcesContent":["import { Store, useStore } from \"./Store\";\r\nimport getinstance from \"../utils/api/getinstance\";\r\nimport editinstance from \"../utils/api/editinstance\";\r\nimport postinstance from \"../utils/api/postinstance\";\r\nimport deleteinstance from \"../utils/api/deleteinstance\";\r\nexport class instanceItem {\r\n\r\n    id: String;\r\n    i_icon: String;\r\n    mascot: String;\r\n    i_title: String;\r\n    i_stitle: String;\r\n    i_body: String;\r\n    i_bodytype: String;\r\n    i_bodyoptions: String;\r\n    locations: String;\r\n    i_media: String;\r\n    i_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    color_field: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_icon: String;\r\n        mascot: String;\r\n        i_title: String;\r\n        i_stitle: String;\r\n        i_body: String;\r\n        i_bodytype: String;\r\n        i_bodyoptions: String;\r\n        locations: String;\r\n        i_media: String;\r\n        i_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        color_field: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_icon = o.i_icon;\r\n        this.mascot = o.mascot;\r\n        this.i_title = o.i_title;\r\n        this.i_stitle = o.i_stitle;\r\n        this.i_body = o.i_body;\r\n        this.i_bodytype = o.i_bodytype;\r\n        this.i_bodyoptions = o.i_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.i_media = o.i_media;\r\n        this.i_misc = o.i_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.color_field = o.color_field;\r\n    }\r\n}\r\n\r\nexport const instanceStore = new Store<instanceItem[] | false>(false);\r\n\r\nexport const instancestore = () => {\r\n    const [instance, setinstance] = useStore(instanceStore);\r\n\r\n    return {\r\n        instance, setinstance,\r\n\r\n        async loadinstance() {\r\n            await getinstance(\"\").then(\r\n                (data) => {\r\n                    // console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setinstance(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        \r\n        async loadinstancewithid(id: any) {\r\n            await getinstance(id).then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setinstance(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postinstance(data: any) {\r\n            await postinstance(data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldArray: any) => [...oldArray, res.data]);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editinstance(id: any, data: any) {\r\n            await editinstance(id, data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.i_icon = data.i_icon\r\n                            x.mascot = data.mascot\r\n                            x.i_title = data.i_title\r\n                            x.i_stitle = data.i_stitle\r\n                            x.i_body = data.i_body\r\n                            x.i_bodytype = data.i_bodytype\r\n                            x.i_bodyoptions = data.i_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.i_media = data.i_media\r\n                            x.i_misc = data.i_misc\r\n                            x.color_field = data.color_field\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deleteinstance(id: any) {\r\n            await deleteinstance(id).then((res) => {\r\n                console.log(res);\r\n                setinstance(instance && instance.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n            })\r\n        }\r\n    }\r\n}","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const ActiveScreen1 = new Store<string>(\"LoadingScreen\");\r\n\r\n\r\nexport const useActiveScreen = () => {\r\n    const [ActiveScreen, setActiveScreen] = useStore(ActiveScreen1);\r\n\r\n    return {\r\n        ActiveScreen, setActiveScreen,\r\n\r\n    }\r\n};","import { Store, useStore } from \"./Store\"; \r\nimport getleveldetailsbyid from \"../utils/api/getleveldetailsbyid\";\r\n\r\n\r\nexport class leveldetailsItem {\r\n\r\n    id: String;\r\n    l_level: String;\r\n    l_icon: String;\r\n    l_qrcode: String;\r\n    l_title: String;\r\n    l_stitle: String;\r\n    l_body: String;\r\n    l_bodytype: String;\r\n    l_bodyoptions: String;\r\n    locations: boolean;\r\n    l_media: String;\r\n    l_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    SubLevelData: String;\r\n    GameDataLog: any;\r\n    constructor(o: {\r\n        id: String;\r\n        l_level: String;\r\n        l_icon: String;\r\n        l_qrcode: String;\r\n        l_title: String;\r\n        l_stitle: String;\r\n        l_body: String;\r\n        l_bodytype: String;\r\n        l_bodyoptions: String;\r\n        locations: boolean;\r\n        l_media: String;\r\n        l_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        SubLevelData: any;\r\n        GameDataLog: any;\r\n    }) {\r\n        this.id = o.id;\r\n        this.l_level = o.l_level;\r\n        this.l_icon = o.l_icon;\r\n        this.l_qrcode = o.l_qrcode;\r\n        this.l_title = o.l_title;\r\n        this.l_stitle = o.l_stitle;\r\n        this.l_body = o.l_body;\r\n        this.l_bodytype = o.l_bodytype;\r\n        this.l_bodyoptions = o.l_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.l_media = o.l_media;\r\n        this.l_misc = o.l_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.SubLevelData = o.SubLevelData;\r\n        this.GameDataLog = o.GameDataLog;\r\n    }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem | false>(false);\r\n\r\nexport const userActiveLevelDetailsStore = () => {\r\n    const [ActiveLevelDetails, setActiveLevelDetails] = useStore(leveldetailsStore);\r\n\r\n    return {\r\n        ActiveLevelDetails, setActiveLevelDetails,\r\n\r\n        async loadActiveleveldetails(id:any) {\r\n            await getleveldetailsbyid(id).then(\r\n                (data) => {\r\n                    // console.log(\"getleveldetails\", data.data.results[0]);\r\n                    setActiveLevelDetails(data.data.results[0]);\r\n                }\r\n            )\r\n        }\r\n    }\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getsublevel_data_byid from \"../utils/api/getsublevel_data_byid\";\r\n\r\n\r\nexport class leveldetailsItem {\r\n\r\n    created_at: String;\r\n    id: String;\r\n    instance_id: any;\r\n    level_id: any;\r\n    sl_body: String;\r\n    sl_bodyoptions: String;\r\n    sl_bodytype: String;\r\n    sl_icon: String;\r\n    sl_media: String;\r\n    sl_misc: null\r\n    sl_stitle: String;\r\n    sl_title: String;\r\n    sl_types: String;\r\n    updated_at: String;\r\n\r\n\r\n    constructor(o: {\r\n        created_at: String;\r\n        id: String;\r\n        instance_id: any;\r\n        level_id: any;\r\n        sl_body: String;\r\n        sl_bodyoptions: String;\r\n        sl_bodytype: String;\r\n        sl_icon: String;\r\n        sl_media: String;\r\n        sl_misc: null\r\n        sl_stitle: String;\r\n        sl_title: String;\r\n        sl_types: String;\r\n        updated_at: String;\r\n\r\n    }) {\r\n        this.id = o.id;\r\n        this.created_at = o.created_at\r\n        this.instance_id = o.instance_id\r\n        this.level_id = o.level_id\r\n        this.sl_body = o.sl_body\r\n        this.sl_bodyoptions = o.sl_bodyoptions\r\n        this.sl_bodytype = o.sl_bodytype\r\n        this.sl_icon = o.sl_icon\r\n        this.sl_media = o.sl_media\r\n        this.sl_misc = o.sl_misc\r\n        this.sl_stitle = o.sl_stitle\r\n        this.sl_title = o.sl_title\r\n        this.sl_types = o.sl_types\r\n        this.updated_at = o.updated_at\r\n    }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem | false>(false);\r\n\r\nexport const userActiveSubLevelDetailsStore = () => {\r\n    const [ActiveSubLevelDetails, setActiveSubLevelDetails] = useStore(leveldetailsStore);\r\n\r\n    return {\r\n        ActiveSubLevelDetails, setActiveSubLevelDetails,\r\n\r\n        async loadActiveSubleveldetails(id: any) {\r\n            await getsublevel_data_byid(id).then(\r\n                (data) => {\r\n                    console.log(\"sublevel\", data.data.results);\r\n                    setActiveSubLevelDetails(data.data.results);\r\n                }\r\n            )\r\n        }\r\n    }\r\n}"],"sourceRoot":""}