{"version":3,"sources":["webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"names":["SDPUtils","writeMediaSection","transceiver","caps","type","stream","dtlsRole","sdp","writeRtpDescription","kind","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","trackId","_initialTrackId","track","id","msid","sendEncodingParameters","ssrc","rtx","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","parseInt","i","length","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","name","toLowerCase","forEach","clockRate","JSON","parse","stringify","numChannels","Math","min","push","rtcpFeedback","filter","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","indexOf","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","find","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","description","e","Error","code","NotSupportedError","InvalidStateError","InvalidAccessError","TypeError","undefined","OperationError","module","exports","window","edgeVersion","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","fireAddTrack","pc","receiver","streams","trackEvent","Event","setTimeout","_dispatchEvent","RTCPeerConnection","config","this","_eventTarget","document","createDocumentFragment","method","bind","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","hasTurn","server","urls","url","console","warn","isString","filterIceServers","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","Object","defineProperty","prototype","configurable","get","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","s","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","enabled","removeTrack","sender","t","stop","map","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","shift","value","writable","bufferedCandidateEvents","bufferCandidates","end","keys","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","component","ufrag","usernameFragment","serializedCandidate","writeCandidate","assign","parseCandidate","toJSON","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","sessionpart","Promise","reject","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","isRejected","rejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","resolve","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","c","MediaStream","default","RTCRtpReceiver","getCapabilities","codec","isNewTrack","nativeTrack","removeTrackFromStreamAndFireEvent","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","reducedSize","addIceCandidate","candidateString","trim","getStats","selector","MediaStreamTrack","senderOrReceiver","promises","all","then","allStats","results","Map","stats","stat","set","ortcObjectName","obj","nativeGetstats","apply","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","methods","nativeMethod","args","error"],"mappings":"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","file":"39.deb45a8cc50c86bf6b91.js","sourcesContent":["/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"],"sourceRoot":""}