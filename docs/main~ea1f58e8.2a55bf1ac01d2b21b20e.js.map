{"version":3,"sources":["webpack:///./src/store/authStore.ts","webpack:///./src/utils/api/getlevel.ts","webpack:///./src/utils/api/postlevel.ts","webpack:///./src/utils/api/editlevel.ts","webpack:///./src/utils/api/deletelevel.ts","webpack:///./src/store/levelStore.ts","webpack:///./src/store/Store.ts","webpack:///./src/utils/api/addusererrorlog.ts","webpack:///./src/utils/actions.ts","webpack:///./src/utils/headers.js","webpack:///./src/utils/api/getsublevel_data_byid.ts","webpack:///./src/utils/api/getleveldetailsbyid.ts","webpack:///./src/utils/api/getleveldetailsbyqrid.ts","webpack:///./src/utils/api/editinstance.ts","webpack:///./src/utils/api/postinstance.ts","webpack:///./src/utils/api/deleteinstance.ts","webpack:///./src/utils/axios.ts","webpack:///./src/utils/api/getinstance.ts"],"names":["authStore","Store","localStorage","getItem","JSON","parse","String","useAuth","useStore","auth","setAuth","login","AuthToken","logout","clear","sessionStorage","i","getlevel","id","axios","get","headers","postlevel","data","post","editlevel","put","deletelevel","levelStore","levelstore","level","setlevel","loadlevel","then","results","err","console","log","logerror","response","loadlevelwithid","res","oldArray","oldarr","map","obj","x","l_level","instance_id","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","locations","l_media","l_misc","completion_image","clue_image","l_qr_id","unlock_after","filter","ele","initialValue","this","_state","index","subscribers","oldVal","newVal","newValue","Function","pingSubscribers","callback","currentIndex","store","useState","state","value","setValue","useLayoutEffect","subscribe","update","addusererrorlog","fileupload","token","file","instance","Authorization","file_upload","Sociallogin","newUserSignup","generateOTP","postGamedataLog","errres","error_title","error_message","stringify","additional_info","getsublevel_data_byid","getleveldetailsbyid","getleveldetailsbyqrid","editinstance","postinstance","deleteinstance","create","baseURL","getinstance"],"mappings":"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","file":"main~ea1f58e8.2a55bf1ac01d2b21b20e.js","sourcesContent":["import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('AuthToken') ? JSON.parse(String(localStorage.getItem('AuthToken'))) : false);\r\n\r\n\r\nexport const useAuth = () => {\r\n    const [auth, setAuth] = useStore(authStore);\r\n\r\n    return {\r\n        auth, setAuth,\r\n        login(AuthToken: string) {\r\n            setAuth(AuthToken);\r\n        },\r\n        logout() {            \r\n            localStorage.clear()\r\n            sessionStorage.clear()\r\n            setAuth(null);\r\n        },\r\n    }\r\n};","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getlevel = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postlevel = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/level/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editlevel = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/level/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editlevel;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deletelevel = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/level/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deletelevel;","import { Store, useStore } from './Store'\r\nimport getlevel from '../utils/api/getlevel'\r\nimport postlevel from '../utils/api/postlevel'\r\nimport editlevel from '../utils/api/editlevel'\r\nimport deletelevel from '../utils/api/deletelevel'\r\nimport { logerror } from 'utils/actions'\r\n\r\nexport class levelItem {\r\n  id: String\r\n  l_level: String\r\n  l_icon: String\r\n  l_qrcode: String\r\n  l_title: String\r\n  l_stitle: String\r\n  l_body: String\r\n  l_bodytype: String\r\n  l_bodyoptions: String\r\n  locations: boolean\r\n  l_media: String\r\n  l_misc: String\r\n  created_at: String\r\n  updated_at: String\r\n  instance_id: String\r\n  SubLevelData: String\r\n  GameDataLog: any\r\n  unlock_after: String\r\n  completion_image: String\r\n  clue_image: String\r\n  l_qr_id: String\r\n  scan_complete: String\r\n  progress: String\r\n  is_locked: String\r\n  TextData: any\r\n\r\n  constructor(o: {\r\n    id: String\r\n    l_level: String\r\n    l_icon: String\r\n    l_qrcode: String\r\n    l_title: String\r\n    l_stitle: String\r\n    l_body: String\r\n    l_bodytype: String\r\n    l_bodyoptions: String\r\n    locations: boolean\r\n    l_media: String\r\n    l_misc: String\r\n    created_at: String\r\n    updated_at: String\r\n    instance_id: String\r\n    SubLevelData: any\r\n    GameDataLog: any\r\n    unlock_after: String\r\n    completion_image: String\r\n    clue_image: String\r\n    l_qr_id: String\r\n    scan_complete: String\r\n    progress: String\r\n    is_locked: String\r\n    TextData: any\r\n  }) {\r\n    this.id = o.id\r\n    this.l_level = o.l_level\r\n    this.l_icon = o.l_icon\r\n    this.l_qrcode = o.l_qrcode\r\n    this.l_title = o.l_title\r\n    this.l_stitle = o.l_stitle\r\n    this.l_body = o.l_body\r\n    this.l_bodytype = o.l_bodytype\r\n    this.l_bodyoptions = o.l_bodyoptions\r\n    this.locations = o.locations\r\n    this.l_media = o.l_media\r\n    this.l_misc = o.l_misc\r\n    this.created_at = o.created_at\r\n    this.updated_at = o.updated_at\r\n    this.instance_id = o.instance_id\r\n    this.SubLevelData = o.SubLevelData\r\n    this.GameDataLog = o.GameDataLog\r\n\r\n    this.unlock_after = o.unlock_after\r\n    this.completion_image = o.completion_image\r\n    this.clue_image = o.clue_image\r\n    this.l_qr_id = o.l_qr_id\r\n    this.scan_complete = o.scan_complete\r\n    this.progress = o.progress\r\n    this.is_locked = o.is_locked\r\n    this.TextData = o.TextData\r\n  }\r\n}\r\n\r\nexport const levelStore = new Store<levelItem[] | false>(false)\r\n\r\nexport const levelstore = () => {\r\n  const [level, setlevel] = useStore(levelStore)\r\n\r\n  return {\r\n    level,\r\n    setlevel,\r\n\r\n    async loadlevel() {\r\n      await getlevel('')\r\n        .then(data => {\r\n          setlevel(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async loadlevelwithid(id: any) {\r\n      await getlevel(id)\r\n        .then(data => {\r\n          setlevel(data.data.results)\r\n          // console.log(data.data.results)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async postlevel(data: any) {\r\n      await postlevel(data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel((oldArray: any) => [...oldArray, res.data])\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async editlevel(id: any, data: any) {\r\n      await editlevel(id, data)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel(oldarr => {\r\n            return (\r\n              oldarr &&\r\n              oldarr.map((obj: any) => {\r\n                const getobj = (o: any) => {\r\n                  let x: any = o\r\n                  x.l_level = data.l_level\r\n                  x.instance_id = data.instance_id\r\n                  x.l_icon = data.l_icon\r\n                  x.l_qrcode = data.l_qrcode\r\n                  x.l_title = data.l_title\r\n                  x.l_stitle = data.l_stitle\r\n                  x.l_body = data.l_body\r\n                  x.l_bodytype = data.l_bodytype\r\n                  x.l_bodyoptions = data.l_bodyoptions\r\n                  x.locations = data.locations\r\n                  x.l_media = data.l_media\r\n                  x.l_misc = data.l_misc\r\n                  x.completion_image = data.completion_image\r\n                  x.clue_image = data.clue_image\r\n                  x.l_qr_id = data.l_qr_id\r\n                  x.unlock_after = data.unlock_after\r\n                  return x\r\n                }\r\n                return String(obj.id) === String(id) ? getobj(obj) : obj\r\n              })\r\n            )\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    },\r\n\r\n    async deletelevel(id: any) {\r\n      await deletelevel(id)\r\n        .then(res => {\r\n          console.log(res)\r\n          setlevel(level && level.filter(ele => ele.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          logerror(err, err.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\r\n\r\nexport class Store<T> {\r\n    private _state: T;\r\n    private subscribers: { [k: number]: Subscriber<T> };\r\n    private index: number;\r\n    private static id: number = 0;\r\n    id: number;\r\n\r\n    constructor(initialValue: T) {\r\n        this._state = initialValue;\r\n        this.index = 0;\r\n        this.subscribers = {};\r\n        this.id = Store.id++;\r\n    }\r\n\r\n    private pingSubscribers(oldVal: T, newVal: T) {\r\n        for (let id in this.subscribers) {\r\n            this.subscribers[id](oldVal, newVal);\r\n        }\r\n    }\r\n\r\n    update(newValue: ((old: T) => T) | T) {\r\n        let newVal: T;\r\n        if (newValue instanceof Function) {\r\n            newVal = newValue(this._state);\r\n        }\r\n        else {\r\n            newVal = newValue;\r\n        }\r\n        const oldVal = this._state;\r\n\r\n        this._state = newVal;\r\n        this.pingSubscribers(oldVal, newVal);\r\n\r\n        return newVal;\r\n    }\r\n\r\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\r\n    subscribe(callback: Subscriber<T>) {\r\n        const currentIndex = ++this.index;\r\n\r\n        this.subscribers[currentIndex] = callback;\r\n\r\n        const subscribers = this.subscribers;\r\n        return function unsubscribe() {\r\n            delete subscribers[currentIndex];\r\n        }\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport function useStore<T>(store: Store<T>) {\r\n    const [value, setValue] = useState(store.state);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\r\n            setValue(newVal);\r\n        });\r\n        return unsubscribe\r\n    }, [store.id]);\r\n\r\n\r\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\r\n        store.update(newVal);\r\n    }\r\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\r\n    return returnVal;\r\n}\r\n\r\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\r\n    [\r\n        { [k: string]: T },\r\n        (\r\n            id: string,\r\n            newVal: T | ((old: T) => T)\r\n        ) => void\r\n    ] {\r\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\r\n    const ids = [Object.entries(stores).map(item => item[1].id)];\r\n\r\n    useLayoutEffect(() => {\r\n        // console.log(\"stores has changed\")\r\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\r\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\r\n        }));\r\n\r\n        return () => unsubscribes.forEach(item => item());\r\n    }, [ids.join(\"-\")]);\r\n\r\n\r\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\r\n        stores[id].update(newVal)\r\n    }\r\n\r\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\r\n\r\n    return returnVal;\r\n}","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst addusererrorlog = async (data: any) => {\r\n    return (await axios.post(`user/usererrorlog/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default addusererrorlog;","import instance from 'utils/axios'\r\nimport addusererrorlog from './api/addusererrorlog'\r\n\r\n\r\nexport const fileupload = (callback: any, token: any, data: any, file: any) => {\r\n  instance\r\n    .post(`/api/v1/appdata/filemodel/create/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess', file)\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response, file)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const file_upload = (callback: any, token: any, data: any) => {\r\n  instance\r\n    .post(`/api/v1/appdata/filemodel/create/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const realtime = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(\r\n      `https://www.googleapis.com/analytics/v3/data/realtime?ids=ga:241653669&metrics=rt:activeUsers`,\r\n      {\r\n        headers: {\r\n          Authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n      }\r\n    )\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const updateGamedata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`/appdata/single_analytics/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const getAppdata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`/appdata/Screensdata/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const postAppdata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`/appdata/Screensdata/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const getanalsisdata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`/appdata/analytics/?readlatest=0`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const getalatestnalsisdata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`/appdata/analytics/?readlatest=1`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\n// api compass2 login\r\n\r\nexport const Sociallogin = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`user/social/signup/`, data, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const newUserSignup = (callback: (arg0: any, arg1: string) => void, token: any, data: any) => {\r\n  instance.post(`user/social/signup/normal/`, data, {\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\nexport const generateOTP = (callback: (arg0: any, arg1: string) => void, data: any) => {\r\n  instance.post(`user/phone/email/otp_verify/`, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then((res) => { callback(res, 'sucess') })\r\n    .catch(err => callback(err, err.response))\r\n}\r\n\r\n//instance\r\n\r\nexport const getinstancedata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`api/v1/appdata/instance/info/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const postinstancedata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`api/v1/appdata/instance/info/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const postGamedataLog = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`api/v1/appdata/gamedatalog/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\nexport const editinstancedata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .put(`api/v1/appdata/instance/` + id + `/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const deleteinstancedata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any\r\n) => {\r\n  instance\r\n    .delete(`api/v1/appdata/instance/` + id, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\n//logo\r\n\r\nexport const getlogodata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`api/v1/appdata/instancelogo/info/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const postlogodata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`api/v1/appdata/instancelogo/info/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const editlogodata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .put(`api/v1/appdata/instance/logo/` + id + `/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const deletelogodata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any\r\n) => {\r\n  instance\r\n    .delete(`api/v1/appdata/instance/logo/` + id, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\n//level\r\n\r\nexport const getleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`api/v1/appdata/level/info/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const postleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`api/v1/appdata/level/info/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const editleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .put(`api/v1/appdata/level/` + id + `/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const deleteleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any\r\n) => {\r\n  instance\r\n    .delete(`api/v1/appdata/level/` + id, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\n//sub level\r\n\r\nexport const getsubleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`api/v1/appdata/sublevel/info/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const postsubleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .post(`api/v1/appdata/sublevel/info/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const editsubleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any,\r\n  data: any\r\n) => {\r\n  instance\r\n    .put(`api/v1/appdata/sublevel/` + id + `/`, data, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const deletesubleveldata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any,\r\n  id: any\r\n) => {\r\n  instance\r\n    .delete(`api/v1/appdata/sublevel/` + id, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\n//userdata\r\n\r\nexport const getuserdata = (\r\n  callback: (arg0: any, arg1: string) => void,\r\n  token: any\r\n) => {\r\n  instance\r\n    .get(`user/list/`, {\r\n      headers: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      callback(res, 'sucess')\r\n    })\r\n    .catch(err => {\r\n      callback(err, err.response)\r\n      logerror(err, err.response)\r\n    })\r\n}\r\n\r\nexport const logerror = (err: any, errres: any) => {\r\n  console.log('========>>> error in frontend logged ', err)\r\n\r\n  let data = {\r\n    error_title: 'front end error',\r\n    error_message: JSON.stringify(errres),\r\n    additional_info: JSON.stringify(err)\r\n  }\r\n  addusererrorlog(data)\r\n}\r\n","/**\r\n * Created by rozer on 8/16/2018.\r\n */\r\n\r\n\r\nconst headers = (auth) => {\r\n    if (auth === null ||auth === \"null\" )\r\n      return ({\r\n         'Accept': 'application/json',\r\n      })\r\n   else\r\n      return ({\r\n         'Accept': 'application/json',\r\n         'Authorization': auth ? `Token ${JSON.parse(auth)}` : ''\r\n      })\r\n};\r\n\r\n\r\n\r\nexport default headers\r\n","import axios from '../axios'\r\nimport headers from '../headers'\r\n\r\nconst getsublevel_data_byid = async (id: any) => {\r\n  return await axios.get(`api/v1/appdata/sublevel/level/${id}/`, {\r\n    headers: headers(String(localStorage.getItem('AuthToken')))\r\n  })\r\n}\r\n\r\nexport default getsublevel_data_byid\r\n","import axios from '../axios'\r\nimport headers from '../headers'\r\n\r\nconst getleveldetailsbyid = async (id: any) => {\r\n  return await axios.get(`api/v1/appdata/level/list/${id}/`, {\r\n    headers: headers(String(localStorage.getItem('AuthToken')))\r\n  })\r\n}\r\n\r\nexport default getleveldetailsbyid\r\n","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getleveldetailsbyqrid = async (id:any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/level/qr/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getleveldetailsbyqrid;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst editinstance = async (id: any, data: any) => {\r\n\r\n    return (await axios.put(`api/v1/appdata/instance/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default editinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst postinstance = async (data: any) => {\r\n\r\n    return (await axios.post(`api/v1/appdata/instance/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default postinstance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst deleteinstance = async (id: any) => {\r\n\r\n    return (await axios.delete(`api/v1/appdata/instance/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default deleteinstance;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://apidc.mediacannibal.co/'\r\n});\r\n\r\nexport default instance;","import axios from '../axios';\r\nimport headers from '../headers';\r\n\r\nconst getinstance = async (id: any) => {\r\n\r\n    return (await axios.get(`api/v1/appdata/instance/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\r\n};\r\n\r\nexport default getinstance;"],"sourceRoot":""}