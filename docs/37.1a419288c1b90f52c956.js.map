{"version":3,"sources":["webpack:///./src/store/InstanceStore.ts"],"names":["instanceStore","Store","instanceStore1","instancestore","useStore","instance","setinstance","activeInstanceData","setactiveInstanceData","loadinstance","getinstance","then","data","results","console","log","loadinstancewithid","id","postinstance","res","oldArray","err","editinstance","oldarr","map","obj","x","String","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","color_field","deleteinstance","filter","ele"],"mappings":"2xDAKO,IA4GMA,EAAgB,IAAIC,KAA8B,GAElDC,EAAiB,IAAID,KAA+B,GAEpDE,EAAgB,WAEzB,QAAgCC,YAASJ,GAAzC,GAAOK,EAAP,KAAiBC,EAAjB,KAEA,IAAoDF,YAASF,GAA7D,GAAOK,EAAP,KAA2BC,EAA3B,KAEA,MAAO,CACHH,WAAUC,cAAaC,qBAAoBC,wBAErCC,aAHH,WAGkB,+IACXC,YAAY,KAAKC,MACnB,SAACC,GACGN,EAAYM,EAAKA,KAAKC,SACtBC,QAAQC,IAAI,mBAAqBH,EAAKA,KAAKC,YAJlC,8CAQfG,mBAXH,SAWsBC,GAAS,+IACxBP,YAAYO,GAAIN,MAClB,SAACC,GACGN,EAAYM,EAAKA,KAAKC,YAHA,8CAO5BK,aAlBH,SAkBgBN,GAAW,+IACpBM,YAAaN,GAAMD,MAAK,SAACQ,GAC3BL,QAAQC,IAAII,GACZb,GAAY,SAACc,GAAD,kBAAuBA,GAAvB,CAAiCD,EAAIP,aAF/C,OAGG,SAACS,GACNP,QAAQC,IAAIM,MALU,8CAQxBC,aA1BH,SA0BgBL,EAASL,GAAW,+IAC7BU,YAAaL,EAAIL,GAAMD,MAAK,SAACQ,GAC/BL,QAAQC,IAAII,GACZb,GAAY,SAACiB,GACT,OAAQA,GAAWA,EAAOC,KAAI,SAACC,GAC3B,IACQC,EAcR,OAAQC,OAAOF,EAAIR,MAAQU,OAAOV,KAd1BS,EAcwCD,GAb1CG,OAAShB,EAAKgB,OAChBF,EAAEG,OAASjB,EAAKiB,OAChBH,EAAEI,QAAUlB,EAAKkB,QACjBJ,EAAEK,SAAWnB,EAAKmB,SAClBL,EAAEM,OAASpB,EAAKoB,OAChBN,EAAEO,WAAarB,EAAKqB,WACpBP,EAAEQ,cAAgBtB,EAAKsB,cACvBR,EAAES,UAAYvB,EAAKuB,UACnBT,EAAEU,QAAUxB,EAAKwB,QACjBV,EAAEW,OAASzB,EAAKyB,OAChBX,EAAEY,YAAc1B,EAAK0B,YACdZ,GAE4CD,WAnB7D,OAsBG,SAACJ,GACNP,QAAQC,IAAIM,MAxBmB,8CA2BjCkB,eArDH,SAqDkBtB,GAAS,+IACpBsB,YAAetB,GAAIN,MAAK,SAACQ,GAC3BL,QAAQC,IAAII,GACZb,EAAYD,GAAYA,EAASmC,QAAO,SAAAC,GAAG,OAAIA,EAAIxB,KAAOA,SAFxD,OAGG,SAACE,GACNL,QAAQC,IAAII,MALU","file":"37.1a419288c1b90f52c956.js","sourcesContent":["import { Store, useStore } from \"./Store\";\nimport getinstance from \"../utils/api/getinstance\";\nimport editinstance from \"../utils/api/editinstance\";\nimport postinstance from \"../utils/api/postinstance\";\nimport deleteinstance from \"../utils/api/deleteinstance\";\nexport class instanceItem {\n\n    id: String;\n    i_icon: String;\n    mascot: String;\n    i_title: String;\n    i_stitle: String;\n    i_body: String;\n    i_bodytype: String;\n    i_bodyoptions: String;\n    locations: String;\n    i_media: String;\n    i_misc: String;\n    created_at: String;\n    updated_at: String;\n    color_field: String;\n    TextData: any;\n\n    constructor(o: {\n        id: String;\n        i_icon: String;\n        mascot: String;\n        i_title: String;\n        i_stitle: String;\n        i_body: String;\n        i_bodytype: String;\n        i_bodyoptions: String;\n        locations: String;\n        i_media: String;\n        i_misc: String;\n        created_at: String;\n        updated_at: String;\n        color_field: String;\n        TextData: any;\n\n    }) {\n        this.id = o.id;\n        this.i_icon = o.i_icon;\n        this.mascot = o.mascot;\n        this.i_title = o.i_title;\n        this.i_stitle = o.i_stitle;\n        this.i_body = o.i_body;\n        this.i_bodytype = o.i_bodytype;\n        this.i_bodyoptions = o.i_bodyoptions;\n        this.locations = o.locations;\n        this.i_media = o.i_media;\n        this.i_misc = o.i_misc;\n        this.created_at = o.created_at;\n        this.updated_at = o.updated_at;\n        this.color_field = o.color_field;\n        this.TextData = o.TextData;\n    }\n}\n\nexport class instanceItem1 {\n\n    id: String;\n    i_icon: String;\n    mascot: String;\n    i_title: String;\n    i_stitle: String;\n    i_body: String;\n    i_bodytype: String;\n    i_bodyoptions: String;\n    locations: String;\n    i_media: String;\n    i_misc: String;\n    created_at: String;\n    updated_at: String;\n    color_field: String;\n    TextData: any;\n\n    constructor(o: {\n        id: String;\n        i_icon: String;\n        mascot: String;\n        i_title: String;\n        i_stitle: String;\n        i_body: String;\n        i_bodytype: String;\n        i_bodyoptions: String;\n        locations: String;\n        i_media: String;\n        i_misc: String;\n        created_at: String;\n        updated_at: String;\n        color_field: String;\n        TextData: any;\n\n    }) {\n        this.id = o.id;\n        this.i_icon = o.i_icon;\n        this.mascot = o.mascot;\n        this.i_title = o.i_title;\n        this.i_stitle = o.i_stitle;\n        this.i_body = o.i_body;\n        this.i_bodytype = o.i_bodytype;\n        this.i_bodyoptions = o.i_bodyoptions;\n        this.locations = o.locations;\n        this.i_media = o.i_media;\n        this.i_misc = o.i_misc;\n        this.created_at = o.created_at;\n        this.updated_at = o.updated_at;\n        this.color_field = o.color_field;\n        this.TextData = o.TextData;\n    }\n}\n\nexport const instanceStore = new Store<instanceItem[] | false>(false);\n\nexport const instanceStore1 = new Store<instanceItem1[] | false>(false);\n\nexport const instancestore = () => {\n\n    const [instance, setinstance] = useStore(instanceStore);\n\n    const [activeInstanceData, setactiveInstanceData] = useStore(instanceStore1);\n\n    return {\n        instance, setinstance, activeInstanceData, setactiveInstanceData,\n\n        async loadinstance() {\n            await getinstance(\" \").then(\n                (data) => {\n                    setinstance(data.data.results);\n                    console.log(\"Instances Data: \",  data.data.results);\n                }\n            )\n        },\n        async loadinstancewithid(id: any) {\n            await getinstance(id).then(\n                (data) => {\n                    setinstance(data.data.results);\n                }\n            )\n        },\n        async postinstance(data: any) {\n            await postinstance(data).then((res) => {\n                console.log(res);\n                setinstance((oldArray: any) => [...oldArray, res.data]);\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        async editinstance(id: any, data: any) {\n            await editinstance(id, data).then((res) => {\n                console.log(res);\n                setinstance((oldarr) => {\n                    return (oldarr) && oldarr.map((obj: any) => {\n                        const getobj = (o: any) => {\n                            let x = o;\n                            x.i_icon = data.i_icon\n                            x.mascot = data.mascot\n                            x.i_title = data.i_title\n                            x.i_stitle = data.i_stitle\n                            x.i_body = data.i_body\n                            x.i_bodytype = data.i_bodytype\n                            x.i_bodyoptions = data.i_bodyoptions\n                            x.locations = data.locations\n                            x.i_media = data.i_media\n                            x.i_misc = data.i_misc\n                            x.color_field = data.color_field\n                            return x;\n                        }\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\n                    })\n                })\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        async deleteinstance(id: any) {\n            await deleteinstance(id).then((res) => {\n                console.log(res);\n                setinstance(instance && instance.filter(ele => ele.id !== id))\n            }).catch((res) => {\n                console.log(res);\n            })\n        }\n    }\n}"],"sourceRoot":""}