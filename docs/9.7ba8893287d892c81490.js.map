{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","onClick","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","borderJoinStyle","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","enumerable","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","interpolate","pointValue","linePoints","firstValue","lastValue","getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","createBoundaryLine","buildStackLine","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","lineLoop","targetLoop","drawfill","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","getDecimalForPixel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","file":"9.7ba8893287d892c81490.js","sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}