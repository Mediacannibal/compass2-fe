{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","layouts","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","Chart","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","enumerable","version","unregister","ArcElement","chartX","chartY","rAdjust","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","configurable","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","hitbox","boxMap","newBoxes","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","numberOrZero","param","logarithmic","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","file":"15.3131d88a98dc6bacece5.js","sourcesContent":["/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n      if (rtl) {\n        const boxMap = hitboxes.reduce((map, box) => {\n          map[box.row] = map[box.row] || [];\n          map[box.row].push(box);\n          return map;\n        }, {});\n        const newBoxes = [];\n        Object.keys(boxMap).forEach(key => {\n          boxMap[key].reverse();\n          newBoxes.push(...boxMap[key]);\n        });\n        me.legendHitBoxes = newBoxes;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}