{"version":3,"sources":["webpack:///./src/store/InstanceStore.ts"],"names":["instanceStore","Store","instanceStore1","localStorage","getItem","JSON","parse","String","instancestore","useStore","instance","setinstance","activeInstanceData","setactiveInstanceData","loadinstance","getinstance","then","data","results","console","log","loadinstancewithcallback","callback","loadinstancewithid","id","postinstance","res","oldArray","err","editinstance","oldarr","map","obj","x","i_icon","mascot","i_title","i_stitle","i_body","i_bodytype","i_bodyoptions","locations","i_media","i_misc","color_field","deleteinstance","filter","ele"],"mappings":"2xDAKO,IA8GMA,EAAgB,IAAIC,KAA8B,GAElDC,EAAiB,IAAID,IAAqD,oBAAjBE,aAA+B,OAAOA,aAAaC,QAAQ,mBAAoBC,KAAKC,MAAMC,OAAOJ,aAAaC,QAAQ,qBAE/KI,EAAgB,WAEzB,QAAgCC,YAAST,GAAzC,GAAOU,EAAP,KAAiBC,EAAjB,KAEA,IAAoDF,YAASP,GAA7D,GAAOU,EAAP,KAA2BC,EAA3B,KAEA,MAAO,CACHH,WAAUC,cAAaC,qBAAoBC,wBAErCC,aAHH,WAGkB,+IACXC,YAAY,KAAKC,MACnB,SAACC,GACGN,EAAYM,EAAKA,KAAKC,SACtBC,QAAQC,IAAI,mBAAqBH,EAAKA,KAAKC,YAJlC,8CASfG,yBAZH,SAY4BC,GAAc,+IACnCP,YAAY,KAAKC,MACnB,SAACC,GACGE,QAAQC,IAAI,mBAAqBH,EAAKA,KAAKC,SAC3CI,EAASL,EAAKA,KAAKC,YAJc,8CASvCK,mBArBH,SAqBsBC,GAAS,+IACxBT,YAAYS,GAAIR,MAClB,SAACC,GACGN,EAAYM,EAAKA,KAAKC,YAHA,8CAQ5BO,aA7BH,SA6BgBR,GAAW,+IACpBQ,YAAaR,GAAMD,MAAK,SAACU,GAC3BP,QAAQC,IAAIM,GACZf,GAAY,SAACgB,GAAD,kBAAuBA,GAAvB,CAAiCD,EAAIT,aAF/C,OAGG,SAACW,GACNT,QAAQC,IAAIQ,MALU,8CASxBC,aAtCH,SAsCgBL,EAASP,GAAW,+IAC7BY,YAAaL,EAAIP,GAAMD,MAAK,SAACU,GAC/BP,QAAQC,IAAIM,GACZf,GAAY,SAACmB,GACT,OAAQA,GAAWA,EAAOC,KAAI,SAACC,GAC3B,IACQC,EAcR,OAAQ1B,OAAOyB,EAAIR,MAAQjB,OAAOiB,KAd1BS,EAcwCD,GAb1CE,OAASjB,EAAKiB,OAChBD,EAAEE,OAASlB,EAAKkB,OAChBF,EAAEG,QAAUnB,EAAKmB,QACjBH,EAAEI,SAAWpB,EAAKoB,SAClBJ,EAAEK,OAASrB,EAAKqB,OAChBL,EAAEM,WAAatB,EAAKsB,WACpBN,EAAEO,cAAgBvB,EAAKuB,cACvBP,EAAEQ,UAAYxB,EAAKwB,UACnBR,EAAES,QAAUzB,EAAKyB,QACjBT,EAAEU,OAAS1B,EAAK0B,OAChBV,EAAEW,YAAc3B,EAAK2B,YACdX,GAE4CD,WAnB7D,OAsBG,SAACJ,GACNT,QAAQC,IAAIQ,MAxBmB,8CA4BjCiB,eAlEH,SAkEkBrB,GAAS,+IACpBqB,YAAerB,GAAIR,MAAK,SAACU,GAC3BP,QAAQC,IAAIM,GACZf,EAAYD,GAAYA,EAASoC,QAAO,SAAAC,GAAG,OAAIA,EAAIvB,KAAOA,SAFxD,OAGG,SAACE,GACNP,QAAQC,IAAIM,MALU","file":"37.64a14c635f4e51392de8.js","sourcesContent":["import { Store, useStore } from \"./Store\";\r\nimport getinstance from \"../utils/api/getinstance\";\r\nimport editinstance from \"../utils/api/editinstance\";\r\nimport postinstance from \"../utils/api/postinstance\";\r\nimport deleteinstance from \"../utils/api/deleteinstance\";\r\nexport class instanceItem {\r\n\r\n    id: String;\r\n    i_icon: String;\r\n    mascot: String;\r\n    i_title: String;\r\n    i_stitle: String;\r\n    i_body: String;\r\n    i_bodytype: String;\r\n    i_bodyoptions: String;\r\n    locations: String;\r\n    i_media: String;\r\n    i_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    color_field: String;\r\n    TextData: any;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_icon: String;\r\n        mascot: String;\r\n        i_title: String;\r\n        i_stitle: String;\r\n        i_body: String;\r\n        i_bodytype: String;\r\n        i_bodyoptions: String;\r\n        locations: String;\r\n        i_media: String;\r\n        i_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        color_field: String;\r\n        TextData: any;\r\n\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_icon = o.i_icon;\r\n        this.mascot = o.mascot;\r\n        this.i_title = o.i_title;\r\n        this.i_stitle = o.i_stitle;\r\n        this.i_body = o.i_body;\r\n        this.i_bodytype = o.i_bodytype;\r\n        this.i_bodyoptions = o.i_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.i_media = o.i_media;\r\n        this.i_misc = o.i_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.color_field = o.color_field;\r\n        this.TextData = o.TextData;\r\n    }\r\n}\r\n\r\nexport class instanceItem1 {\r\n\r\n    id: String;\r\n    i_icon: String;\r\n    mascot: String;\r\n    i_title: String;\r\n    i_stitle: String;\r\n    i_body: String;\r\n    i_bodytype: String;\r\n    i_bodyoptions: String;\r\n    locations: String;\r\n    i_media: String;\r\n    i_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    color_field: String;\r\n    TextData: any;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_icon: String;\r\n        mascot: String;\r\n        i_title: String;\r\n        i_stitle: String;\r\n        i_body: String;\r\n        i_bodytype: String;\r\n        i_bodyoptions: String;\r\n        locations: String;\r\n        i_media: String;\r\n        i_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        color_field: String;\r\n        TextData: any;\r\n\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_icon = o.i_icon;\r\n        this.mascot = o.mascot;\r\n        this.i_title = o.i_title;\r\n        this.i_stitle = o.i_stitle;\r\n        this.i_body = o.i_body;\r\n        this.i_bodytype = o.i_bodytype;\r\n        this.i_bodyoptions = o.i_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.i_media = o.i_media;\r\n        this.i_misc = o.i_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.color_field = o.color_field;\r\n        this.TextData = o.TextData;\r\n    }\r\n}\r\n\r\n\r\n// setactiveInstanceData(JSON.parse(String(localStorage.getItem('ActiveInstance'))))\r\nexport const instanceStore = new Store<instanceItem[] | false>(false);\r\n\r\nexport const instanceStore1 = new Store<instanceItem1 | false>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('ActiveInstance') ? JSON.parse(String(localStorage.getItem('ActiveInstance'))) : false);\r\n\r\nexport const instancestore = () => {\r\n\r\n    const [instance, setinstance] = useStore(instanceStore);\r\n\r\n    const [activeInstanceData, setactiveInstanceData] = useStore(instanceStore1);\r\n\r\n    return {\r\n        instance, setinstance, activeInstanceData, setactiveInstanceData,\r\n\r\n        async loadinstance() {\r\n            await getinstance(\" \").then(\r\n                (data) => {\r\n                    setinstance(data.data.results);\r\n                    console.log(\"Instances Data: \",  data.data.results);\r\n                }\r\n            )\r\n        },\r\n\r\n        async loadinstancewithcallback(callback:any) {\r\n            await getinstance(\" \").then(\r\n                (data) => {\r\n                    console.log(\"Instances Data: \",  data.data.results);\r\n                    callback(data.data.results)\r\n                }\r\n            )\r\n        },\r\n\r\n        async loadinstancewithid(id: any) {\r\n            await getinstance(id).then(\r\n                (data) => {\r\n                    setinstance(data.data.results);\r\n                }\r\n            )\r\n        },\r\n\r\n        async postinstance(data: any) {\r\n            await postinstance(data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldArray: any) => [...oldArray, res.data]);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n\r\n        async editinstance(id: any, data: any) {\r\n            await editinstance(id, data).then((res) => {\r\n                console.log(res);\r\n                setinstance((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.i_icon = data.i_icon\r\n                            x.mascot = data.mascot\r\n                            x.i_title = data.i_title\r\n                            x.i_stitle = data.i_stitle\r\n                            x.i_body = data.i_body\r\n                            x.i_bodytype = data.i_bodytype\r\n                            x.i_bodyoptions = data.i_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.i_media = data.i_media\r\n                            x.i_misc = data.i_misc\r\n                            x.color_field = data.color_field\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        \r\n        async deleteinstance(id: any) {\r\n            await deleteinstance(id).then((res) => {\r\n                console.log(res);\r\n                setinstance(instance && instance.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n            })\r\n        }\r\n    }\r\n}"],"sourceRoot":""}