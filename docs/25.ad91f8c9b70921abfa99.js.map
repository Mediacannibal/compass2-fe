{"version":3,"sources":["webpack:///./src/store/levelStore.ts","webpack:///./src/store/logoStore.ts","webpack:///./src/utils/api/getlogo.ts","webpack:///./src/utils/api/editlogo.ts","webpack:///./src/utils/api/postlogo.ts","webpack:///./src/utils/api/deletelogo.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/utils/api/getlogo_arrayposition.ts","webpack:///./src/utils/api/getlogo_arrayposition_iid.ts","webpack:///./src/utils/api/editinstance.ts","webpack:///./src/utils/api/postinstance.ts","webpack:///./src/utils/api/deleteinstance.ts","webpack:///./src/utils/api/getlevel.ts","webpack:///./src/utils/api/postlevel.ts","webpack:///./src/utils/api/editlevel.ts","webpack:///./src/utils/api/deletelevel.ts","webpack:///./src/store/leveldetailsStore.ts","webpack:///./src/utils/api/getleveldetails.ts"],"names":["levelStore","Store","levelstore","useStore","level","setlevel","loadlevel","getlevel","then","data","results","loadlevelwithid","id","console","log","postlevel","res","oldArray","err","editlevel","oldarr","map","obj","x","String","l_level","instance_id","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","locations","l_media","l_misc","completion_image","clue_image","l_qr_id","unlock_after","deletelevel","filter","ele","logoStore","logostore","logo","setlogo","loadlogo","getlogo","loadlogowithid","postlogo","editlogo","i_logo","position","section","deletelogo","axios","get","headers","localStorage","getItem","put","post","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","getlogo_arrayposition","loadlogo_arrayposition_iid","getlogo_arrayposition_iid","editinstance","postinstance","deleteinstance","leveldetailsStore","leveldetailslstore","leveldetails","setleveldetails","loadleveldetails","getleveldetails"],"mappings":"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","file":"25.ad91f8c9b70921abfa99.js","sourcesContent":["import { Store, useStore } from \"./Store\";\nimport getlevel from \"../utils/api/getlevel\";\nimport postlevel from \"../utils/api/postlevel\";\nimport editlevel from \"../utils/api/editlevel\";\nimport deletelevel from \"../utils/api/deletelevel\";\n\nexport class levelItem {\n\n    id: String;\n    l_level: String;\n    l_icon: String;\n    l_qrcode: String;\n    l_title: String;\n    l_stitle: String;\n    l_body: String;\n    l_bodytype: String;\n    l_bodyoptions: String;\n    locations: boolean;\n    l_media: String;\n    l_misc: String;\n    created_at: String;\n    updated_at: String;\n    instance_id: String;\n    SubLevelData: String;\n    GameDataLog: any;\n    unlock_after: String;\n    completion_image: String;\n    clue_image: String;\n    l_qr_id: String;\n    scan_complete: String;\n    progress: String;\n    is_locked: String;\n    TextData: any;\n\n    constructor(o: {\n        id: String;\n        l_level: String;\n        l_icon: String;\n        l_qrcode: String;\n        l_title: String;\n        l_stitle: String;\n        l_body: String;\n        l_bodytype: String;\n        l_bodyoptions: String;\n        locations: boolean;\n        l_media: String;\n        l_misc: String;\n        created_at: String;\n        updated_at: String;\n        instance_id: String;\n        SubLevelData: any;\n        GameDataLog: any;\n        unlock_after: String;\n        completion_image: String;\n        clue_image: String;\n        l_qr_id: String;\n        scan_complete: String;\n        progress: String;\n        is_locked: String;\n        TextData: any;\n\n    }) {\n        this.id = o.id;\n        this.l_level = o.l_level;\n        this.l_icon = o.l_icon;\n        this.l_qrcode = o.l_qrcode;\n        this.l_title = o.l_title;\n        this.l_stitle = o.l_stitle;\n        this.l_body = o.l_body;\n        this.l_bodytype = o.l_bodytype;\n        this.l_bodyoptions = o.l_bodyoptions;\n        this.locations = o.locations;\n        this.l_media = o.l_media;\n        this.l_misc = o.l_misc;\n        this.created_at = o.created_at;\n        this.updated_at = o.updated_at;\n        this.instance_id = o.instance_id;\n        this.SubLevelData = o.SubLevelData;\n        this.GameDataLog = o.GameDataLog;\n\n        this.unlock_after = o.unlock_after;\n        this.completion_image = o.completion_image;\n        this.clue_image = o.clue_image;\n        this.l_qr_id = o.l_qr_id;\n        this.scan_complete = o.scan_complete;\n        this.progress = o.progress;\n        this.is_locked = o.is_locked;\n        this.TextData=o.TextData\n    }\n}\n\nexport const levelStore = new Store<levelItem[] | false>(false);\n\nexport const levelstore = () => {\n    const [level, setlevel] = useStore(levelStore);\n\n    return {\n        level, setlevel,\n\n        async loadlevel() {\n            await getlevel(\"\").then(\n                (data) => {\n                    setlevel(data.data.results);\n                }\n            )\n        },\n        async loadlevelwithid(id: any) {\n            await getlevel(id).then(\n                (data) => {\n                    setlevel(data.data.results);\n                    console.log(data.data.results);\n\n                }\n            )\n\n        },\n        async postlevel(data: any) {\n            await postlevel(data).then((res) => {\n                console.log(res);\n                setlevel((oldArray: any) => [...oldArray, res.data]);\n\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        async editlevel(id: any, data: any) {\n            await editlevel(id, data).then((res) => {\n                console.log(res);\n                setlevel((oldarr) => {\n                    return (oldarr) && oldarr.map((obj: any) => {\n                        const getobj = (o: any) => {\n                            let x = o;\n                            x.l_level = data.l_level\n                            x.instance_id = data.instance_id\n                            x.l_icon = data.l_icon\n                            x.l_qrcode = data.l_qrcode\n                            x.l_title = data.l_title\n                            x.l_stitle = data.l_stitle\n                            x.l_body = data.l_body\n                            x.l_bodytype = data.l_bodytype\n                            x.l_bodyoptions = data.l_bodyoptions\n                            x.locations = data.locations\n                            x.l_media = data.l_media\n                            x.l_misc = data.l_misc\n                            x.completion_image = data.completion_image\n                            x.clue_image = data.clue_image\n                            x.l_qr_id = data.l_qr_id\n                            x.unlock_after = data.unlock_after\n                            return x;\n                        }\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\n                    })\n                })\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        async deletelevel(id: any) {\n            await deletelevel(id).then((res) => {\n                console.log(res);\n                setlevel(level && level.filter(ele => ele.id !== id))\n            }).catch((res) => {\n                console.log(res);\n            })\n        }\n    }\n}","import { Store, useStore } from \"./Store\";\nimport getlogo from \"../utils/api/getlogo\";\nimport editlogo from \"../utils/api/editlogo\";\nimport postlogo from \"../utils/api/postlogo\";\nimport deletelogo from \"../utils/api/deletelogo\";\nexport class logoItem {\n\n    id: String;\n    i_logo: String;\n    position: String;\n    section: String;\n    created_at: String;\n    updated_at: String;\n    instance_id: String;\n\n    constructor(o: {\n        id: String;\n        i_logo: String;\n        position: String;\n        section: String;\n        created_at: String;\n        updated_at: String;\n        instance_id: String;\n    }) {\n        this.id = o.id;\n        this.i_logo = o.i_logo;\n        this.position = o.position;\n        this.section = o.section;\n        this.created_at = o.created_at;\n        this.updated_at = o.updated_at;\n        this.instance_id = o.instance_id;\n    }\n}\n\nexport const logoStore = new Store<logoItem[] | false>(false);\n\nexport const logostore = () => {\n    const [logo, setlogo] = useStore(logoStore);\n\n    return {\n        logo, setlogo,\n\n        async loadlogo() {\n            await getlogo(\"\").then(\n                (data) => {\n                    setlogo(data.data.results);\n                }\n            ) \n        },\n        async loadlogowithid(id: any) {\n            await getlogo(id).then(\n                (data) => {\n                      setlogo(data.data.results);\n                }\n            )\n\n        },\n        async postlogo(data: any) {\n            await postlogo(data).then((res) => {\n                   setlogo((oldArray: any) => [...oldArray, res.data]);\n\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        async editlogo(id: any, data: any) {\n            await editlogo(id, data).then((res) => {\n                  setlogo((oldarr) => {\n                    return (oldarr) && oldarr.map((obj: any) => {\n                        const getobj = (o: any) => {\n                            let x = o;\n                            x.instance_id = data.instance_id\n                            x.i_logo = data.i_logo\n                            x.position = data.position\n                            x.section = data.section\n                            return x;\n                        }\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\n                    })\n                })\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        async deletelogo(id: any) {\n            await deletelogo(id).then((res) => {\n                   setlogo(logo && logo.filter(ele => ele.id !== id))\n            }).catch((res) => {\n                console.log(res);\n\n            })\n        }\n    }\n\n}\n ","import axios from '../axios';\nimport headers from '../headers';\n\nconst getlogo = async (id:any) => {\n\n    return (await axios.get(`api/v1/appdata/instancelogo/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getlogo;","import axios from '../axios';\nimport headers from '../headers';\n\nconst editlogo = async (id: any, data: any) => {\n\n    return (await axios.put(`api/v1/appdata/instance/logo/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default editlogo;","import axios from '../axios';\nimport headers from '../headers';\n\nconst postlogo = async (data: any) => {\n\n    return (await axios.post(`api/v1/appdata/instancelogo/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default postlogo;","import axios from '../axios';\nimport headers from '../headers';\n\nconst deletelogo = async (id: any) => {\n\n    return (await axios.delete(`api/v1/appdata/instance/logo/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default deletelogo;","import { Store, useStore } from \"./Store\";\nimport getlogo_arrayposition from \"../utils/api/getlogo_arrayposition\";\nimport getlogo_arrayposition_iid from \"utils/api/getlogo_arrayposition_iid\";\n\nexport class logopositionItem {\n\n    id: String;\n    i_logo: String;\n    position: String;\n    section: String\n    created_at: String;\n    updated_at: String;\n    instance_id: String;\n\n    constructor(o: {\n        id: String;\n        i_logo: String;\n        position: String;\n        section: String\n        created_at: String;\n        updated_at: String;\n        instance_id: String;\n    }) {\n        this.id = o.id;\n        this.i_logo = o.i_logo;\n        this.position = o.position;\n        this.section = o.section;\n        this.created_at = o.created_at;\n        this.updated_at = o.updated_at;\n        this.instance_id = o.instance_id;\n    }\n}\n\nexport class temp {\n    section1: logopositionItem[][]\n    section2: logopositionItem[][]\n    section3: logopositionItem[][]\n    constructor(o: {\n        section1: logopositionItem[][];\n        section2: logopositionItem[][];\n        section3: logopositionItem[][];\n    }) {\n        this.section1 = o.section1;\n        this.section2 = o.section2;\n        this.section3 = o.section3;\n    }\n}\n\nexport const logopositionStore = new Store<temp | false>(false);\n\nexport const logopositionstore = () => {\n    const [logoposition, setlogoposition] = useStore(logopositionStore);\n\n    return {\n        logoposition, setlogoposition,\n\n        async loadlogo_arrayposition() {\n            await getlogo_arrayposition().then(\n                (data) => {\n                    setlogoposition(data.data.results);\n                }\n            )\n        },\n        async loadlogo_arrayposition_iid(id: any) {\n            await getlogo_arrayposition_iid(id).then(\n                (data) => {\n                    setlogoposition(data.data.results);\n                }\n            )\n        },\n    }\n\n}","import axios from '../axios';\nimport headers from '../headers';\n\nconst getlogo_arrayposition = async () => {\n\n    return (await axios.get(`api/v1/appdata/instance/logo/position/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getlogo_arrayposition;","import axios from '../axios';\nimport headers from '../headers';\n\nconst getlogo_arrayposition_iid = async (id:any) => {\n\n    return (await axios.get(`api/v1/appdata/instance/logo/position/${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getlogo_arrayposition_iid;","import axios from '../axios';\nimport headers from '../headers';\n\nconst editinstance = async (id: any, data: any) => {\n\n    return (await axios.put(`api/v1/appdata/instance/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default editinstance;","import axios from '../axios';\nimport headers from '../headers';\n\nconst postinstance = async (data: any) => {\n\n    return (await axios.post(`api/v1/appdata/instance/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default postinstance;","import axios from '../axios';\nimport headers from '../headers';\n\nconst deleteinstance = async (id: any) => {\n\n    return (await axios.delete(`api/v1/appdata/instance/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default deleteinstance;","import axios from '../axios';\nimport headers from '../headers';\n\nconst getlevel = async (id: any) => {\n\n    return (await axios.get(`api/v1/appdata/level/info/?instance_id=${id}`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getlevel;","import axios from '../axios';\nimport headers from '../headers';\n\nconst postlevel = async (data: any) => {\n\n    return (await axios.post(`api/v1/appdata/level/info/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default postlevel;","import axios from '../axios';\nimport headers from '../headers';\n\nconst editlevel = async (id: any, data: any) => {\n\n    return (await axios.put(`api/v1/appdata/level/${id}/`, data, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default editlevel;","import axios from '../axios';\nimport headers from '../headers';\n\nconst deletelevel = async (id: any) => {\n\n    return (await axios.delete(`api/v1/appdata/level/${id}/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default deletelevel;","import { Store, useStore } from \"./Store\";\nimport getleveldetails from \"../utils/api/getleveldetails\";\nexport class leveldetailsItem {\n\n    id: String;\n    l_level: String;\n    l_icon: String;\n    l_qrcode: String;\n    l_title: String;\n    l_stitle: String;\n    l_body: String;\n    l_bodytype: String;\n    l_bodyoptions: String;\n    locations: boolean;\n    l_media: String;\n    l_misc: String;\n    created_at: String;\n    updated_at: String;\n    instance_id: String;\n    SubLevelData: String;\n    GameDataLog: any;\n    unlock_after: String;\n    completion_image: String;\n    clue_image: String;\n    l_qr_id: String;\n    scan_complete: String;\n    progress: String;\n    is_locked: String;\n    TextData: any\n\n    constructor(o: {\n        id: String;\n        l_level: String;\n        l_icon: String;\n        l_qrcode: String;\n        l_title: String;\n        l_stitle: String;\n        l_body: String;\n        l_bodytype: String;\n        l_bodyoptions: String;\n        locations: boolean;\n        l_media: String;\n        l_misc: String;\n        created_at: String;\n        updated_at: String;\n        instance_id: String;\n        SubLevelData: any;\n        GameDataLog: any;\n        unlock_after: String;\n        completion_image: String;\n        clue_image: String;\n        l_qr_id: String;\n        scan_complete: String;\n        progress: String;\n        is_locked: String;\n        TextData: any\n\n    }) {\n        this.id = o.id;\n        this.l_level = o.l_level;\n        this.l_icon = o.l_icon;\n        this.l_qrcode = o.l_qrcode;\n        this.l_title = o.l_title;\n        this.l_stitle = o.l_stitle;\n        this.l_body = o.l_body;\n        this.l_bodytype = o.l_bodytype;\n        this.l_bodyoptions = o.l_bodyoptions;\n        this.locations = o.locations;\n        this.l_media = o.l_media;\n        this.l_misc = o.l_misc;\n        this.created_at = o.created_at;\n        this.updated_at = o.updated_at;\n        this.instance_id = o.instance_id;\n        this.SubLevelData = o.SubLevelData;\n        this.GameDataLog = o.GameDataLog;\n\n        this.unlock_after = o.unlock_after;\n        this.completion_image = o.completion_image;\n        this.clue_image = o.clue_image;\n        this.l_qr_id = o.l_qr_id;\n        this.scan_complete = o.scan_complete;\n        this.progress = o.progress;\n        this.is_locked = o.is_locked;\n\n        this.TextData = o.TextData\n\n\n    }\n}\n\nexport const leveldetailsStore = new Store<leveldetailsItem[] | false>(false);\n\nexport const leveldetailslstore = () => {\n    const [leveldetails, setleveldetails] = useStore(leveldetailsStore);\n\n    return {\n        leveldetails, setleveldetails,\n\n        async loadleveldetails() {\n            await getleveldetails().then(\n                (data) => {\n                    console.log(data.data.results);\n\n                    setleveldetails(data.data.results);\n                }\n            )\n        }\n    }\n}","import axios from '../axios';\nimport headers from '../headers';\n\nconst getleveldetails = async () => {\n\n    return (await axios.get(`api/v1/appdata/level/list/`, { \"headers\": headers(String(localStorage.getItem(\"AuthToken\"))) }));\n};\n\nexport default getleveldetails;"],"sourceRoot":""}