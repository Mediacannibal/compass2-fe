{"version":3,"sources":["webpack:///./src/store/Store.ts","webpack:///./src/store/authStore.ts","webpack:///./src/store/levelStore.ts","webpack:///./src/store/logoStore.ts","webpack:///./src/store/logopositionStore.ts","webpack:///./src/store/userStore.ts","webpack:///./src/store/leveldetailsStore.ts","webpack:///./src/store/sublevelStore.ts"],"names":["Store","initialValue","this","_state","index","subscribers","id","oldVal","newVal","newValue","Function","pingSubscribers","callback","currentIndex","useStore","store","useState","state","value","setValue","useLayoutEffect","subscribe","update","authStore","localStorage","getItem","JSON","parse","String","useAuth","auth","setAuth","login","AuthToken","logout","clear","sessionStorage","levelStore","levelstore","level","setlevel","loadlevel","getlevel","then","data","console","log","results","loadlevelwithid","postlevel","res","oldArray","err","editlevel","oldarr","map","obj","x","l_level","instance_id","l_icon","l_qrcode","l_title","l_stitle","l_body","l_bodytype","l_bodyoptions","locations","l_media","l_misc","completion_image","clue_image","l_qr_id","deletelevel","filter","ele","logoStore","logostore","logo","setlogo","loadlogo","getlogo","loadlogowithid","postlogo","editlogo","i_logo","position","section","deletelogo","logopositionStore","logopositionstore","logoposition","setlogoposition","loadlogo_arrayposition","getlogo_arrayposition","loadlogo_arrayposition_iid","getlogo_arrayposition_iid","userStore","userDetail","userstore","user","setuser","selfuser","setselfuser","loaduser","getuser","edituser","image","firstname","lastname","email","address","dob","user_type","gender","auth_type","photo_url","dial_code","phone","leveldetailsStore","leveldetailslstore","leveldetails","setleveldetails","loadleveldetails","getleveldetails","sublevelStore","sublevel1Store","sublevelstore","sublevel","setsublevel","sublevel1","setsublevel1","loadsublevel","getsublevel","loadsublevelwithid","instanceid","levelid","postsublevel","editsublevel","level_id","sl_types","sl_icon","sl_title","sl_stitle","sl_body","sl_bodytype","sl_bodyoptions","sl_misc","sl_media","deletesublevel","loadsublevel1_data_byid","getsublevel_data_byid"],"mappings":"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","file":"46.d97cc7e62df54df1b031.js","sourcesContent":["import { useLayoutEffect, useState } from \"react\";\r\n\r\ntype Subscriber<T> = (oldVal: T, newVal: T) => any;\r\n\r\nexport class Store<T> {\r\n    private _state: T;\r\n    private subscribers: { [k: number]: Subscriber<T> };\r\n    private index: number;\r\n    private static id: number = 0;\r\n    id: number;\r\n\r\n    constructor(initialValue: T) {\r\n        this._state = initialValue;\r\n        this.index = 0;\r\n        this.subscribers = {};\r\n        this.id = Store.id++;\r\n    }\r\n\r\n    private pingSubscribers(oldVal: T, newVal: T) {\r\n        for (let id in this.subscribers) {\r\n            this.subscribers[id](oldVal, newVal);\r\n        }\r\n    }\r\n\r\n    update(newValue: ((old: T) => T) | T) {\r\n        let newVal: T;\r\n        if (newValue instanceof Function) {\r\n            newVal = newValue(this._state);\r\n        }\r\n        else {\r\n            newVal = newValue;\r\n        }\r\n        const oldVal = this._state;\r\n\r\n        this._state = newVal;\r\n        this.pingSubscribers(oldVal, newVal);\r\n\r\n        return newVal;\r\n    }\r\n\r\n    /**subscribe to the store. @callback is called with [oldVal, and newVal] @returns a function that unsubscribes */\r\n    subscribe(callback: Subscriber<T>) {\r\n        const currentIndex = ++this.index;\r\n\r\n        this.subscribers[currentIndex] = callback;\r\n\r\n        const subscribers = this.subscribers;\r\n        return function unsubscribe() {\r\n            delete subscribers[currentIndex];\r\n        }\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport function useStore<T>(store: Store<T>) {\r\n    const [value, setValue] = useState(store.state);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = store.subscribe((oldVal, newVal) => {\r\n            setValue(newVal);\r\n        });\r\n        return unsubscribe\r\n    }, [store.id]);\r\n\r\n\r\n    const newSetValue = (newVal: T | ((old: T) => T)) => {\r\n        store.update(newVal);\r\n    }\r\n    const returnVal : [T, (newVal: T | ((old: T) => T)) => void] = [value,newSetValue];\r\n    return returnVal;\r\n}\r\n\r\nexport function useStores<T>(stores: { [k: string]: Store<T> }):\r\n    [\r\n        { [k: string]: T },\r\n        (\r\n            id: string,\r\n            newVal: T | ((old: T) => T)\r\n        ) => void\r\n    ] {\r\n    const [values, setValues] = useState(() => Object.fromEntries(Object.entries(stores).map(([id, store]) => [id, store.state])));\r\n    const ids = [Object.entries(stores).map(item => item[1].id)];\r\n\r\n    useLayoutEffect(() => {\r\n        // console.log(\"stores has changed\")\r\n        const unsubscribes = Object.entries(stores).map(([id, store]) => store.subscribe((oldVal, newVal) => {\r\n            setValues((oldValues) => ({ ...oldValues, [id]: newVal }));\r\n        }));\r\n\r\n        return () => unsubscribes.forEach(item => item());\r\n    }, [ids.join(\"-\")]);\r\n\r\n\r\n    const setNewValue = (id: string, newVal: T | ((old: T) => T)) => {\r\n        stores[id].update(newVal)\r\n    }\r\n\r\n    const returnVal : [{[k: string]: T}, ((id: string, newVal: T | ((old: T) => T)) => void)] =  [values, setNewValue];\r\n\r\n    return returnVal;\r\n}","import { Store, useStore } from \"./Store\";\r\n\r\n// export const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage['jwt']);\r\n\r\nexport const authStore = new Store<null | string>(typeof localStorage === \"undefined\" ? null : localStorage.getItem('AuthToken') ? JSON.parse(String(localStorage.getItem('AuthToken'))) : false);\r\n\r\n\r\nexport const useAuth = () => {\r\n    const [auth, setAuth] = useStore(authStore);\r\n\r\n    return {\r\n        auth, setAuth,\r\n        login(AuthToken: string) {\r\n            setAuth(AuthToken);\r\n        },\r\n        logout() {\r\n            localStorage.clear()\r\n            sessionStorage.clear()\r\n            setAuth(null);\r\n        },\r\n    }\r\n};","import { Store, useStore } from \"./Store\";\r\nimport getlevel from \"../utils/api/getlevel\";\r\nimport postlevel from \"../utils/api/postlevel\";\r\nimport editlevel from \"../utils/api/editlevel\";\r\nimport deletelevel from \"../utils/api/deletelevel\";\r\nexport class levelItem {\r\n\r\n    id: String;\r\n    l_level: String;\r\n    l_icon: String;\r\n    l_qrcode: String;\r\n    l_title: String;\r\n    l_stitle: String;\r\n    l_body: String;\r\n    l_bodytype: String;\r\n    l_bodyoptions: String;\r\n    locations: boolean;\r\n    l_media: String;\r\n    l_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    completion_image: String;\r\n    clue_image: String;\r\n    l_qr_id: String;\r\n    constructor(o: {\r\n        id: String;\r\n        l_level: String;\r\n        l_icon: String;\r\n        l_qrcode: String;\r\n        l_title: String;\r\n        l_stitle: String;\r\n        l_body: String;\r\n        l_bodytype: String;\r\n        l_bodyoptions: String;\r\n        locations: boolean;\r\n        l_media: String;\r\n        l_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        completion_image: String;\r\n        clue_image: String\r\n        l_qr_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.l_level = o.l_level;\r\n        this.l_icon = o.l_icon;\r\n        this.l_qrcode = o.l_qrcode;\r\n        this.l_title = o.l_title;\r\n        this.l_stitle = o.l_stitle;\r\n        this.l_body = o.l_body;\r\n        this.l_bodytype = o.l_bodytype;\r\n        this.l_bodyoptions = o.l_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.l_media = o.l_media;\r\n        this.l_misc = o.l_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.completion_image = o.completion_image;\r\n        this.clue_image = o.clue_image;\r\n        this.l_qr_id = o.l_qr_id;\r\n    }\r\n}\r\n\r\nexport const levelStore = new Store<levelItem[] | false>(false);\r\n\r\nexport const levelstore = () => {\r\n    const [level, setlevel] = useStore(levelStore);\r\n\r\n    return {\r\n        level, setlevel,\r\n\r\n        async loadlevel() {\r\n            await getlevel(\"\").then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setlevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadlevelwithid(id: any) {\r\n            await getlevel(id).then(\r\n                (data) => {\r\n                    console.log(\"kjsaksahdfadfasdfas\", data);\r\n                    setlevel(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postlevel(data: any) {\r\n            await postlevel(data).then((res) => {\r\n                console.log(res);\r\n                setlevel((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editlevel(id: any, data: any) {\r\n            await editlevel(id, data).then((res) => {\r\n                console.log(res);\r\n                setlevel((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.l_level = data.l_level\r\n                            x.instance_id = data.instance_id\r\n                            x.l_icon = data.l_icon\r\n                            x.l_qrcode = data.l_qrcode\r\n                            x.l_title = data.l_title\r\n                            x.l_stitle = data.l_stitle\r\n                            x.l_body = data.l_body\r\n                            x.l_bodytype = data.l_bodytype\r\n                            x.l_bodyoptions = data.l_bodyoptions\r\n                            x.locations = data.locations\r\n                            x.l_media = data.l_media\r\n                            x.l_misc = data.l_misc\r\n                            x.completion_image = data.completion_image\r\n                            x.clue_image = data.clue_image\r\n                            x.l_qr_id = data.l_qr_id\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletelevel(id: any) {\r\n            await deletelevel(id).then((res) => {\r\n                console.log(res);\r\n                setlevel(level && level.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n            })\r\n        }\r\n    }\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getlogo from \"../utils/api/getlogo\";\r\nimport editlogo from \"../utils/api/editlogo\";\r\nimport postlogo from \"../utils/api/postlogo\";\r\nimport deletelogo from \"../utils/api/deletelogo\";\r\nexport class logoItem {\r\n\r\n    id: String;\r\n    i_logo: String;\r\n    position: String;\r\n    section: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_logo: String;\r\n        position: String;\r\n        section: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_logo = o.i_logo;\r\n        this.position = o.position;\r\n        this.section = o.section;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport const logoStore = new Store<logoItem[] | false>(false);\r\n\r\nexport const logostore = () => {\r\n    const [logo, setlogo] = useStore(logoStore);\r\n\r\n    return {\r\n        logo, setlogo,\r\n\r\n        async loadlogo() {\r\n            await getlogo(\"\").then(\r\n                (data) => {\r\n                    setlogo(data.data.results);\r\n                }\r\n            ) \r\n        },\r\n        async loadlogowithid(id: any) {\r\n            await getlogo(id).then(\r\n                (data) => {\r\n                      setlogo(data.data.results);\r\n                }\r\n            )\r\n\r\n        },\r\n        async postlogo(data: any) {\r\n            await postlogo(data).then((res) => {\r\n                   setlogo((oldArray: any) => [...oldArray, res.data]);\r\n\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editlogo(id: any, data: any) {\r\n            await editlogo(id, data).then((res) => {\r\n                  setlogo((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.instance_id = data.instance_id\r\n                            x.i_logo = data.i_logo\r\n                            x.position = data.position\r\n                            x.section = data.section\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletelogo(id: any) {\r\n            await deletelogo(id).then((res) => {\r\n                   setlogo(logo && logo.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n ","import { Store, useStore } from \"./Store\";\r\nimport getlogo_arrayposition from \"../utils/api/getlogo_arrayposition\";\r\nimport getlogo_arrayposition_iid from \"utils/api/getlogo_arrayposition_iid\";\r\n\r\nexport class logopositionItem {\r\n\r\n    id: String;\r\n    i_logo: String;\r\n    position: String;\r\n    section: String\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        i_logo: String;\r\n        position: String;\r\n        section: String\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.i_logo = o.i_logo;\r\n        this.position = o.position;\r\n        this.section = o.section;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n    }\r\n}\r\n\r\nexport class temp {\r\n    section1: logopositionItem[][]\r\n    section2: logopositionItem[][]\r\n    section3: logopositionItem[][]\r\n    constructor(o: {\r\n        section1: logopositionItem[][];\r\n        section2: logopositionItem[][];\r\n        section3: logopositionItem[][];\r\n    }) {\r\n        this.section1 = o.section1;\r\n        this.section2 = o.section2;\r\n        this.section3 = o.section3;\r\n    }\r\n}\r\n\r\nexport const logopositionStore = new Store<temp | false>(false);\r\n\r\nexport const logopositionstore = () => {\r\n    const [logoposition, setlogoposition] = useStore(logopositionStore);\r\n\r\n    return {\r\n        logoposition, setlogoposition,\r\n\r\n        async loadlogo_arrayposition() {\r\n            await getlogo_arrayposition().then(\r\n                (data) => {\r\n                    console.log(\"loadlogo_arrayposition\", data);\r\n                    setlogoposition(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadlogo_arrayposition_iid(id:any) {\r\n            await getlogo_arrayposition_iid(id).then(\r\n                (data) => {\r\n                    console.log(\"loadlogo_arrayposition\", data.data.results);\r\n                    setlogoposition(data.data.results);\r\n                }\r\n            )\r\n        },\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getuser from \"../utils/api/getuser\";\r\nimport edituser from \"../utils/api/edituser\";\r\n\r\nexport class userItem {\r\n\r\n    id: String;\r\n    image: String;\r\n    firstname: String;\r\n    lastname: String;\r\n    email: String;\r\n    address: String;\r\n    dob: String;\r\n    user_type: String;\r\n    gender: String;\r\n    auth_type: String;\r\n    photo_url: String;\r\n    dial_code: String;\r\n    phone: String;\r\n    is_deleted: String;\r\n    updated_by: String;\r\n    owned_by: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    created_by: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        image: String;\r\n        firstname: String;\r\n        lastname: String;\r\n        email: String;\r\n        address: String;\r\n        dob: String;\r\n        user_type: String;\r\n        gender: String;\r\n        auth_type: String;\r\n        photo_url: String;\r\n        dial_code: String;\r\n        phone: String;\r\n        is_deleted: String;\r\n        updated_by: String;\r\n        owned_by: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        created_by: String;\r\n    }) {\r\n        this.id = o.id;\r\n        this.image = o.image;\r\n        this.firstname = o.firstname;\r\n        this.lastname = o.lastname;\r\n        this.email = o.email;\r\n        this.address = o.address;\r\n        this.dob = o.dob;\r\n        this.user_type = o.user_type;\r\n        this.gender = o.gender;\r\n        this.auth_type = o.auth_type;\r\n        this.photo_url = o.photo_url;\r\n        this.dial_code = o.dial_code;\r\n        this.phone = o.phone;\r\n        this.is_deleted = o.is_deleted;\r\n        this.updated_by = o.updated_by;\r\n        this.owned_by = o.owned_by;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.created_by = o.created_by;\r\n    }\r\n}\r\n\r\nexport const userStore = new Store<userItem[] | false>(false);\r\nexport const userDetail =  new Store<userItem | string>(typeof localStorage === \"undefined\" ? false : localStorage.getItem('UserDetails') ? JSON.parse(String(localStorage.getItem('UserDetails'))) : false);\r\nexport const userstore = () => {\r\n    const [user, setuser] = useStore(userStore);\r\n    const [selfuser, setselfuser] = useStore(userDetail);\r\n\r\n    return {\r\n        user, setuser, selfuser, setselfuser,\r\n\r\n        async loaduser() {\r\n            await getuser().then(\r\n                (data) => { \r\n                    setuser(data.data);\r\n                }\r\n            )\r\n\r\n        },\r\n        async edituser(id: any, data: any) {\r\n            await edituser(id, data).then((res) => { \r\n                setuser((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.image = data.image\r\n                            x.firstname = data.firstname\r\n                            x.lastname = data.lastname\r\n                            x.email = data.email\r\n                            x.address = data.address\r\n                            x.dob = data.dob\r\n                            x.user_type = data.user_type\r\n                            x.gender = data.gender\r\n                            x.auth_type = data.auth_type\r\n                            x.photo_url = data.photo_url\r\n                            x.dial_code = data.dial_code\r\n                            x.phone = data.phone\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n    }\r\n\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getleveldetails from \"../utils/api/getleveldetails\";\r\n\r\n\r\nexport class leveldetailsItem {\r\n\r\n    id: String;\r\n    l_level: String;\r\n    l_icon: String;\r\n    l_qrcode: String;\r\n    l_title: String;\r\n    l_stitle: String;\r\n    l_body: String;\r\n    l_bodytype: String;\r\n    l_bodyoptions: String;\r\n    locations: boolean;\r\n    l_media: String;\r\n    l_misc: String;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    SubLevelData: String;\r\n    GameDataLog: any;\r\n    constructor(o: {\r\n        id: String;\r\n        l_level: String;\r\n        l_icon: String;\r\n        l_qrcode: String;\r\n        l_title: String;\r\n        l_stitle: String;\r\n        l_body: String;\r\n        l_bodytype: String;\r\n        l_bodyoptions: String;\r\n        locations: boolean;\r\n        l_media: String;\r\n        l_misc: String;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        SubLevelData: any;\r\n        GameDataLog: any;\r\n    }) {\r\n        this.id = o.id;\r\n        this.l_level = o.l_level;\r\n        this.l_icon = o.l_icon;\r\n        this.l_qrcode = o.l_qrcode;\r\n        this.l_title = o.l_title;\r\n        this.l_stitle = o.l_stitle;\r\n        this.l_body = o.l_body;\r\n        this.l_bodytype = o.l_bodytype;\r\n        this.l_bodyoptions = o.l_bodyoptions;\r\n        this.locations = o.locations;\r\n        this.l_media = o.l_media;\r\n        this.l_misc = o.l_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.SubLevelData = o.SubLevelData;\r\n        this.GameDataLog = o.GameDataLog;\r\n    }\r\n}\r\n\r\nexport const leveldetailsStore = new Store<leveldetailsItem[] | false>(false);\r\n\r\nexport const leveldetailslstore = () => {\r\n    const [leveldetails, setleveldetails] = useStore(leveldetailsStore);\r\n\r\n    return {\r\n        leveldetails, setleveldetails,\r\n\r\n        async loadleveldetails() {\r\n            await getleveldetails().then(\r\n                (data) => {\r\n                    console.log(\"getleveldetails\", data);\r\n                    setleveldetails(data.data.results);\r\n                }\r\n            )\r\n        }\r\n    }\r\n}","import { Store, useStore } from \"./Store\";\r\nimport getsublevel from \"../utils/api/getsublevel\";\r\nimport postsublevel from \"../utils/api/postsublevel\";\r\nimport editsublevel from \"../utils/api/editsublevel\";\r\nimport deletesublevel from \"../utils/api/deletesublevel\";\r\nimport getsublevel_data_byid from \"../utils/api/getsublevel_data_byid\";\r\nexport class sublevelItem {\r\n\r\n    id: String;\r\n    sl_types: String;\r\n    sl_icon: String;\r\n    sl_title: String;\r\n    sl_stitle: String;\r\n    sl_body: String;\r\n    sl_bodytype: String;\r\n    sl_bodyoptions: String;\r\n    sl_misc: boolean;\r\n    created_at: String;\r\n    updated_at: String;\r\n    instance_id: String;\r\n    level_id: String;\r\n    sl_media: String;\r\n\r\n    constructor(o: {\r\n        id: String;\r\n        sl_types: String;\r\n        sl_icon: String;\r\n        sl_title: String;\r\n        sl_stitle: String;\r\n        sl_body: String;\r\n        sl_bodytype: String;\r\n        sl_bodyoptions: String;\r\n        sl_misc: boolean;\r\n        created_at: String;\r\n        updated_at: String;\r\n        instance_id: String;\r\n        level_id: String;\r\n        sl_media: String\r\n    }) {\r\n        this.id = o.id;\r\n        this.sl_types = o.sl_types;\r\n        this.sl_icon = o.sl_icon;\r\n        this.sl_title = o.sl_title;\r\n        this.sl_stitle = o.sl_stitle;\r\n        this.sl_body = o.sl_body;\r\n        this.sl_bodytype = o.sl_bodytype;\r\n        this.sl_bodyoptions = o.sl_bodyoptions;\r\n        this.sl_misc = o.sl_misc;\r\n        this.created_at = o.created_at;\r\n        this.updated_at = o.updated_at;\r\n        this.instance_id = o.instance_id;\r\n        this.level_id = o.level_id;\r\n        this.sl_media = o.sl_media;\r\n    }\r\n}\r\n\r\nexport const sublevelStore = new Store<sublevelItem[] | false>(false);\r\n\r\nexport const sublevel1Store = new Store<sublevelItem | false>(false);\r\n\r\n\r\nexport const sublevelstore = () => {\r\n    const [sublevel, setsublevel] = useStore(sublevelStore);\r\n    const [sublevel1, setsublevel1] = useStore(sublevel1Store);\r\n\r\n    return {\r\n        sublevel, setsublevel,\r\n        sublevel1, setsublevel1,\r\n        async loadsublevel() {\r\n            await getsublevel(\"\", \"\").then(\r\n                (data) => {\r\n                    setsublevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async loadsublevelwithid(instanceid: any, levelid: any) {\r\n            await getsublevel(instanceid, levelid).then(\r\n                (data) => {\r\n                    setsublevel(data.data.results);\r\n                }\r\n            )\r\n        },\r\n        async postsublevel(data: any) {\r\n            await postsublevel(data).then((res) => {\r\n                console.log(res);\r\n                setsublevel((oldArray: any) => [...oldArray, res.data]);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async editsublevel(id: any, data: any) {\r\n            await editsublevel(id, data).then((res) => {\r\n                console.log(res);\r\n                setsublevel((oldarr) => {\r\n                    return (oldarr) && oldarr.map((obj: any) => {\r\n                        const getobj = (o: any) => {\r\n                            let x = o;\r\n                            x.instance_id = data.instance_id\r\n                            x.level_id = data.level_id\r\n                            x.sl_types = data.sl_types\r\n                            x.sl_icon = data.sl_icon\r\n                            x.sl_title = data.sl_title\r\n                            x.sl_stitle = data.sl_stitle\r\n                            x.sl_body = data.sl_body\r\n                            x.sl_bodytype = data.sl_bodytype\r\n                            x.sl_bodyoptions = data.sl_bodyoptions\r\n                            x.sl_misc = data.sl_misc\r\n                            x.sl_media = data.sl_media\r\n                            return x;\r\n                        }\r\n                        return (String(obj.id) === String(id)) ? getobj(obj) : obj;\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        async deletesublevel(id: any) {\r\n            await deletesublevel(id).then((res) => {\r\n                console.log(res);\r\n                setsublevel(sublevel && sublevel.filter(ele => ele.id !== id))\r\n            }).catch((res) => {\r\n                console.log(res);\r\n            })\r\n        },\r\n        async loadsublevel1_data_byid(id: any) {\r\n            await getsublevel_data_byid(id).then(\r\n                (data) => {\r\n                    console.log(\"getsublevel_data_byid\", data);\r\n                    setsublevel1(data.data.results);\r\n                }\r\n            )\r\n        },\r\n    }\r\n}"],"sourceRoot":""}